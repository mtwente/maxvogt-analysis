[
  {
    "objectID": "fonts/LICENSE-OFL.html",
    "href": "fonts/LICENSE-OFL.html",
    "title": "SIL OPEN FONT LICENSE",
    "section": "",
    "text": "Copyright 2020 The Jost Project Authors (https://github.com/indestructible-type/Jost)\nThis Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL\n\nSIL OPEN FONT LICENSE\nVersion 1.1 - 26 February 2007\nPREAMBLE The goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others.\nThe OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded, redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives.\nDEFINITIONS “Font Software” refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation.\n“Original Version” refers to the collection of Font Software components as distributed by the Copyright Holder(s).\n“Modified Version” refers to any derivative made by adding to, deleting, or substituting — in part or in whole — any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment.\n“Author” refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software.\nPERMISSION & CONDITIONS Permission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions:\n\nNeither the Font Software nor any of its individual components, in Original or Modified Versions, may be sold by itself.\nOriginal or Modified Versions of the Font Software may be bundled, redistributed and/or sold with any software, provided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user.\nThe name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote, endorse or advertise any Modified Version, except to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission.\nThe Font Software, modified or unmodified, in part or in whole, must be distributed entirely under this license, and must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created using the Font Software.\n\nTERMINATION This license becomes null and void if any of the above conditions are not met.\nDISCLAIMER THE FONT SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Project Information",
    "section": "",
    "text": "Moritz Twente  studied urban planning (B.Sc.) at Bauhaus-Universität Weimar and Northern European Studies (B.A.) at Humboldt-Universität zu Berlin. His research interest lies in the role of politics at the intersection of space, design and the built environment. He works as data steward at Stadt.Geschichte.Basel and is enrolled in the Political Science and Digital Humanities programmes (M.A.) at Universität Basel.\n\n\n\nLuisa Omonsky  is working as a research assistant in the interdisciplinary DFG-project ‘Wohnen im Denkmal’ (Living in a Monument) at Technische Universität Wien in cooperation with Bauhaus-Universität Weimar. She graduated from the Urban Planning programme (B.Sc.) at Bauhaus-Universität Weimar and Heritage Conservation programme (M.A.) at Otto-Friedrich-Universität Bamberg, additionally studying in the Art History programme (M.A.). Her research interests include 20th century architecture, especially post-war modernism and post-modernism.\n\n\n\n\n\nmaxvogt-analysis contains research data – mainly geodata and Jupyter Notebooks – related to a research project on the railway station designs by Max Vogt and the spatial syntax features.\nThe analyis is split up in Jupyter Notebooks that are available in this repository and can be launched either locally or using Binder.\nThe most important tool used for the spatial analysis is momepy1 by Martin Fleischmann and James Gaboardi. See the documentation for momepy examples and tutorials.\nGeodata used for the analysis is retrieved from OpenStreetMap using the OSMnx2 package by Geoff Boeing. See readthedocs.io for documentation.\n\n\n\nSee mtwente.github.io/maxvogt for a collection of buildings and smaller physical structures designed by Max Vogt. There, results of the analyses in this repository are available as collection items. For each object, a short description is provided with information on the object’s spatial context and its design features from an urban design perspective.",
    "crumbs": [
      "Data",
      "Project Information"
    ]
  },
  {
    "objectID": "about.html#people",
    "href": "about.html#people",
    "title": "Project Information",
    "section": "",
    "text": "Moritz Twente  studied urban planning (B.Sc.) at Bauhaus-Universität Weimar and Northern European Studies (B.A.) at Humboldt-Universität zu Berlin. His research interest lies in the role of politics at the intersection of space, design and the built environment. He works as data steward at Stadt.Geschichte.Basel and is enrolled in the Political Science and Digital Humanities programmes (M.A.) at Universität Basel.\n\n\n\nLuisa Omonsky  is working as a research assistant in the interdisciplinary DFG-project ‘Wohnen im Denkmal’ (Living in a Monument) at Technische Universität Wien in cooperation with Bauhaus-Universität Weimar. She graduated from the Urban Planning programme (B.Sc.) at Bauhaus-Universität Weimar and Heritage Conservation programme (M.A.) at Otto-Friedrich-Universität Bamberg, additionally studying in the Art History programme (M.A.). Her research interests include 20th century architecture, especially post-war modernism and post-modernism.",
    "crumbs": [
      "Data",
      "Project Information"
    ]
  },
  {
    "objectID": "about.html#tools",
    "href": "about.html#tools",
    "title": "Project Information",
    "section": "",
    "text": "maxvogt-analysis contains research data – mainly geodata and Jupyter Notebooks – related to a research project on the railway station designs by Max Vogt and the spatial syntax features.\nThe analyis is split up in Jupyter Notebooks that are available in this repository and can be launched either locally or using Binder.\nThe most important tool used for the spatial analysis is momepy1 by Martin Fleischmann and James Gaboardi. See the documentation for momepy examples and tutorials.\nGeodata used for the analysis is retrieved from OpenStreetMap using the OSMnx2 package by Geoff Boeing. See readthedocs.io for documentation.",
    "crumbs": [
      "Data",
      "Project Information"
    ]
  },
  {
    "objectID": "about.html#project-report",
    "href": "about.html#project-report",
    "title": "Project Information",
    "section": "",
    "text": "See mtwente.github.io/maxvogt for a collection of buildings and smaller physical structures designed by Max Vogt. There, results of the analyses in this repository are available as collection items. For each object, a short description is provided with information on the object’s spatial context and its design features from an urban design perspective.",
    "crumbs": [
      "Data",
      "Project Information"
    ]
  },
  {
    "objectID": "about.html#footnotes",
    "href": "about.html#footnotes",
    "title": "Project Information",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFleischmann, M. (2019) ‘momepy: Urban Morphology Measuring Toolkit’, Journal of Open Source Software, 4(43), p. 1807. doi: 10.21105/joss.01807.↩︎\nBoeing, G. (2024). Modeling and Analyzing Urban Networks and Amenities with OSMnx. Working paper. https://geoffboeing.com/publications/osmnx-paper/↩︎",
    "crumbs": [
      "Data",
      "Project Information"
    ]
  },
  {
    "objectID": "CHANGELOG.html",
    "href": "CHANGELOG.html",
    "title": "Changelog",
    "section": "",
    "text": "All notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\n\n\nInitialise repository\nAdd Buchs SG and Horgen analyses\nAdd momepy files to gitignore",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Changelog"
    ]
  },
  {
    "objectID": "CHANGELOG.html#unreleased",
    "href": "CHANGELOG.html#unreleased",
    "title": "Changelog",
    "section": "",
    "text": "Initialise repository\nAdd Buchs SG and Horgen analyses\nAdd momepy files to gitignore",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Changelog"
    ]
  },
  {
    "objectID": "LICENSE-AGPL.html",
    "href": "LICENSE-AGPL.html",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007\nCopyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n                        Preamble\nThe GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.\nThe licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users.\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\nDevelopers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.\nA secondary benefit of defending all users’ freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.\nThe GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.\nAn older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.\nThe precise terms and conditions for copying, distribution and modification follow.\n                   TERMS AND CONDITIONS\n\nDefinitions.\n\n“This License” refers to version 3 of the GNU Affero General Public License.\n“Copyright” also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\n“The Program” refers to any copyrightable work licensed under this License. Each licensee is addressed as “you”. “Licensees” and “recipients” may be individuals or organizations.\nTo “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work.\nA “covered work” means either the unmodified Program or a work based on the Program.\nTo “propagate” a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\nTo “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays “Appropriate Legal Notices” to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\n\nSource Code.\n\nThe “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work.\nA “Standard Interface” means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\nThe “System Libraries” of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A “Major Component”, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\nThe “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work’s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\nThe Corresponding Source for a work in source code form is that same work.\n\nBasic Permissions.\n\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\nProtecting Users’ Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work’s users, your or third parties’ legal rights to forbid circumvention of technological measures.\n\nConveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program’s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an “aggregate” if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation’s users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\nConveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\nA “User Product” is either (1) a “consumer product”, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, “normally used” refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\n“Installation Information” for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\nAdditional Terms.\n\n“Additional permissions” are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\nTermination.\n\nYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\nAcceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\nAn “entity transaction” is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party’s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\nPatents.\n\nA “contributor” is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor’s “contributor version”.\nA contributor’s “essential patent claims” are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, “control” includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor’s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\nIn the following three paragraphs, a “patent license” is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To “grant” such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\nIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. “Knowingly relying” means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient’s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\nA patent license is “discriminatory” if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\nNo Surrender of Others’ Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\nNotwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.\nNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.\n\nRevised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy’s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\nLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\nDisclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the “copyright” line and a pointer to where the full notice is found.\n&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\nAlso add information on how to contact you by electronic and paper mail.\nIf your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a “Source” link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.\nYou should also get your employer (if you work as a programmer) or school, if any, to sign a “copyright disclaimer” for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/.\n\n\n\n Back to top",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "License (Code)"
    ]
  },
  {
    "objectID": "analysis/stäfa_uerikon.html",
    "href": "analysis/stäfa_uerikon.html",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - STAE037 - UER020\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Stäfa'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/stäfa_uerikon.html#input-data",
    "href": "analysis/stäfa_uerikon.html#input-data",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\naccess\nemergency\nname\nopening_hours\noperator\nphone\ngeometry\nbuilding\naddr:city\naddr:country\n...\nmin_level\nroof:material\nvoltage\nchanging_table\nchanging_table:fee\nchanging_table:location\ndrinking_water\nunisex\nways\ntype\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n256645677\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (8.72774 47.23797)\nshed\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n256658681\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (8.72057 47.24549)\nresidential\nStäfa\nCH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n601050444\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (8.71481 47.25433)\nresidential\nStäfa\nCH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2708956850\nNaN\nfire_hydrant\nNaN\nNaN\nNaN\nNaN\nPOINT (8.73687 47.23436)\nresidential\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nway\n21159827\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.73805 47.24505, 8.73799 47.24551, ...\nyes\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nrelation\n161951\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.73177 47.24082, 8.73163 47.24052, ...\nyes\nStäfa\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[23659795, 23659797]\nmultipolygon\n\n\n3604007\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.72752 47.24065, 8.72732 47.24071, ...\ncommercial\nStäfa\nCH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[268962769, 150428877]\nmultipolygon\n\n\n10096917\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.74582 47.23419, 8.74588 47.23433, ...\nyes\nUerikon\nCH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[23764678, 729883860]\nmultipolygon\n\n\n11731437\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.72180 47.24049, 8.72169 47.24051, ...\nroof\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[856640965, 856640964]\nmultipolygon\n\n\n16013261\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.72091 47.25813, 8.72095 47.25810, ...\nyes\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[1184515455, 179187221]\nmultipolygon\n\n\n\n\n3201 rows × 99 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    3197\nPoint         4\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2698373.320 1233495.895, 2698368.591...\n0\n\n\n1\nPOLYGON ((2697855.271 1232806.381, 2697829.106...\n1\n\n\n2\nPOLYGON ((2697552.788 1232908.885, 2697551.967...\n2\n\n\n3\nPOLYGON ((2697714.501 1232916.791, 2697727.308...\n3\n\n\n4\nPOLYGON ((2697828.947 1232936.543, 2697814.624...\n4\n\n\n...\n...\n...\n\n\n3192\nPOLYGON ((2697905.775 1233017.234, 2697896.027...\n3192\n\n\n3193\nPOLYGON ((2697584.585 1232993.269, 2697569.441...\n3193\n\n\n3194\nPOLYGON ((2698982.253 1232298.253, 2698986.442...\n3194\n\n\n3195\nPOLYGON ((2697151.560 1232968.524, 2697143.870...\n3195\n\n\n3196\nPOLYGON ((2697052.442 1234928.437, 2697055.346...\n3196\n\n\n\n\n3197 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nname\nhighway\nmaxspeed\noneway\nreversed\nlength\ngeometry\nlanes\nref\naccess\nbridge\njunction\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n34091427\n34183916\n0\n[151176160, 182820787]\n[Seidenhausweg, Sportplatzweg]\nunclassified\n50\nFalse\nFalse\n406.483\nLINESTRING (2696262.680 1235238.542, 2696265.9...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n34091630\n0\n364136234\nBergstrasse\ntertiary\n80\nFalse\nFalse\n437.233\nLINESTRING (2696262.680 1235238.542, 2696267.8...\n2\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n34183916\n34091427\n0\n[151176160, 182820787]\n[Seidenhausweg, Sportplatzweg]\nunclassified\n50\nFalse\nTrue\n406.483\nLINESTRING (2696485.968 1234961.926, 2696489.6...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n34091630\n34159457\n0\n146668708\nLangholzstrasse\ntertiary\nNaN\nFalse\nFalse\n158.652\nLINESTRING (2696360.840 1235498.068, 2696362.5...\n2\n722\nNaN\nNaN\nNaN\nNaN\n\n\n34091427\n0\n364136234\nBergstrasse\ntertiary\n80\nFalse\nTrue\n437.233\nLINESTRING (2696360.840 1235498.068, 2696357.9...\n2\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2747796991\n1630622637\n0\n269603429\nHäldeliweg\nresidential\nNaN\nFalse\nFalse\n34.090\nLINESTRING (2696923.655 1233275.807, 2696932.3...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1630622802\n1630622637\n0\n269596626\nIm Grafen\nresidential\nNaN\nFalse\nTrue\n162.547\nLINESTRING (2696784.489 1233368.096, 2696789.6...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2640239443\n1630622125\n0\n258699595\nOberlandstrasse\ntertiary\n50\nTrue\nFalse\n11.444\nLINESTRING (2697187.195 1232878.341, 2697179.4...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1630622158\n0\n258699604\nBahnhofstrasse\nresidential\n50\nTrue\nFalse\n28.787\nLINESTRING (2697187.195 1232878.341, 2697182.3...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n6354084312\n6354084309\n0\n8166666\nWeid Strasse\nresidential\nNaN\nFalse\nTrue\n15.612\nLINESTRING (2698857.765 1232677.450, 2698858.1...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n645 rows × 14 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2696262.680 1235238.542, 2696267.8...\n0\n\n\n1\nLINESTRING (2696360.840 1235498.068, 2696362.5...\n1\n\n\n2\nLINESTRING (2696360.840 1235498.068, 2696357.9...\n2\n\n\n3\nLINESTRING (2696360.840 1235498.068, 2696363.8...\n3\n\n\n4\nLINESTRING (2696510.426 1235444.912, 2696469.0...\n4\n\n\n...\n...\n...\n\n\n561\nLINESTRING (2700418.230 1232640.311, 2700396.5...\n561\n\n\n562\nLINESTRING (2700337.547 1232581.026, 2700349.8...\n562\n\n\n563\nLINESTRING (2700620.353 1232475.561, 2700612.3...\n563\n\n\n564\nLINESTRING (2700626.096 1232440.544, 2700613.9...\n564\n\n\n565\nLINESTRING (2701605.282 1232642.227, 2701536.4...\n565\n\n\n\n\n566 rows × 2 columns"
  },
  {
    "objectID": "analysis/stäfa_uerikon.html#generated-data",
    "href": "analysis/stäfa_uerikon.html#generated-data",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [2022, 3193, 3033, 1777].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2698373.320 1233495.895, 2698368.591...\n0\n332\n332\n\n\n0\nPOLYGON ((2698373.320 1233495.895, 2698368.591...\n0\n333\n333\n\n\n1\nPOLYGON ((2697855.271 1232806.381, 2697829.106...\n1\n209\n209\n\n\n1\nPOLYGON ((2697855.271 1232806.381, 2697829.106...\n1\n208\n208\n\n\n2\nPOLYGON ((2697552.788 1232908.885, 2697551.967...\n2\n338\n338\n\n\n...\n...\n...\n...\n...\n\n\n3194\nPOLYGON ((2698982.253 1232298.253, 2698986.442...\n3194\n345\n345\n\n\n3194\nPOLYGON ((2698982.253 1232298.253, 2698986.442...\n3194\n351\n351\n\n\n3195\nPOLYGON ((2697151.560 1232968.524, 2697143.870...\n3195\n244\n244\n\n\n3196\nPOLYGON ((2697052.442 1234928.437, 2697055.346...\n3196\n14\n14\n\n\n3196\nPOLYGON ((2697052.442 1234928.437, 2697055.346...\n3196\n15\n15\n\n\n\n\n4782 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/stäfa_uerikon.html#measure",
    "href": "analysis/stäfa_uerikon.html#measure",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Stäfa_Uerikon/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Stäfa_Uerikon/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Stäfa_Uerikon/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Stäfa_Uerikon/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/measurement.py:74: RuntimeWarning: invalid value encountered in distance\n  return lib.distance(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Stäfa_Uerikon/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Stäfa_Uerikon/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Stäfa_Uerikon/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n2500\nPOLYGON ((2698331.703 1232220.471, 2698331.538...\n237\n6866.444129\n0.993648\n0.011748\n15535.216856\n0.012780\n\n\n1\n891\nPOLYGON ((2698422.527 1232257.693, 2698422.480...\n237\n5970.456004\n0.921699\n0.017126\n18746.423377\n0.052376\n\n\n2\n892\nPOLYGON ((2698458.116 1232271.626, 2698457.880...\n237\n6151.789954\n0.985336\n0.012387\n20110.100703\n0.031100\n\n\n3\n2098\nPOLYGON ((2698575.522 1232305.198, 2698575.512...\n344\n8742.709248\n0.989030\n0.007992\n18462.377367\n0.006081\n\n\n4\n2505\nPOLYGON ((2698725.988 1232254.241, 2698726.933...\n344\n7212.635288\n0.997727\n0.014111\n26513.924683\n0.008221\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3192\n847\nPOLYGON ((2696721.845 1234524.057, 2696720.909...\n133\n10186.764698\n0.986671\n0.015340\n73013.916230\n0.005508\n\n\n3193\n1273\nPOLYGON ((2696602.965 1234577.894, 2696603.807...\n492\n16193.850820\n0.975176\n0.006163\n44470.945545\n0.014577\n\n\n3194\n989\nPOLYGON ((2696714.113 1234661.004, 2696712.556...\n134\n30691.363646\n0.999108\n0.006309\n82030.021220\n0.003041\n\n\n3195\n993\nPOLYGON ((2696451.296 1235418.364, 2696452.191...\n7\n33735.118851\n0.997296\n0.001508\n65555.884664\n0.003565\n\n\n3196\n2657\nPOLYGON ((2696506.694 1235451.822, 2696505.512...\n5\n31820.765813\n0.999825\n0.001554\n65555.884664\n0.001557\n\n\n\n\n3197 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/stäfa_uerikon.html#understanding-the-context",
    "href": "analysis/stäfa_uerikon.html#understanding-the-context",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42871/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n400.203144\n854.118290\n1459.572656\n0.897943\n0.951613\n0.971606\n0.034153\n0.046627\n0.064236\n5130.481217\n...\n1.232292e+06\n5.0\n5.0\n5.0\n0.000031\n0.000031\n0.000031\n1.000000\n1.000000\n1.000000\n\n\n1\n620.933773\n1308.693241\n2336.985762\n0.899132\n0.945194\n0.975397\n0.028475\n0.042515\n0.052073\n7460.276233\n...\n1.232345e+06\n5.0\n5.0\n5.0\n0.000031\n0.000042\n0.000042\n0.666667\n0.666667\n1.000000\n\n\n2\n776.698957\n1221.761906\n2290.155248\n0.909423\n0.946980\n0.983590\n0.026259\n0.040447\n0.046964\n10296.524802\n...\n1.232345e+06\n5.0\n5.0\n5.0\n0.000042\n0.000042\n0.000042\n0.666667\n0.666667\n0.666667\n\n\n3\n1221.761906\n1669.431490\n3166.490797\n0.922372\n0.965395\n0.984201\n0.020083\n0.033979\n0.041190\n12276.560652\n...\n1.232365e+06\n5.0\n5.0\n5.0\n0.000042\n0.000042\n0.000042\n0.596491\n0.666667\n0.666667\n\n\n4\n1389.118965\n2097.288635\n3257.023124\n0.907817\n0.948563\n0.970825\n0.020213\n0.030619\n0.038494\n13621.857280\n...\n1.232421e+06\n5.0\n6.0\n6.0\n0.000018\n0.000032\n0.000032\n-1.000000\n2.000000\n2.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3192\n3401.340165\n6856.510825\n13306.191309\n0.948257\n0.977400\n0.992426\n0.012194\n0.016065\n0.024374\n37554.056195\n...\n1.234580e+06\n6.0\n6.0\n6.0\n0.000038\n0.000049\n0.000049\n1.333333\n1.600000\n1.600000\n\n\n3193\n2291.071533\n4492.239579\n8357.100678\n0.935210\n0.974586\n0.990977\n0.013792\n0.022299\n0.027525\n32031.925677\n...\n1.234580e+06\n1.0\n6.0\n6.5\n0.000038\n0.000049\n0.000081\n1.089744\n1.333333\n1.600000\n\n\n3194\n3580.816309\n8546.771389\n14825.712749\n0.951185\n0.983016\n0.994288\n0.008795\n0.013972\n0.022299\n39601.753499\n...\n1.234729e+06\n6.0\n6.0\n6.0\n0.000031\n0.000049\n0.000049\n1.600000\n1.600000\n2.000000\n\n\n3195\n32777.942332\n32777.942332\n32777.942332\n0.998561\n0.998561\n0.998561\n0.001531\n0.001531\n0.001531\n65555.884664\n...\n1.235471e+06\n7.0\n7.0\n7.0\n0.000051\n0.000051\n0.000051\n4.000000\n4.000000\n4.000000\n\n\n3196\n32777.942332\n32777.942332\n32777.942332\n0.998561\n0.998561\n0.998561\n0.001531\n0.001531\n0.001531\n65555.884664\n...\n1.235471e+06\n7.0\n7.0\n7.0\n0.000051\n0.000051\n0.000051\n4.000000\n4.000000\n4.000000\n\n\n\n\n3197 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Stäfa_Uerikon/convexity.svg')"
  },
  {
    "objectID": "analysis/stäfa_uerikon.html#clustering",
    "href": "analysis/stäfa_uerikon.html#clustering",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n-0.304128\n-0.336063\n-0.425262\n-1.486901\n-0.120854\n-0.205534\n0.127436\n0.475975\n1.078166\n-0.500441\n...\n-1.623362\n0.483050\n-0.157730\n-0.741170\n-0.992275\n-1.282364\n-1.509505\n1.596543\n1.310252\n0.865731\n\n\n1\n-0.188521\n-0.139134\n-0.150591\n-1.415118\n-0.654215\n0.236943\n-0.413471\n0.104076\n0.083350\n-0.207677\n...\n-1.523298\n0.483050\n-0.157730\n-0.741170\n-0.992275\n-1.179372\n-1.415375\n0.633134\n0.237223\n0.865731\n\n\n2\n-0.106940\n-0.176794\n-0.165251\n-0.794269\n-0.505855\n1.193159\n-0.624574\n-0.082981\n-0.334495\n0.148727\n...\n-1.523298\n0.483050\n-0.157730\n-0.741170\n-0.879851\n-1.179372\n-1.415375\n0.633134\n0.237223\n-0.088357\n\n\n3\n0.126160\n0.017144\n0.109083\n-0.012959\n1.024281\n1.264529\n-1.212846\n-0.667960\n-0.806817\n0.397540\n...\n-1.486531\n0.483050\n-0.157730\n-0.741170\n-0.879851\n-1.179372\n-1.415375\n0.430311\n0.237223\n-0.088357\n\n\n4\n0.213813\n0.202499\n0.137423\n-0.891134\n-0.374285\n-0.296682\n-1.200460\n-0.971903\n-1.027337\n0.566590\n...\n-1.380276\n0.483050\n0.634512\n0.356084\n-1.132346\n-1.279504\n-1.506891\n-4.183908\n4.529342\n3.727994\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3192\n1.267704\n2.264271\n3.283278\n1.548800\n2.021797\n2.224520\n-1.964439\n-2.288232\n-2.182194\n3.573923\n...\n2.673789\n1.013558\n0.634512\n0.356084\n-0.916048\n-1.102475\n-1.345095\n2.559951\n3.241706\n2.583089\n\n\n3193\n0.686206\n1.240031\n1.733984\n0.761593\n1.787995\n2.055370\n-1.812203\n-1.724353\n-1.924478\n2.880009\n...\n2.673789\n-1.638984\n0.634512\n0.904711\n-0.916048\n-1.102475\n-1.053060\n1.855922\n2.383282\n2.583089\n\n\n3194\n1.361704\n2.996520\n3.758959\n1.725470\n2.488438\n2.441895\n-2.288171\n-2.477494\n-2.351881\n3.831238\n...\n2.954602\n1.013558\n0.634512\n0.356084\n-0.996154\n-1.102475\n-1.345095\n3.330678\n3.241706\n3.727994\n\n\n3195\n16.653565\n13.493857\n9.378838\n4.583824\n3.780102\n2.940541\n-2.980193\n-3.602782\n-4.050573\n7.092647\n...\n4.348700\n1.544067\n1.426755\n1.453339\n-0.777960\n-1.086029\n-1.330065\n10.267218\n10.967520\n9.452520\n\n\n3196\n16.653565\n13.493857\n9.378838\n4.583824\n3.780102\n2.940541\n-2.980193\n-3.602782\n-4.050573\n7.092647\n...\n4.348700\n1.544067\n1.426755\n1.453339\n-0.777960\n-1.086029\n-1.330065\n10.267218\n10.967520\n9.452520\n\n\n\n\n3197 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.038 seconds.\nK=3 fitted in 0.048 seconds.\nK=4 fitted in 0.042 seconds.\nK=5 fitted in 0.055 seconds.\nK=6 fitted in 0.106 seconds.\nK=7 fitted in 0.078 seconds.\nK=8 fitted in 0.076 seconds.\nK=9 fitted in 0.092 seconds.\nK=10 fitted in 0.103 seconds.\nK=11 fitted in 0.132 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n0\n2\n3\n4\n2\n0\n5\n7\n3\n6\n\n\n1\n0\n0\n2\n3\n4\n5\n0\n3\n7\n1\n6\n\n\n2\n0\n0\n2\n3\n4\n5\n0\n3\n7\n4\n3\n\n\n3\n0\n0\n2\n3\n4\n5\n0\n3\n7\n4\n3\n\n\n4\n0\n0\n2\n3\n4\n5\n0\n3\n7\n4\n3\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/stäfa_uerikon.html#export",
    "href": "analysis/stäfa_uerikon.html#export",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Stäfa_Uerikon.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/stäfa_uerikon.html#utilities",
    "href": "analysis/stäfa_uerikon.html#utilities",
    "title": "maxvogt-analysis: Stäfa (incl. Uerikon)",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/mörschwil.html",
    "href": "analysis/mörschwil.html",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - MOER011\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Mörschwil, Schweiz'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/mörschwil.html#input-data",
    "href": "analysis/mörschwil.html#input-data",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\ngeometry\nnodes\naddr:city\naddr:housenumber\naddr:postcode\naddr:street\narchitect\narchitect:wikidata\nbuilding\nwikidata\n...\nsmoking\nwheelchair\nbench\nbin\nshelter_type\naccess\nbicycle_parking\ncapacity\ncovered\nfee\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n99510314\nPOLYGON ((9.41433 47.47483, 9.41436 47.47483, ...\n[2496387427, 1151019792, 12051872190, 11510197...\nMörschwil\n55\n9402\nBahnhofstrasse\nMax Vogt\nQ1913571\ntrain_station\nQ127421017\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n99846306\nPOLYGON ((9.41466 47.47416, 9.41457 47.47430, ...\n[1154289203, 1154289216, 1154289267, 115428919...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nshed\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n108110376\nPOLYGON ((9.42304 47.45321, 9.42308 47.45326, ...\n[1240898034, 1240898024, 1240898022, 124089800...\nMörschwil\nNaN\n9402\nRorschacherstrasse\nNaN\nNaN\nschool\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n126072364\nPOLYGON ((9.44603 47.47093, 9.44639 47.47103, ...\n[1398583757, 1398583746, 1398583749, 139858376...\nMörschwil\n95\n9402\nRorschacherstrasse\nNaN\nNaN\nyes\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n155672628\nPOLYGON ((9.45029 47.47184, 9.44989 47.47197, ...\n[1680554380, 6835051423, 6835051422, 168055438...\nMörschwil\n102\n9402\nRorschacherstrasse\nNaN\nNaN\nindustrial\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1295633225\nPOLYGON ((9.41185 47.45395, 9.41204 47.45394, ...\n[12005914428, 12005914429, 12005914430, 120059...\nMörschwil\n21\n9402\nNaN\nNaN\nNaN\nhouse\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1295633227\nPOLYGON ((9.41303 47.45399, 9.41337 47.45399, ...\n[12005914444, 12005914445, 12005914454, 120059...\nMörschwil\n13\n9402\nNaN\nNaN\nNaN\nhouse\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1295633228\nPOLYGON ((9.41355 47.45398, 9.41378 47.45398, ...\n[12005914448, 12005914449, 12005914450, 120059...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nhouse\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1295633229\nPOLYGON ((9.41290 47.45378, 9.41304 47.45378, ...\n[12005914456, 12005914457, 12005914458, 120059...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nyes\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1295633231\nPOLYGON ((9.41244 47.45450, 9.41268 47.45452, ...\n[12005914464, 12005914465, 12005914466, 120059...\nMörschwil\n18\n9402\nNaN\nNaN\nNaN\nhouse\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n1054 rows × 44 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    1054\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2748919.922 1260102.999, 2748921.622...\n0\n\n\n1\nPOLYGON ((2748946.528 1260029.596, 2748938.912...\n1\n\n\n2\nPOLYGON ((2749636.821 1257716.437, 2749639.691...\n2\n\n\n3\nPOLYGON ((2751319.452 1259730.723, 2751346.581...\n3\n\n\n4\nPOLYGON ((2751637.760 1259840.325, 2751607.687...\n4\n\n\n...\n...\n...\n\n\n1049\nPOLYGON ((2748791.064 1257778.179, 2748805.497...\n1049\n\n\n1050\nPOLYGON ((2748879.812 1257784.617, 2748905.744...\n1050\n\n\n1051\nPOLYGON ((2748919.351 1257784.812, 2748936.439...\n1051\n\n\n1052\nPOLYGON ((2748870.882 1257760.558, 2748881.189...\n1052\n\n\n1053\nPOLYGON ((2748833.798 1257840.570, 2748852.028...\n1053\n\n\n\n\n1054 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\noneway\nlanes\nref\nhighway\nmaxspeed\nreversed\nlength\nbridge\ngeometry\nname\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n21402060\n1194669390\n0\n[1236416641, 334585515, 225593169, 43222482, 4...\nTrue\n[2, 3]\nA1\nmotorway\n[100, 120]\nFalse\n2733.217\nyes\nLINESTRING (2750825.656 1259058.271, 2750760.6...\nNaN\nNaN\n\n\n21402061\n2343567342\n0\n[1236416643, 26720234, 49612939, 1236416652, 3...\nTrue\n2\nA23\n[motorway_link, motorway]\n[100, 80, 120, 70]\nFalse\n1042.383\nyes\nLINESTRING (2750909.401 1259186.389, 2750925.2...\nNaN\nNaN\n\n\n2343567288\n0\n[4969381, 4901291, 1236416653, 225593172, 2655...\nTrue\n2\nA1\nmotorway\n120\nFalse\n692.122\nyes\nLINESTRING (2750909.401 1259186.389, 2750919.0...\nNaN\nNaN\n\n\n2343567342\n32576091\n0\n[26720236, 552603221, 225593189, 26720239]\nTrue\n3\nA23\nmotorway\n[70, 100]\nFalse\n503.215\nyes\nLINESTRING (2751032.225 1259922.555, 2751021.6...\nNaN\nNaN\n\n\n2343567288\n1194593502\n0\n[33680001, 334585562, 334585675, 26529095]\nTrue\n[2, 3]\nA1\nmotorway\n120\nFalse\n940.823\nyes\nLINESTRING (2751422.895 1259620.982, 2751461.3...\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n6835187449\n6835187451\n0\n729669582\nFalse\nNaN\nNaN\nresidential\nNaN\nFalse\n22.612\nNaN\nLINESTRING (2749915.119 1259442.651, 2749937.6...\nAugartenweg\nNaN\n\n\n6835187450\n0\n729669582\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n42.539\nNaN\nLINESTRING (2749915.119 1259442.651, 2749872.7...\nAugartenweg\nNaN\n\n\n6835187451\n6835187449\n0\n729669582\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n22.612\nNaN\nLINESTRING (2749937.651 1259440.075, 2749915.1...\nAugartenweg\nNaN\n\n\n6835187450\n6835187449\n0\n729669582\nFalse\nNaN\nNaN\nresidential\nNaN\nFalse\n42.539\nNaN\nLINESTRING (2749872.733 1259447.505, 2749915.1...\nAugartenweg\nNaN\n\n\n6835268347\n6835268340\n0\n729676897\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n58.963\nNaN\nLINESTRING (2750614.587 1258703.021, 2750588.2...\nNeuhausstrasse\nNaN\n\n\n\n\n348 rows × 12 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2750825.656 1259058.271, 2750760.6...\n0\n\n\n1\nLINESTRING (2750909.401 1259186.389, 2750925.2...\n1\n\n\n2\nLINESTRING (2750909.401 1259186.389, 2750919.0...\n2\n\n\n3\nLINESTRING (2751032.225 1259922.555, 2751021.6...\n3\n\n\n4\nLINESTRING (2751422.895 1259620.982, 2751461.3...\n4\n\n\n...\n...\n...\n\n\n302\nLINESTRING (2750463.182 1258736.559, 2750486.9...\n302\n\n\n303\nLINESTRING (2750588.265 1258650.221, 2750614.5...\n303\n\n\n304\nLINESTRING (2751358.277 1261294.359, 2751357.5...\n304\n\n\n305\nLINESTRING (2751339.553 1260662.536, 2751355.3...\n305\n\n\n306\nLINESTRING (2751838.792 1260429.392, 2751825.1...\n306\n\n\n\n\n307 rows × 2 columns"
  },
  {
    "objectID": "analysis/mörschwil.html#generated-data",
    "href": "analysis/mörschwil.html#generated-data",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2748919.922 1260102.999, 2748921.622...\n0\n267\n267\n\n\n1\nPOLYGON ((2748946.528 1260029.596, 2748938.912...\n1\n267\n267\n\n\n2\nPOLYGON ((2749636.821 1257716.437, 2749639.691...\n2\n85\n85\n\n\n3\nPOLYGON ((2751319.452 1259730.723, 2751346.581...\n3\n306\n306\n\n\n4\nPOLYGON ((2751637.760 1259840.325, 2751607.687...\n4\n306\n306\n\n\n...\n...\n...\n...\n...\n\n\n1051\nPOLYGON ((2748919.351 1257784.812, 2748936.439...\n1051\n72\n72\n\n\n1052\nPOLYGON ((2748870.882 1257760.558, 2748881.189...\n1052\n76\n76\n\n\n1052\nPOLYGON ((2748870.882 1257760.558, 2748881.189...\n1052\n72\n72\n\n\n1053\nPOLYGON ((2748833.798 1257840.570, 2748852.028...\n1053\n76\n76\n\n\n1053\nPOLYGON ((2748833.798 1257840.570, 2748852.028...\n1053\n72\n72\n\n\n\n\n1578 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/mörschwil.html#measure",
    "href": "analysis/mörschwil.html#measure",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Mörschwil/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Mörschwil/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Mörschwil/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Mörschwil/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Mörschwil/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Mörschwil/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Mörschwil/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n582\nPOLYGON ((2749082.090 1257540.759, 2749083.848...\n76\n15113.066069\n0.986846\n0.004168\n45730.929497\n0.019243\n\n\n1\n584\nPOLYGON ((2749129.012 1257555.849, 2749128.777...\n76\n13644.042463\n0.983645\n0.008441\n61713.536073\n0.019801\n\n\n2\n27\nPOLYGON ((2749218.925 1257596.847, 2749218.149...\n76\n6727.463825\n0.976888\n0.020271\n56462.870172\n0.019030\n\n\n3\n25\nPOLYGON ((2749258.129 1257565.087, 2749267.094...\n72\n5943.604717\n0.868732\n0.012239\n53860.888281\n0.093145\n\n\n4\n26\nPOLYGON ((2749256.215 1257675.505, 2749255.404...\n72\n967.256187\n0.951472\n0.030311\n18328.913735\n0.241388\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1049\n496\nPOLYGON ((2750927.947 1260902.474, 2750927.604...\n304\n27509.688136\n0.968245\n0.003113\n47942.935446\n0.009859\n\n\n1050\n492\nPOLYGON ((2750793.450 1260819.049, 2750753.830...\n304\n14474.930350\n0.992311\n0.011070\n67199.233983\n0.017684\n\n\n1051\n499\nPOLYGON ((2751031.655 1261166.187, 2751033.425...\n12\n21261.965661\n0.985069\n0.001745\n32164.857140\n0.009589\n\n\n1052\n498\nPOLYGON ((2751062.425 1261161.172, 2751061.001...\n12\n10902.891480\n0.747441\n0.003483\n51219.455986\n0.039544\n\n\n1053\n497\nPOLYGON ((2751088.039 1261191.174, 2751087.645...\n12\n19054.598846\n0.998211\n0.001822\n29957.490326\n0.008682\n\n\n\n\n1054 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/mörschwil.html#understanding-the-context",
    "href": "analysis/mörschwil.html#understanding-the-context",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42252/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n1714.878993\n4107.194066\n13644.042463\n0.946312\n0.953541\n0.975530\n0.012239\n0.020271\n0.030869\n30465.383388\n...\n1.257512e+06\n4.0\n4.0\n4.0\n0.000066\n0.000066\n0.000066\n0.666667\n0.666667\n0.666667\n\n\n1\n1714.878993\n4107.194066\n13644.042463\n0.950323\n0.954179\n0.979120\n0.013681\n0.020216\n0.030311\n30465.383388\n...\n1.257512e+06\n4.0\n4.0\n4.0\n0.000066\n0.000066\n0.000066\n0.666667\n0.666667\n0.666667\n\n\n2\n1797.753435\n3958.338670\n12439.791815\n0.950364\n0.965899\n0.981382\n0.012960\n0.017934\n0.027748\n31448.751376\n...\n1.257512e+06\n4.0\n4.0\n4.0\n0.000066\n0.000066\n0.000066\n0.666667\n0.666667\n0.666667\n\n\n3\n2140.446732\n3809.483275\n13644.042463\n0.950796\n0.966166\n0.980775\n0.012239\n0.017845\n0.026753\n30624.328104\n...\n1.257654e+06\n4.0\n4.0\n5.0\n0.000066\n0.000066\n0.000152\n0.454545\n0.666667\n0.666667\n\n\n4\n2210.040161\n6335.534271\n14613.466564\n0.948554\n0.967983\n0.981382\n0.010191\n0.017770\n0.024017\n31448.751376\n...\n1.257512e+06\n4.0\n4.0\n4.0\n0.000066\n0.000066\n0.000066\n0.666667\n0.666667\n0.666667\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1049\n3348.485867\n4841.130066\n13178.021276\n0.946708\n0.968245\n0.991455\n0.010591\n0.012651\n0.020284\n27649.135082\n...\n1.260537e+06\n5.0\n5.0\n5.0\n0.000107\n0.000107\n0.000107\n0.444444\n0.444444\n0.444444\n\n\n1050\n1534.656764\n4222.759778\n9410.150322\n0.946708\n0.968458\n0.991213\n0.011629\n0.016802\n0.025240\n19519.751913\n...\n1.260537e+06\n5.0\n5.0\n5.0\n0.000107\n0.000107\n0.000107\n0.444444\n0.444444\n0.444444\n\n\n1051\n14978.745163\n19054.598846\n20158.282253\n0.866255\n0.985069\n0.991640\n0.001784\n0.001822\n0.002653\n31061.173733\n...\n1.260979e+06\n3.0\n3.0\n3.0\n0.000111\n0.000111\n0.000111\n0.222222\n0.222222\n0.222222\n\n\n1052\n14978.745163\n19054.598846\n20158.282253\n0.866255\n0.985069\n0.991640\n0.001784\n0.001822\n0.002653\n31061.173733\n...\n1.260979e+06\n3.0\n3.0\n3.0\n0.000111\n0.000111\n0.000111\n0.222222\n0.222222\n0.222222\n\n\n1053\n14978.745163\n19054.598846\n20158.282253\n0.866255\n0.985069\n0.991640\n0.001784\n0.001822\n0.002653\n31061.173733\n...\n1.260979e+06\n3.0\n3.0\n3.0\n0.000111\n0.000111\n0.000111\n0.222222\n0.222222\n0.222222\n\n\n\n\n1054 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Mörschwil/convexity.svg')"
  },
  {
    "objectID": "analysis/mörschwil.html#clustering",
    "href": "analysis/mörschwil.html#clustering",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n-0.065730\n0.238627\n1.478100\n0.508719\n-1.196879\n-0.591520\n-0.797536\n-0.710580\n-0.597906\n1.122347\n...\n-2.442119\n-0.238284\n-1.086795\n-1.551876\n-0.890564\n-1.016205\n-1.150921\n0.470619\n0.253022\n0.008788\n\n\n1\n-0.065730\n0.238627\n1.478100\n0.757000\n-1.122673\n-0.035705\n-0.652372\n-0.715369\n-0.643074\n1.122347\n...\n-2.442119\n-0.238284\n-1.086795\n-1.551876\n-0.890564\n-1.016205\n-1.150921\n0.470619\n0.253022\n0.008788\n\n\n2\n-0.032804\n0.195499\n1.238924\n0.759510\n0.239406\n0.314620\n-0.724954\n-0.914735\n-0.850446\n1.204175\n...\n-2.442119\n-0.238284\n-1.086795\n-1.551876\n-0.890564\n-1.016205\n-1.150921\n0.470619\n0.253022\n0.008788\n\n\n3\n0.103349\n0.152371\n1.478100\n0.786252\n0.270455\n0.220504\n-0.797536\n-0.922440\n-0.930956\n1.135573\n...\n-2.246686\n-0.238284\n-1.086795\n-0.585735\n-0.890564\n-1.016205\n-0.768921\n-0.242538\n0.253022\n0.008788\n\n\n4\n0.130998\n0.884242\n1.670637\n0.647486\n0.481543\n0.314620\n-1.003634\n-0.928986\n-1.152395\n1.204175\n...\n-2.442119\n-0.238284\n-1.086795\n-1.551876\n-0.890564\n-1.016205\n-1.150921\n0.470619\n0.253022\n0.008788\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1049\n0.583306\n0.451270\n1.385543\n0.533236\n0.512023\n1.874023\n-0.963451\n-1.376215\n-1.454502\n0.888001\n...\n1.724821\n0.339740\n-0.231639\n-0.585735\n-0.632186\n-0.805307\n-0.968001\n-0.276498\n-0.435983\n-0.591610\n\n\n1050\n-0.137333\n0.272110\n0.637207\n0.533236\n0.536749\n1.836647\n-0.858908\n-1.013550\n-1.053437\n0.211538\n...\n1.724821\n0.339740\n-0.231639\n-0.585735\n-0.632186\n-0.805307\n-0.968001\n-0.276498\n-0.435983\n-0.591610\n\n\n1051\n5.204037\n4.569326\n2.771892\n-4.447032\n2.467324\n1.902672\n-1.850011\n-2.322111\n-2.881272\n1.171924\n...\n2.333300\n-0.816309\n-1.941952\n-2.518017\n-0.612154\n-0.788956\n-0.953819\n-1.023615\n-1.124987\n-1.192008\n\n\n1052\n5.204037\n4.569326\n2.771892\n-4.447032\n2.467324\n1.902672\n-1.850011\n-2.322111\n-2.881272\n1.171924\n...\n2.333300\n-0.816309\n-1.941952\n-2.518017\n-0.612154\n-0.788956\n-0.953819\n-1.023615\n-1.124987\n-1.192008\n\n\n1053\n5.204037\n4.569326\n2.771892\n-4.447032\n2.467324\n1.902672\n-1.850011\n-2.322111\n-2.881272\n1.171924\n...\n2.333300\n-0.816309\n-1.941952\n-2.518017\n-0.612154\n-0.788956\n-0.953819\n-1.023615\n-1.124987\n-1.192008\n\n\n\n\n1054 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.020 seconds.\nK=3 fitted in 0.023 seconds.\nK=4 fitted in 0.028 seconds.\nK=5 fitted in 0.026 seconds.\nK=6 fitted in 0.025 seconds.\nK=7 fitted in 0.030 seconds.\nK=8 fitted in 0.026 seconds.\nK=9 fitted in 0.028 seconds.\nK=10 fitted in 0.035 seconds.\nK=11 fitted in 0.067 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n0\n2\n2\n1\n5\n1\n2\n2\n4\n4\n\n\n1\n0\n0\n2\n2\n1\n5\n1\n2\n2\n4\n4\n\n\n2\n0\n0\n2\n2\n1\n5\n1\n2\n2\n4\n4\n\n\n3\n0\n0\n2\n2\n1\n5\n1\n2\n2\n4\n4\n\n\n4\n0\n0\n2\n2\n1\n5\n1\n2\n2\n4\n4\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/mörschwil.html#export",
    "href": "analysis/mörschwil.html#export",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Mörschwil.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/mörschwil.html#utilities",
    "href": "analysis/mörschwil.html#utilities",
    "title": "maxvogt-analysis: Mörschwil",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/effretikon.html",
    "href": "analysis/effretikon.html",
    "title": "maxvogt-analysis: Effretikon",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - EF010 - EF013 - EF026 - EF042\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Effretikon'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/effretikon.html#input-data",
    "href": "analysis/effretikon.html#input-data",
    "title": "maxvogt-analysis: Effretikon",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\nman_made\ngeometry\namenity\noperator\noperator:de\noperator:en\noperator:fr\noperator:it\noperator:rm\noperator:wikidata\n...\nautomated\nroof:material\nbuilding:levels:underground\nbin\nways\ncastle_type\nhistoric\nhistoric:civilization\ntype\nwikipedia\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n10698615\nNaN\nPOLYGON ((8.68686 47.42614, 8.68675 47.42617, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10861441\nNaN\nPOLYGON ((8.70114 47.42318, 8.70137 47.42305, ...\nschool\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n27338285\nNaN\nPOLYGON ((8.72579 47.39835, 8.72614 47.39856, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n27349588\nNaN\nPOLYGON ((8.74348 47.41108, 8.74380 47.41099, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n27349604\nNaN\nPOLYGON ((8.74354 47.42208, 8.74387 47.42213, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1304854438\nNaN\nPOLYGON ((8.74528 47.40636, 8.74522 47.40639, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1304854440\nNaN\nPOLYGON ((8.74416 47.40664, 8.74418 47.40673, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1305831668\nNaN\nPOLYGON ((8.74174 47.40538, 8.74185 47.40540, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1305831671\nNaN\nPOLYGON ((8.74148 47.41016, 8.74147 47.41017, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nrelation\n1169711\nNaN\nPOLYGON ((8.74304 47.45829, 8.74288 47.45847, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\n[76776332, 27368301]\nstately\ncastle\nmedieval\nmultipolygon\nde:Schloss Kyburg\n\n\n\n\n4169 rows × 113 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    4169\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2694178.455 1253564.090, 2694170.145...\n0\n\n\n1\nPOLYGON ((2695261.161 1253252.357, 2695278.420...\n1\n\n\n2\nPOLYGON ((2697166.106 1250522.008, 2697191.729...\n2\n\n\n3\nPOLYGON ((2698478.041 1251958.745, 2698502.345...\n3\n\n\n4\nPOLYGON ((2698462.227 1253182.282, 2698486.573...\n4\n\n\n...\n...\n...\n\n\n4164\nPOLYGON ((2698622.204 1251436.876, 2698617.650...\n4164\n\n\n4165\nPOLYGON ((2698537.137 1251466.640, 2698538.748...\n4165\n\n\n4166\nPOLYGON ((2698357.328 1251323.329, 2698365.411...\n4166\n\n\n4167\nPOLYGON ((2698328.852 1251854.319, 2698327.969...\n4167\n\n\n4168\nPOLYGON ((2698357.244 1257206.491, 2698344.541...\n4168\n\n\n\n\n4169 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nlanes\nname\nhighway\nmaxspeed\njunction\noneway\nreversed\nlength\ngeometry\nref\nbridge\nwidth\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n33094633\n33094634\n0\n4987475\n1\nKempttalstrasse\nsecondary\n50\nroundabout\nTrue\nFalse\n16.945\nLINESTRING (2697162.221 1251652.339, 2697164.9...\nNaN\nNaN\nNaN\nNaN\n\n\n52737475\n0\n[217636862, 783979679]\n[3, 2]\nKempttalstrasse\nsecondary\n50\nNaN\nFalse\nTrue\n72.990\nLINESTRING (2697162.221 1251652.339, 2697166.3...\n345\nNaN\nNaN\nNaN\n\n\n33094634\n33094635\n0\n4987475\n1\nKempttalstrasse\nsecondary\n50\nroundabout\nTrue\nFalse\n15.222\nLINESTRING (2697165.337 1251667.158, 2697162.2...\nNaN\nNaN\nNaN\nNaN\n\n\n96516237\n0\n[905758138, 785417430]\nNaN\nLättenstrasse\nresidential\n30\nNaN\nFalse\nTrue\n64.004\nLINESTRING (2697165.337 1251667.158, 2697173.3...\nNaN\nNaN\nNaN\nNaN\n\n\n52737475\n33094633\n0\n[217636862, 783979679]\n[3, 2]\nKempttalstrasse\nsecondary\n50\nNaN\nFalse\nFalse\n72.990\nLINESTRING (2697196.075 1251587.633, 2697176.7...\n345\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3275196586\n6680155041\n0\n320867984\n1\nRikonerstrasse\ntertiary\n50\nroundabout\nTrue\nFalse\n15.719\nLINESTRING (2694153.621 1253840.656, 2694154.5...\nNaN\nNaN\nNaN\nNaN\n\n\n10277971041\n1798050241\n0\n195142245\nNaN\nRebbuckstrasse\nresidential\n30\nNaN\nFalse\nTrue\n133.652\nLINESTRING (2694466.451 1253834.343, 2694463.4...\nNaN\nNaN\nNaN\nNaN\n\n\n3115744969\n10685576357\n0\n10865806\n3\nNaN\nmotorway\n120\nNaN\nTrue\nFalse\n632.002\nLINESTRING (2694836.580 1255727.290, 2694820.2...\nA1;A4\nNaN\nNaN\nNaN\n\n\n256507544\n0\n[10866241, 54203597, 10866255, 4987473, 554245...\n1\nNaN\nmotorway_link\n[80, 120]\nNaN\nTrue\nFalse\n488.266\nLINESTRING (2694836.580 1255727.290, 2694806.5...\nA1;A4\nyes\nNaN\nNaN\n\n\n11518542531\n256419672\n0\n[14876224, 111719161, 306773052]\n[3, 4]\nNaN\nmotorway\n120\nNaN\nTrue\nFalse\n3097.821\nLINESTRING (2692595.714 1253088.460, 2692613.8...\nA1;A4\nNaN\nNaN\nyes\n\n\n\n\n1199 rows × 14 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2697162.221 1251652.339, 2697164.9...\n0\n\n\n1\nLINESTRING (2697162.221 1251652.339, 2697166.3...\n1\n\n\n2\nLINESTRING (2697165.337 1251667.158, 2697162.2...\n2\n\n\n3\nLINESTRING (2697165.337 1251667.158, 2697173.3...\n3\n\n\n4\nLINESTRING (2697196.075 1251587.633, 2697176.7...\n4\n\n\n...\n...\n...\n\n\n1081\nLINESTRING (2698644.458 1251572.409, 2698649.8...\n1081\n\n\n1082\nLINESTRING (2698673.060 1252281.789, 2698678.2...\n1082\n\n\n1083\nLINESTRING (2700057.658 1255498.075, 2700054.5...\n1083\n\n\n1084\nLINESTRING (2700069.911 1255597.473, 2700066.4...\n1084\n\n\n1085\nLINESTRING (2700087.514 1256375.397, 2700077.2...\n1085\n\n\n\n\n1086 rows × 2 columns"
  },
  {
    "objectID": "analysis/effretikon.html#generated-data",
    "href": "analysis/effretikon.html#generated-data",
    "title": "maxvogt-analysis: Effretikon",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [3111].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[97], line 1\n----&gt; 1 buildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/geodataframe.py:2321, in GeoDataFrame.sjoin_nearest(self, right, how, max_distance, lsuffix, rsuffix, distance_col, exclusive)\n   2197 def sjoin_nearest(\n   2198     self,\n   2199     right,\n   (...)\n   2205     exclusive=False,\n   2206 ):\n   2207     \"\"\"\n   2208     Spatial join of two GeoDataFrames based on the distance between their\n   2209     geometries.\n   (...)\n   2319     dimension is not taken into account.\n   2320     \"\"\"\n-&gt; 2321     return geopandas.sjoin_nearest(\n   2322         self,\n   2323         right,\n   2324         how=how,\n   2325         max_distance=max_distance,\n   2326         lsuffix=lsuffix,\n   2327         rsuffix=rsuffix,\n   2328         distance_col=distance_col,\n   2329         exclusive=exclusive,\n   2330     )\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/tools/sjoin.py:531, in sjoin_nearest(left_df, right_df, how, max_distance, lsuffix, rsuffix, distance_col, exclusive)\n    407 def sjoin_nearest(\n    408     left_df: GeoDataFrame,\n    409     right_df: GeoDataFrame,\n   (...)\n    415     exclusive: bool = False,\n    416 ) -&gt; GeoDataFrame:\n    417     \"\"\"Spatial join of two GeoDataFrames based on the distance between their geometries.\n    418 \n    419     Results will include multiple output records for a single input record\n   (...)\n    529     dimension is not taken into account.\n    530     \"\"\"\n--&gt; 531     _basic_checks(left_df, right_df, how, lsuffix, rsuffix)\n    533     left_df.geometry.values.check_geographic_crs(stacklevel=1)\n    534     right_df.geometry.values.check_geographic_crs(stacklevel=1)\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/tools/sjoin.py:172, in _basic_checks(left_df, right_df, how, lsuffix, rsuffix)\n    168 # due to GH 352\n    169 if any(left_df.columns.isin([index_left, index_right])) or any(\n    170     right_df.columns.isin([index_left, index_right])\n    171 ):\n--&gt; 172     raise ValueError(\n    173         \"'{0}' and '{1}' cannot be names in the frames being\"\n    174         \" joined\".format(index_left, index_right)\n    175     )\n\nValueError: 'index_left' and 'index_right' cannot be names in the frames being joined\n\n\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2694178.455 1253564.090, 2694170.145...\n0\n216\n216\n\n\n0\nPOLYGON ((2694178.455 1253564.090, 2694170.145...\n0\n213\n213\n\n\n1\nPOLYGON ((2695261.161 1253252.357, 2695278.420...\n1\n493\n493\n\n\n1\nPOLYGON ((2695261.161 1253252.357, 2695278.420...\n1\n919\n919\n\n\n2\nPOLYGON ((2697166.106 1250522.008, 2697191.729...\n2\n1069\n1069\n\n\n...\n...\n...\n...\n...\n\n\n4165\nPOLYGON ((2698537.137 1251466.640, 2698538.748...\n4165\n924\n924\n\n\n4166\nPOLYGON ((2698357.328 1251323.329, 2698365.411...\n4166\n1070\n1070\n\n\n4167\nPOLYGON ((2698328.852 1251854.319, 2698327.969...\n4167\n894\n894\n\n\n4168\nPOLYGON ((2698357.244 1257206.491, 2698344.541...\n4168\n176\n176\n\n\n4168\nPOLYGON ((2698357.244 1257206.491, 2698344.541...\n4168\n169\n169\n\n\n\n\n6426 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')\n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nCell In[77], line 1\n----&gt; 1 tessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/geodataframe.py:1459, in GeoDataFrame.__getitem__(self, key)\n   1453 def __getitem__(self, key):\n   1454     \"\"\"\n   1455     If the result is a column containing only 'geometry', return a\n   1456     GeoSeries. If it's a DataFrame with any columns of GeometryDtype,\n   1457     return a GeoDataFrame.\n   1458     \"\"\"\n-&gt; 1459     result = super().__getitem__(key)\n   1460     # Custom logic to avoid waiting for pandas GH51895\n   1461     # result is not geometry dtype for multi-indexes\n   1462     if (\n   1463         pd.api.types.is_scalar(key)\n   1464         and key == \"\"\n   (...)\n   1467         and not is_geometry_type(result)\n   1468     ):\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/frame.py:4108, in DataFrame.__getitem__(self, key)\n   4106     if is_iterator(key):\n   4107         key = list(key)\n-&gt; 4108     indexer = self.columns._get_indexer_strict(key, \"columns\")[1]\n   4110 # take() does not accept boolean indexers\n   4111 if getattr(indexer, \"dtype\", None) == bool:\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/indexes/base.py:6200, in Index._get_indexer_strict(self, key, axis_name)\n   6197 else:\n   6198     keyarr, indexer, new_indexer = self._reindex_non_unique(keyarr)\n-&gt; 6200 self._raise_if_missing(keyarr, indexer, axis_name)\n   6202 keyarr = self.take(indexer)\n   6203 if isinstance(key, Index):\n   6204     # GH 42790 - Preserve name from an Index\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/indexes/base.py:6252, in Index._raise_if_missing(self, key, indexer, axis_name)\n   6249     raise KeyError(f\"None of [{key}] are in the [{axis_name}]\")\n   6251 not_found = list(ensure_index(key)[missing_mask.nonzero()[0]].unique())\n-&gt; 6252 raise KeyError(f\"{not_found} not in index\")\n\nKeyError: \"['nID'] not in index\""
  },
  {
    "objectID": "analysis/effretikon.html#measure",
    "href": "analysis/effretikon.html#measure",
    "title": "maxvogt-analysis: Effretikon",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Effretikon/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Effretikon/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Effretikon/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Effretikon/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/measurement.py:74: RuntimeWarning: invalid value encountered in distance\n  return lib.distance(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Effretikon/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Effretikon/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Effretikon/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n1772\nPOLYGON ((2696107.098 1250648.807, 2696128.878...\n783\n14792.129819\n0.990054\n0.006423\n32430.449780\n0.010016\n\n\n1\n1027\nPOLYGON ((2694449.441 1251803.561, 2694454.772...\n707\n27870.065623\n0.982583\n0.003064\n35790.391031\n0.030164\n\n\n2\n2209\nPOLYGON ((2693934.524 1251966.463, 2693954.427...\n690\n21899.073872\n0.998766\n0.003583\n52399.623405\n0.004744\n\n\n3\n653\nPOLYGON ((2693890.533 1252084.481, 2693891.863...\n690\n18247.903780\n0.961021\n0.009436\n62440.608416\n0.016182\n\n\n4\n649\nPOLYGON ((2693601.860 1252874.966, 2693605.750...\n1984\n27294.004214\n0.939600\n0.007698\n58116.878985\n0.133431\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4164\n522\nPOLYGON ((2694071.261 1254819.361, 2694071.098...\n1737\n5298.004321\n0.938241\n0.020742\n47063.812956\n0.215611\n\n\n4165\n731\nPOLYGON ((2694067.025 1254855.068, 2694066.236...\n1746\n3192.479143\n0.923415\n0.025476\n55842.506190\n0.303172\n\n\n4166\n527\nPOLYGON ((2694050.603 1254963.479, 2694050.011...\n1742\n5832.824097\n0.944749\n0.010409\n52366.419586\n0.293779\n\n\n4167\n1530\nPOLYGON ((2694165.865 1255050.419, 2694165.829...\n1751\n5662.413630\n0.945228\n0.011232\n86090.153654\n0.319234\n\n\n4168\n3369\nPOLYGON ((2697277.144 1257533.437, 2697277.712...\n2566\n33225.690966\n1.000000\n0.000000\n33225.690966\n0.000573\n\n\n\n\n4169 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/effretikon.html#understanding-the-context",
    "href": "analysis/effretikon.html#understanding-the-context",
    "title": "maxvogt-analysis: Effretikon",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42119/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n2694.293802\n9609.755445\n11882.564272\n0.922961\n0.953757\n0.985205\n0.008784\n0.012226\n0.019908\n31827.697084\n...\n1.250624e+06\n5.0\n5.0\n5.0\n0.000011\n0.000011\n0.000011\n1.333333\n1.333333\n1.333333\n\n\n1\n3357.960635\n5038.518385\n13319.019554\n0.950412\n0.982384\n0.989155\n0.011247\n0.011837\n0.015054\n40751.271391\n...\n1.251698e+06\n7.0\n7.0\n7.0\n0.000017\n0.000017\n0.000017\n0.333333\n0.333333\n0.333333\n\n\n2\n1305.062165\n3692.296714\n7095.435283\n0.954299\n0.966847\n0.972917\n0.012148\n0.019640\n0.028430\n22122.550392\n...\n1.252229e+06\n6.0\n6.0\n6.0\n0.000035\n0.000047\n0.000047\n0.538462\n0.538462\n0.538462\n\n\n3\n1087.669951\n2741.651927\n7095.435283\n0.954299\n0.966847\n0.975614\n0.011077\n0.019640\n0.032779\n20308.685141\n...\n1.252229e+06\n6.0\n6.0\n6.0\n0.000035\n0.000047\n0.000047\n0.538462\n0.538462\n0.538462\n\n\n4\n1963.301323\n2671.033455\n9093.752146\n0.919353\n0.946361\n0.970500\n0.013819\n0.022168\n0.028943\n29364.056002\n...\n1.252956e+06\n5.0\n5.5\n6.0\n0.000069\n0.000112\n0.000157\n0.653266\n0.682731\n0.707001\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4164\n746.060581\n2913.430866\n7213.414982\n0.941352\n0.966783\n0.985033\n0.010905\n0.024721\n0.044210\n12099.279240\n...\n1.254892e+06\n5.0\n5.0\n5.0\n0.000050\n0.000050\n0.000053\n0.459459\n0.459459\n0.777778\n\n\n4165\n746.060581\n4087.362723\n9004.213298\n0.927727\n0.959870\n0.985477\n0.009990\n0.023340\n0.048128\n12913.799979\n...\n1.254927e+06\n5.0\n5.0\n5.0\n0.000050\n0.000050\n0.000054\n0.459459\n0.459459\n0.777778\n\n\n4166\n746.060581\n4087.362723\n9004.213298\n0.927727\n0.959870\n0.985214\n0.009990\n0.021386\n0.048128\n13930.425542\n...\n1.254927e+06\n5.0\n5.0\n5.0\n0.000050\n0.000050\n0.000054\n0.459459\n0.459459\n0.777778\n\n\n4167\n656.547935\n3973.807756\n7678.901916\n0.926180\n0.952957\n0.984770\n0.010409\n0.022030\n0.049171\n11346.404458\n...\n1.254927e+06\n5.0\n5.0\n5.0\n0.000050\n0.000050\n0.000055\n0.459459\n0.459459\n0.777778\n\n\n4168\n33225.690966\n33225.690966\n33225.690966\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n33225.690966\n...\n1.257030e+06\n5.0\n5.0\n5.0\n0.000134\n0.000134\n0.000134\n0.457627\n0.457627\n0.457627\n\n\n\n\n4169 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Effretikon/convexity.svg')"
  },
  {
    "objectID": "analysis/effretikon.html#clustering",
    "href": "analysis/effretikon.html#clustering",
    "title": "maxvogt-analysis: Effretikon",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n0.438860\n2.058473\n1.841800\n-0.045175\n-0.343718\n0.813439\n-1.330294\n-1.531054\n-1.550591\n2.335378\n...\n-1.767589\n0.941956\n0.114109\n-0.592713\n-1.389389\n-1.543239\n-1.661057\n3.780619\n3.632099\n3.452271\n\n\n1\n0.641010\n0.809353\n2.164551\n1.117188\n1.745258\n1.226984\n-1.176980\n-1.551475\n-1.776722\n3.290313\n...\n-1.056964\n1.959121\n1.624332\n1.521076\n-1.278121\n-1.448662\n-1.576935\n-0.273355\n-0.360916\n-0.462055\n\n\n2\n0.015705\n0.441489\n0.766202\n1.281754\n0.611467\n-0.472987\n-1.120908\n-1.141151\n-1.153600\n1.296804\n...\n-0.705682\n1.450539\n0.869221\n0.464182\n-0.959024\n-0.993347\n-1.171960\n0.558230\n0.458164\n0.340884\n\n\n3\n-0.050512\n0.181719\n0.766202\n1.281754\n0.611467\n-0.190615\n-1.187540\n-1.141151\n-0.951037\n1.102698\n...\n-0.705682\n1.450539\n0.869221\n0.464182\n-0.959024\n-0.993347\n-1.171960\n0.558230\n0.458164\n0.340884\n\n\n4\n0.216202\n0.162422\n1.215195\n-0.197931\n-0.883434\n-0.726014\n-1.016897\n-1.008155\n-1.129704\n2.071737\n...\n-0.224286\n0.941956\n0.491665\n0.464182\n-0.358983\n-0.023096\n0.286075\n1.023642\n1.034234\n1.000600\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4164\n-0.154565\n0.228659\n0.792710\n0.733561\n0.606826\n0.795474\n-1.198249\n-0.873933\n-0.418518\n0.224188\n...\n1.057171\n0.941956\n0.114109\n-0.592713\n-0.693467\n-0.951706\n-1.103516\n0.237957\n0.142708\n1.277645\n\n\n4165\n-0.154565\n0.549443\n1.195077\n0.156609\n0.102349\n0.841968\n-1.255212\n-0.946559\n-0.236031\n0.311352\n...\n1.080527\n0.941956\n0.114109\n-0.592713\n-0.693467\n-0.951706\n-1.087944\n0.237957\n0.142708\n1.277645\n\n\n4166\n-0.154565\n0.549443\n1.195077\n0.156609\n0.102349\n0.814359\n-1.255212\n-1.049316\n-0.236031\n0.420144\n...\n1.080527\n0.941956\n0.114109\n-0.592713\n-0.693467\n-0.951706\n-1.087944\n0.237957\n0.142708\n1.277645\n\n\n4167\n-0.181830\n0.518414\n0.897299\n0.091111\n-0.402128\n0.767864\n-1.229119\n-1.015435\n-0.187438\n0.143621\n...\n1.080527\n0.941956\n0.114109\n-0.592713\n-0.693467\n-0.951706\n-1.072373\n0.237957\n0.142708\n1.277645\n\n\n4168\n9.738611\n8.511680\n6.637291\n3.216853\n3.030736\n2.362344\n-1.876930\n-2.174024\n-2.477977\n2.484981\n...\n2.472588\n0.941956\n0.114109\n-0.592713\n0.791779\n0.310754\n-0.012040\n0.230529\n0.135391\n0.024471\n\n\n\n\n4169 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.041 seconds.\nK=3 fitted in 0.057 seconds.\nK=4 fitted in 0.054 seconds.\nK=5 fitted in 0.064 seconds.\nK=6 fitted in 0.099 seconds.\nK=7 fitted in 0.082 seconds.\nK=8 fitted in 0.093 seconds.\nK=9 fitted in 0.093 seconds.\nK=10 fitted in 0.108 seconds.\nK=11 fitted in 0.130 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n1\n2\n2\n5\n1\n5\n1\n3\n2\n\n\n1\n0\n1\n1\n1\n2\n5\n1\n5\n2\n2\n2\n\n\n2\n0\n1\n1\n2\n2\n5\n1\n5\n2\n2\n4\n\n\n3\n0\n1\n1\n2\n2\n5\n1\n5\n2\n2\n4\n\n\n4\n0\n1\n2\n2\n0\n4\n3\n5\n2\n9\n4\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/effretikon.html#export",
    "href": "analysis/effretikon.html#export",
    "title": "maxvogt-analysis: Effretikon",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Effretikon.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/effretikon.html#utilities",
    "href": "analysis/effretikon.html#utilities",
    "title": "maxvogt-analysis: Effretikon",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/thalwil.html",
    "href": "analysis/thalwil.html",
    "title": "maxvogt-analysis: Thalwil",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - TW014 - TW059\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Thalwil'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/thalwil.html#input-data",
    "href": "analysis/thalwil.html#input-data",
    "title": "maxvogt-analysis: Thalwil",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\nentrance\ngeometry\naddr:housenumber\naddr:street\naddr:city\naddr:country\naddr:postcode\nbuilding\nleisure\nname\n...\nplayground:theme\nbicycle_parking\nbuilding:flats\nloc_name\ncontact:phone\ngolf\nbuilding:material\nroof:orientation\nways\ntype\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n2810439683\nNaN\nPOINT (8.56580 47.28415)\nNaN\nNaN\nNaN\nNaN\nNaN\npublic\nsports_centre\nGesundheitspark Böni\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3844760994\nNaN\nPOINT (8.56203 47.29560)\n143\nAlte Landstrasse\nThalwil\nNaN\n8800\nterrace\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3844760995\nNaN\nPOINT (8.56182 47.29547)\n12\nHortweg\nThalwil\nNaN\n8800\nterrace\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n9778986256\nyes\nPOINT (8.56120 47.29869)\n43\nLudretikonerstrasse\nThalwil\nNaN\n8800\nresidential\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nway\n23646192\nNaN\nPOLYGON ((8.56402 47.29683, 8.56399 47.29681, ...\n23\nBahnhofstrasse\nThalwil\nCH\n8800\ncommercial\nNaN\nGüterexpeditionsgebäude\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1261816537\nNaN\nPOLYGON ((8.57405 47.28117, 8.57398 47.28115, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nyes\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nalong\nNaN\nNaN\n\n\n1268087245\nNaN\nPOLYGON ((8.56272 47.29618, 8.56284 47.29623, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nyes\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1268087246\nNaN\nPOLYGON ((8.56284 47.29623, 8.56272 47.29618, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nyes\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1278336013\nNaN\nPOLYGON ((8.55155 47.27662, 8.55140 47.27636, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nyes\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nrelation\n13435259\nNaN\nPOLYGON ((8.55588 47.29951, 8.55579 47.29964, ...\n35\nAlpenstrasse\nThalwil\nNaN\n8800\nyes\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[1002017282, 91731070]\nmultipolygon\n\n\n\n\n2255 rows × 100 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    2251\nPoint         4\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2685116.843 1239047.736, 2685114.800...\n0\n\n\n1\nPOLYGON ((2685173.904 1238977.426, 2685171.899...\n1\n\n\n2\nPOLYGON ((2685178.913 1239003.628, 2685190.829...\n2\n\n\n3\nPOLYGON ((2685229.206 1238887.977, 2685257.681...\n3\n\n\n4\nPOLYGON ((2685249.952 1238906.099, 2685261.103...\n4\n\n\n...\n...\n...\n\n\n2246\nPOLYGON ((2685901.028 1237318.341, 2685895.791...\n2246\n\n\n2247\nPOLYGON ((2685019.515 1238974.679, 2685028.486...\n2247\n\n\n2248\nPOLYGON ((2685028.486 1238980.533, 2685019.515...\n2248\n\n\n2249\nPOLYGON ((2684206.175 1236787.853, 2684194.553...\n2249\n\n\n2250\nPOLYGON ((2684497.172 1239337.273, 2684489.984...\n2250\n\n\n\n\n2251 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nlanes\nref\nname\nhighway\nmaxspeed\noneway\nreversed\nlength\ngeometry\nbridge\naccess\ntunnel\njunction\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n30123097\n243091090\n0\n24285300\n2\n3\nSeestrasse\nprimary\n50\nFalse\nFalse\n153.830\nLINESTRING (2684874.008 1239681.616, 2684880.5...\nNaN\nNaN\nNaN\nNaN\n\n\n243091090\n277186353\n0\n24285300\n2\n3\nSeestrasse\nprimary\n50\nFalse\nFalse\n158.703\nLINESTRING (2684958.667 1239553.190, 2684984.5...\nNaN\nNaN\nNaN\nNaN\n\n\n30123097\n0\n24285300\n2\n3\nSeestrasse\nprimary\n50\nFalse\nTrue\n153.830\nLINESTRING (2684958.667 1239553.190, 2684891.4...\nNaN\nNaN\nNaN\nNaN\n\n\n277356806\n0\n[22664051, 1001442494]\nNaN\nNaN\nKronenbergstrasse\nresidential\nNaN\nFalse\nFalse\n130.789\nLINESTRING (2684958.667 1239553.190, 2684954.7...\nNaN\nNaN\nNaN\nNaN\n\n\n30123132\n177824338\n0\n119779828\n2\nNaN\nTischenloostrasse\nsecondary\n50\nFalse\nTrue\n80.029\nLINESTRING (2686308.049 1237421.426, 2686304.6...\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3809549741\n3809549746\n0\n155575970\n1\nNaN\nSchwandelstrasse\ntertiary\nNaN\nTrue\nFalse\n16.099\nLINESTRING (2685147.744 1238828.333, 2685150.1...\nNaN\nNaN\nNaN\nNaN\n\n\n60550054\n0\n[603435049, 28290675]\n1\nNaN\nSchwandelstrasse\ntertiary\nNaN\nTrue\nFalse\n82.832\nLINESTRING (2685147.744 1238828.333, 2685138.3...\nNaN\nNaN\nNaN\nNaN\n\n\n3809549746\n454359414\n0\n[156528929, 34281755, 1026333828]\n[2, 1]\nNaN\nGotthardstrasse\ntertiary\nNaN\nTrue\nFalse\n165.154\nLINESTRING (2685151.283 1238843.728, 2685131.4...\nNaN\nNaN\nNaN\nNaN\n\n\n3809549745\n0\n603435047\n1\nNaN\nGotthardstrasse\ntertiary\nNaN\nFalse\nTrue\n19.745\nLINESTRING (2685151.283 1238843.728, 2685157.8...\nNaN\nNaN\nNaN\nNaN\n\n\n8524994610\n8524994609\n0\n917876210\n1\nNaN\nNaN\nliving_street\nNaN\nFalse\nTrue\n53.373\nLINESTRING (2684941.306 1239416.466, 2684911.8...\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n808 rows × 14 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2684958.667 1239553.190, 2684984.5...\n0\n\n\n1\nLINESTRING (2684958.667 1239553.190, 2684954.7...\n1\n\n\n2\nLINESTRING (2686308.049 1237421.426, 2686304.6...\n2\n\n\n3\nLINESTRING (2686308.049 1237421.426, 2686191.6...\n3\n\n\n4\nLINESTRING (2686233.164 1237396.398, 2686238.6...\n4\n\n\n...\n...\n...\n\n\n723\nLINESTRING (2685864.384 1237569.847, 2685860.0...\n723\n\n\n724\nLINESTRING (2685836.228 1237712.809, 2685894.4...\n724\n\n\n725\nLINESTRING (2685959.181 1237605.988, 2685948.4...\n725\n\n\n726\nLINESTRING (2685978.331 1237471.702, 2685985.5...\n726\n\n\n727\nLINESTRING (2686133.706 1237479.603, 2686137.8...\n727\n\n\n\n\n728 rows × 2 columns"
  },
  {
    "objectID": "analysis/thalwil.html#generated-data",
    "href": "analysis/thalwil.html#generated-data",
    "title": "maxvogt-analysis: Thalwil",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2685116.843 1239047.736, 2685114.800...\n0\n419\n419\n\n\n1\nPOLYGON ((2685173.904 1238977.426, 2685171.899...\n1\n419\n419\n\n\n1\nPOLYGON ((2685173.904 1238977.426, 2685171.899...\n1\n231\n231\n\n\n2\nPOLYGON ((2685178.913 1239003.628, 2685190.829...\n2\n419\n419\n\n\n3\nPOLYGON ((2685229.206 1238887.977, 2685257.681...\n3\n418\n418\n\n\n...\n...\n...\n...\n...\n\n\n2247\nPOLYGON ((2685019.515 1238974.679, 2685028.486...\n2247\n610\n610\n\n\n2248\nPOLYGON ((2685028.486 1238980.533, 2685019.515...\n2248\n609\n609\n\n\n2249\nPOLYGON ((2684206.175 1236787.853, 2684194.553...\n2249\n656\n656\n\n\n2250\nPOLYGON ((2684497.172 1239337.273, 2684489.984...\n2250\n510\n510\n\n\n2250\nPOLYGON ((2684497.172 1239337.273, 2684489.984...\n2250\n499\n499\n\n\n\n\n3264 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/thalwil.html#measure",
    "href": "analysis/thalwil.html#measure",
    "title": "maxvogt-analysis: Thalwil",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Thalwil/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Thalwil/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Thalwil/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Thalwil/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Thalwil/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Thalwil/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Thalwil/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n2249\nPOLYGON ((2684324.961 1236771.424, 2684323.620...\n656\n42362.603352\n1.000000\n0.000000\n42362.603352\n0.015170\n\n\n1\n1437\nPOLYGON ((2683565.841 1237362.031, 2683579.664...\n652\n16094.813420\n0.979681\n0.008150\n61182.515539\n0.046179\n\n\n2\n1436\nPOLYGON ((2683538.796 1237542.695, 2683551.045...\n648\n27010.925540\n0.844055\n0.005615\n56872.285467\n0.135877\n\n\n3\n2036\nPOLYGON ((2683931.125 1237115.127, 2683934.372...\n656\n36076.164324\n1.000000\n0.000000\n36076.164324\n0.003618\n\n\n4\n1435\nPOLYGON ((2683741.867 1237351.739, 2683742.785...\n27\n9850.165544\n0.977772\n0.012877\n40593.610389\n0.028262\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2246\n852\nPOLYGON ((2684875.730 1239603.529, 2684875.723...\n649\n931.395332\n0.923706\n0.040173\n21041.039545\n0.346778\n\n\n2247\n1672\nPOLYGON ((2684830.557 1239593.989, 2684830.273...\n649\n1162.416015\n0.868899\n0.037446\n24454.651714\n0.234187\n\n\n2248\n1668\nPOLYGON ((2684792.953 1239577.162, 2684792.808...\n683\n3609.460458\n0.946433\n0.017970\n34113.774357\n0.126280\n\n\n2249\n1473\nPOLYGON ((2684859.635 1239623.576, 2684858.361...\n649\n617.064907\n0.980303\n0.036607\n19892.645603\n0.112990\n\n\n2250\n1472\nPOLYGON ((2684862.552 1239643.003, 2684857.737...\n649\n16627.983666\n0.988243\n0.014393\n48214.188386\n0.019098\n\n\n\n\n2251 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/thalwil.html#understanding-the-context",
    "href": "analysis/thalwil.html#understanding-the-context",
    "title": "maxvogt-analysis: Thalwil",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42420/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n42362.603352\n42362.603352\n42362.603352\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n42362.603352\n...\n1.237310e+06\n1.0\n1.0\n1.0\n0.000019\n0.000019\n0.000019\n1.000000\n1.000000\n1.000000\n\n\n1\n1360.851627\n1755.340168\n5604.055659\n0.919018\n0.946482\n0.968178\n0.017140\n0.031133\n0.041423\n11532.770895\n...\n1.237518e+06\n1.0\n5.0\n5.0\n0.000138\n0.000147\n0.000147\n0.466667\n0.466667\n0.466667\n\n\n2\n1486.602197\n2241.154441\n5604.055659\n0.922587\n0.955773\n0.969105\n0.015531\n0.030516\n0.041813\n18256.253932\n...\n1.237545e+06\n1.0\n1.0\n5.0\n0.000087\n0.000138\n0.000147\n0.466667\n0.466667\n0.545455\n\n\n3\n36076.164324\n36076.164324\n36076.164324\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n36076.164324\n...\n1.237310e+06\n1.0\n1.0\n1.0\n0.000019\n0.000019\n0.000019\n1.000000\n1.000000\n1.000000\n\n\n4\n851.670527\n1589.074511\n3984.999629\n0.919018\n0.954548\n0.968305\n0.020585\n0.036499\n0.046178\n9369.561895\n...\n1.237507e+06\n5.0\n5.0\n5.0\n0.000147\n0.000147\n0.000147\n0.466667\n0.466667\n0.466667\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2246\n836.883351\n1091.228543\n1729.150684\n0.928817\n0.945313\n0.964288\n0.031212\n0.038080\n0.051666\n8529.406577\n...\n1.239644e+06\n1.0\n1.0\n5.0\n0.000097\n0.000107\n0.000235\n0.523810\n0.666667\n0.857143\n\n\n2247\n760.927247\n1019.288613\n1656.076832\n0.925921\n0.942219\n0.962314\n0.032146\n0.040051\n0.053227\n6557.468504\n...\n1.239644e+06\n1.0\n2.5\n5.0\n0.000097\n0.000171\n0.000235\n0.523810\n0.690476\n0.857143\n\n\n2248\n760.927247\n1069.143089\n1849.289186\n0.925921\n0.943507\n0.968338\n0.033371\n0.040229\n0.052435\n7257.742249\n...\n1.239644e+06\n1.0\n1.0\n5.0\n0.000097\n0.000107\n0.000235\n0.523810\n0.666667\n0.780488\n\n\n2249\n767.714893\n1047.057634\n2638.685212\n0.928365\n0.944378\n0.968338\n0.024755\n0.038080\n0.052021\n7006.392001\n...\n1.239663e+06\n1.0\n1.0\n5.0\n0.000097\n0.000107\n0.000235\n0.523810\n0.666667\n0.857143\n\n\n2250\n767.714893\n1106.656598\n2155.696971\n0.925921\n0.945313\n0.969986\n0.031376\n0.039814\n0.051835\n8423.944346\n...\n1.239644e+06\n1.0\n1.0\n5.0\n0.000097\n0.000107\n0.000235\n0.523810\n0.666667\n0.857143\n\n\n\n\n2251 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Thalwil/convexity.svg')"
  },
  {
    "objectID": "analysis/thalwil.html#clustering",
    "href": "analysis/thalwil.html#clustering",
    "title": "maxvogt-analysis: Thalwil",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n25.992409\n22.052594\n14.962230\n5.984656\n5.347081\n4.089324\n-3.290710\n-4.031003\n-4.403778\n5.291416\n...\n-1.992339\n-2.053243\n-4.155162\n-5.710522\n-1.414536\n-1.662023\n-1.896973\n3.093635\n2.081523\n0.710820\n\n\n1\n0.214018\n0.100596\n1.121421\n-0.776339\n-0.805095\n-0.600547\n-1.598972\n-0.986998\n-0.718982\n0.369986\n...\n-1.651405\n-2.053243\n-0.352633\n-1.173947\n-0.450629\n-0.712331\n-0.994955\n-0.329878\n-0.555872\n-0.478571\n\n\n2\n0.293079\n0.363223\n1.121421\n-0.478349\n0.262955\n-0.463888\n-1.757752\n-1.047267\n-0.684241\n1.443269\n...\n-1.607841\n-2.053243\n-4.155162\n-1.173947\n-0.863260\n-0.778348\n-0.994955\n-0.329878\n-0.555872\n-0.302866\n\n\n3\n22.040034\n18.654189\n12.595178\n5.984656\n5.347081\n4.089324\n-3.290710\n-4.031003\n-4.403778\n4.287899\n...\n-1.992339\n-2.053243\n-4.155162\n-5.710522\n-1.414536\n-1.662023\n-1.896973\n3.093635\n2.081523\n0.710820\n\n\n4\n-0.106112\n0.010714\n0.511793\n-0.776339\n0.122161\n-0.581828\n-1.258923\n-0.462357\n-0.295952\n0.024668\n...\n-1.669081\n0.433628\n-0.352633\n-1.173947\n-0.378619\n-0.712331\n-0.994955\n-0.329878\n-0.555872\n-0.478571\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2246\n-0.115408\n-0.258418\n-0.337609\n0.041732\n-0.939511\n-1.173794\n-0.209987\n-0.307776\n0.192256\n-0.109448\n...\n1.824665\n-2.053243\n-4.155162\n-1.173947\n-0.781078\n-1.007302\n-0.374010\n0.036927\n0.433151\n0.392233\n\n\n2247\n-0.163163\n-0.297309\n-0.365124\n-0.200007\n-1.295179\n-1.464739\n-0.117759\n-0.115013\n0.331071\n-0.424232\n...\n1.824665\n-2.053243\n-2.729214\n-1.173947\n-0.781078\n-0.532935\n-0.374010\n0.036927\n0.550892\n0.392233\n\n\n2248\n-0.163163\n-0.270358\n-0.292373\n-0.200007\n-1.147162\n-0.576973\n0.003112\n-0.097630\n0.260618\n-0.312446\n...\n1.824665\n-2.053243\n-4.155162\n-1.173947\n-0.781078\n-1.007302\n-0.374010\n0.036927\n0.433151\n0.221284\n\n\n2249\n-0.158896\n-0.282297\n0.004861\n0.003986\n-1.047038\n-0.576973\n-0.847325\n-0.307776\n0.223785\n-0.352570\n...\n1.855170\n-2.053243\n-4.155162\n-1.173947\n-0.781078\n-1.007302\n-0.374010\n0.036927\n0.433151\n0.392233\n\n\n2250\n-0.158896\n-0.250078\n-0.177000\n-0.200007\n-0.939511\n-0.334113\n-0.193797\n-0.138247\n0.207242\n-0.126283\n...\n1.824665\n-2.053243\n-4.155162\n-1.173947\n-0.781078\n-1.007302\n-0.374010\n0.036927\n0.433151\n0.392233\n\n\n\n\n2251 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.086 seconds.\nK=3 fitted in 0.033 seconds.\nK=4 fitted in 0.047 seconds.\nK=5 fitted in 0.061 seconds.\nK=6 fitted in 0.112 seconds.\nK=7 fitted in 0.063 seconds.\nK=8 fitted in 0.058 seconds.\nK=9 fitted in 0.064 seconds.\nK=10 fitted in 0.077 seconds.\nK=11 fitted in 0.077 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n2\n2\n3\n1\n3\n6\n8\n8\n8\n\n\n1\n0\n1\n0\n3\n1\n2\n2\n1\n4\n9\n10\n\n\n2\n0\n1\n0\n3\n1\n2\n2\n0\n4\n5\n7\n\n\n3\n0\n1\n2\n2\n3\n1\n3\n6\n8\n8\n8\n\n\n4\n0\n1\n0\n3\n1\n2\n2\n1\n4\n9\n10\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/thalwil.html#export",
    "href": "analysis/thalwil.html#export",
    "title": "maxvogt-analysis: Thalwil",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Thalwil.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/thalwil.html#utilities",
    "href": "analysis/thalwil.html#utilities",
    "title": "maxvogt-analysis: Thalwil",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/horgen.html",
    "href": "analysis/horgen.html",
    "title": "maxvogt-analysis: Horgen",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - HG002 - SBG086\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Horgen'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/horgen.html#input-data",
    "href": "analysis/horgen.html#input-data",
    "title": "maxvogt-analysis: Horgen",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\nele\nname\nwebsite\nwikidata\nwikipedia\ngeometry\nman_made\ntower:type\nbuilding\nwheelchair\n...\nfixme\ncontact:email\ncontact:website\ninternet_access\nroof:cover:material\nbicycle_parking\nbike_ride\ncovered\nways\ntype\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n568617765\nNaN\nWohngruppe Spyrigarten\nNaN\nNaN\nNaN\nPOINT (8.60652 47.21785)\nNaN\nNaN\npublic\nyes\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n592412398\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (8.55340 47.26518)\nNaN\nNaN\nyes\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nway\n23766001\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.57691 47.23839, 8.57696 47.23849, ...\nNaN\nNaN\nservice\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n23766008\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.57707 47.23870, 8.57714 47.23885, ...\nNaN\nNaN\ntrain_station\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n23766017\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.57749 47.24208, 8.57765 47.24212, ...\nNaN\nNaN\napartments\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nrelation\n8709970\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.59923 47.25791, 8.59929 47.25789, ...\nNaN\nNaN\nyes\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[626332676, 32452892]\nmultipolygon\n\n\n9205904\n420\nBergwerk, Betriebsgebäude, Häuertreff\nhttp://www.bergwerk-kaepfnach.ch/\nNaN\nde:Bergwerk Käpfnach\nPOLYGON ((8.61135 47.25579, 8.61136 47.25581, ...\nNaN\nNaN\nyes\nno\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[97867696, 662290865]\nmultipolygon\n\n\n9322011\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.61463 47.25497, 8.61470 47.25496, ...\nNaN\nNaN\nyes\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[97867656, 670167226]\nmultipolygon\n\n\n9322263\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.61137 47.25582, 8.61137 47.25583, ...\nNaN\nNaN\nyes\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[667197110, 670191967]\nmultipolygon\n\n\n11846798\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.59894 47.24960, 8.59894 47.24959, ...\nNaN\nNaN\nyes\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[32450402, 867971099]\nmultipolygon\n\n\n\n\n4407 rows × 103 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    4405\nPoint         2\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2686186.509 1232565.610, 2686189.629...\n0\n\n\n1\nPOLYGON ((2686198.118 1232600.536, 2686202.816...\n1\n\n\n2\nPOLYGON ((2686224.000 1232976.788, 2686236.026...\n2\n\n\n3\nPOLYGON ((2686041.467 1233166.544, 2686050.406...\n3\n\n\n4\nPOLYGON ((2686223.256 1233367.153, 2686232.653...\n4\n\n\n...\n...\n...\n\n\n4400\nPOLYGON ((2687844.074 1234760.243, 2687848.233...\n4400\n\n\n4401\nPOLYGON ((2688764.828 1234538.387, 2688765.590...\n4401\n\n\n4402\nPOLYGON ((2689014.197 1234451.155, 2689019.707...\n4402\n\n\n4403\nPOLYGON ((2688766.114 1234541.976, 2688766.389...\n4403\n\n\n4404\nPOLYGON ((2687835.257 1233836.065, 2687835.598...\n4404\n\n\n\n\n4405 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\noneway\nlanes\nref\nhighway\nmaxspeed\nreversed\nlength\nbridge\ngeometry\nname\njunction\naccess\nwidth\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n453942\n453966\n0\n[660916013, 660916014, 306293043, 660920699, 6...\nTrue\n[3, 2]\nA3\nmotorway\n120\nFalse\n4230.315\nyes\nLINESTRING (2685646.288 1236128.358, 2685699.1...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n453966\n566185188\n0\n17281772\nTrue\n1\n35\nmotorway_link\n120\nFalse\n497.972\nNaN\nLINESTRING (2688435.411 1232978.153, 2688511.2...\nHorgen\nNaN\nNaN\nNaN\nNaN\n\n\n33980358\n0\n[24228122, 17281836, 306293093]\nTrue\n2\nA3\nmotorway\n120\nFalse\n851.120\nyes\nLINESTRING (2688435.411 1232978.153, 2688488.2...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n566185188\n566185191\n0\n5053172\nTrue\n1\n341\nsecondary\n60\nFalse\n11.659\nNaN\nLINESTRING (2688746.582 1232602.634, 2688749.4...\nZugerstrasse\nroundabout\nNaN\nNaN\nNaN\n\n\n33980358\n3111602950\n0\n[306293100, 306293069, 117946996, 306293079, 3...\nTrue\n[3, 2]\nA3\nmotorway\n120\nFalse\n1432.115\nyes\nLINESTRING (2689040.440 1232377.890, 2689089.4...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12157705083\n12157705082\n0\n1313487776\nFalse\nNaN\nNaN\nliving_street\nNaN\nFalse\n10.469\nNaN\nLINESTRING (2687026.113 1235323.933, 2687027.7...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10795906516\n0\n[1313487776, 702116462]\nFalse\nNaN\nNaN\n[living_street, residential]\n30\n[False, True]\n46.511\nNaN\nLINESTRING (2687026.113 1235323.933, 2687039.4...\nAsylstrasse\nNaN\nNaN\nNaN\nNaN\n\n\n11224526888\n471803170\n0\n9062655\nTrue\nNaN\nNaN\nresidential\n30\nFalse\n21.137\nNaN\nLINESTRING (2688013.703 1234809.599, 2688024.9...\nSchärbächlistrasse\nNaN\nNaN\nNaN\nNaN\n\n\n66819255\n0\n9065331\nTrue\nNaN\nNaN\nresidential\n30\nFalse\n75.982\nNaN\nLINESTRING (2688013.703 1234809.599, 2688008.8...\nNeudorfstrasse\nNaN\nNaN\nNaN\nNaN\n\n\n11884166172\n11884157862\n0\n1280243038\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n208.318\nNaN\nLINESTRING (2688629.670 1230091.835, 2688624.8...\nJohanna-Spyri-Strasse\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n1193 rows × 15 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2685646.288 1236128.358, 2685699.1...\n0\n\n\n1\nLINESTRING (2688435.411 1232978.153, 2688511.2...\n1\n\n\n2\nLINESTRING (2688435.411 1232978.153, 2688488.2...\n2\n\n\n3\nLINESTRING (2688746.582 1232602.634, 2688749.4...\n3\n\n\n4\nLINESTRING (2689040.440 1232377.890, 2689089.4...\n4\n\n\n...\n...\n...\n\n\n1068\nLINESTRING (2689993.139 1234038.390, 2690011.0...\n1068\n\n\n1069\nLINESTRING (2689732.582 1229579.354, 2689743.0...\n1069\n\n\n1070\nLINESTRING (2690192.670 1233561.272, 2690189.4...\n1070\n\n\n1071\nLINESTRING (2690260.456 1231977.512, 2690230.7...\n1071\n\n\n1072\nLINESTRING (2690351.446 1233218.259, 2690361.5...\n1072\n\n\n\n\n1073 rows × 2 columns"
  },
  {
    "objectID": "analysis/horgen.html#generated-data",
    "href": "analysis/horgen.html#generated-data",
    "title": "maxvogt-analysis: Horgen",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/1328706492.py:3: UserWarning: Tessellation does not fully match buildings. 3 element(s) collapsed during generation - unique_id: {3579, 3580, 3581}.\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [3320, 3321, 3322, 134, 3323, 3324, 3325, 3330, 3549, 3203, 1958, 3235, 3201, 4401, 3255, 4403, 1924, 3179, 3042].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2686186.509 1232565.610, 2686189.629...\n0\n253\n253\n\n\n1\nPOLYGON ((2686198.118 1232600.536, 2686202.816...\n1\n250\n250\n\n\n1\nPOLYGON ((2686198.118 1232600.536, 2686202.816...\n1\n253\n253\n\n\n2\nPOLYGON ((2686224.000 1232976.788, 2686236.026...\n2\n250\n250\n\n\n2\nPOLYGON ((2686224.000 1232976.788, 2686236.026...\n2\n253\n253\n\n\n...\n...\n...\n...\n...\n\n\n4402\nPOLYGON ((2689014.197 1234451.155, 2689019.707...\n4402\n124\n124\n\n\n4403\nPOLYGON ((2688766.114 1234541.976, 2688766.389...\n4403\n112\n112\n\n\n4403\nPOLYGON ((2688766.114 1234541.976, 2688766.389...\n4403\n116\n116\n\n\n4404\nPOLYGON ((2687835.257 1233836.065, 2687835.598...\n4404\n738\n738\n\n\n4404\nPOLYGON ((2687835.257 1233836.065, 2687835.598...\n4404\n390\n390\n\n\n\n\n6389 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/horgen.html#measure",
    "href": "analysis/horgen.html#measure",
    "title": "maxvogt-analysis: Horgen",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Horgen/eri_and_elongation.svg')  \n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Horgen/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Horgen/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Horgen/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/measurement.py:74: RuntimeWarning: invalid value encountered in distance\n  return lib.distance(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Horgen/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Buchs/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Horgen/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n3899\nPOLYGON ((2689319.058 1228502.785, 2689319.373...\n909\n13536.968857\n0.999685\n0.002196\n40591.707399\n0.001398\n\n\n1\n2519\nPOLYGON ((2689877.834 1229266.445, 2689878.299...\n1067\n14206.747812\n0.971804\n0.002107\n38576.168129\n0.008151\n\n\n2\n2550\nPOLYGON ((2689503.117 1228802.495, 2689502.828...\n231\n17390.268825\n0.995609\n0.003911\n69629.139769\n0.007822\n\n\n3\n2552\nPOLYGON ((2689455.083 1228900.881, 2689453.879...\n231\n28673.263230\n0.997154\n0.004734\n83935.908790\n0.004550\n\n\n4\n2553\nPOLYGON ((2689582.424 1229277.091, 2689583.224...\n236\n40005.075688\n0.998041\n0.004150\n80999.264679\n0.016470\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4397\n3567\nPOLYGON ((2684418.216 1236283.851, 2684417.790...\n951\n3517.037790\n0.741056\n0.009379\n24418.652313\n0.026464\n\n\n4398\n3168\nPOLYGON ((2684517.058 1236218.230, 2684516.937...\n951\n16446.356915\n0.984527\n0.012133\n53586.974197\n0.028138\n\n\n4399\n1077\nPOLYGON ((2686636.264 1236016.009, 2686635.376...\n385\n13928.036878\n0.991460\n0.008741\n21846.889918\n0.018775\n\n\n4400\n3058\nPOLYGON ((2684352.774 1236379.668, 2684340.129...\n951\n26998.373794\n0.997732\n0.001617\n38883.381637\n0.003054\n\n\n4401\n3059\nPOLYGON ((2684438.083 1236281.038, 2684437.746...\n951\n7648.509071\n0.997930\n0.011688\n33532.051510\n0.001875\n\n\n\n\n4402 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/horgen.html#understanding-the-context",
    "href": "analysis/horgen.html#understanding-the-context",
    "title": "maxvogt-analysis: Horgen",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_17680/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n20295.853700\n20295.853700\n20295.853700\n0.926016\n0.926016\n0.926016\n0.001830\n0.001830\n0.001830\n40591.707399\n...\n1.229059e+06\n6.0\n6.0\n6.0\n0.000041\n0.000041\n0.000041\n1.285714\n1.285714\n1.285714\n\n\n1\n8312.384337\n13893.159983\n29750.383925\n0.976395\n0.988553\n0.994496\n0.004256\n0.005333\n0.015039\n62877.036349\n...\n1.229563e+06\n2.5\n4.0\n5.5\n0.000005\n0.000032\n0.000063\n-0.000000\n0.400000\n0.428571\n\n\n2\n12678.932766\n14306.769020\n21814.991149\n0.913928\n0.975653\n0.995598\n0.004804\n0.005887\n0.009185\n60535.816244\n...\n1.229191e+06\n4.0\n6.0\n6.0\n0.000000\n0.000041\n0.000059\n0.000000\n0.909091\n1.285714\n\n\n3\n7971.941841\n13119.079225\n16687.462905\n0.911438\n0.976800\n0.994006\n0.005394\n0.009645\n0.014407\n41491.483420\n...\n1.229191e+06\n6.0\n6.0\n6.0\n0.000041\n0.000059\n0.000059\n0.909091\n0.909091\n1.097403\n\n\n4\n1250.221776\n2625.603244\n8371.837168\n0.943774\n0.969071\n0.983559\n0.015141\n0.022922\n0.033719\n17771.773612\n...\n1.229546e+06\n1.0\n5.0\n5.5\n0.000041\n0.000051\n0.000067\n0.400000\n0.555556\n0.555556\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4397\n3062.904136\n7478.348459\n13197.316837\n0.918197\n0.983055\n0.992881\n0.009690\n0.013852\n0.016316\n34580.621922\n...\n1.236327e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.000000\n-0.000000\n-0.000000\n\n\n4398\n3676.395892\n6707.813043\n11252.852991\n0.943990\n0.959093\n0.988009\n0.009690\n0.013428\n0.016318\n35423.593686\n...\n1.236327e+06\n1.0\n1.0\n5.0\n0.000000\n0.000000\n0.000024\n-0.000000\n-0.000000\n2.000000\n\n\n4399\n462.725229\n1392.490924\n2392.734452\n0.898778\n0.955623\n0.989855\n0.016694\n0.041426\n0.068439\n8624.710343\n...\n1.236018e+06\n4.0\n5.0\n6.0\n0.000025\n0.000042\n0.000042\n0.857143\n0.857143\n1.000000\n\n\n4400\n4034.543958\n7478.348459\n11200.428376\n0.918197\n0.964269\n0.996001\n0.008701\n0.010844\n0.016316\n34580.621922\n...\n1.236327e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.000000\n-0.000000\n-0.000000\n\n\n4401\n4552.050125\n7648.509071\n11704.140047\n0.944098\n0.982650\n0.994270\n0.008703\n0.011688\n0.015752\n35629.192334\n...\n1.236327e+06\n1.0\n1.0\n5.0\n0.000000\n0.000000\n0.000024\n0.000000\n0.000000\n2.000000\n\n\n\n\n4402 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Horgen/convexity.svg')"
  },
  {
    "objectID": "analysis/horgen.html#clustering",
    "href": "analysis/horgen.html#clustering",
    "title": "maxvogt-analysis: Horgen",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n5.964129\n4.489802\n2.971976\n0.147309\n-2.050268\n-4.838937\n-1.944423\n-2.249626\n-2.466641\n2.233410\n...\n-2.444281\n1.135398\n0.703586\n0.320717\n-0.587106\n-0.818632\n-0.994063\n1.155988\n0.943902\n0.739740\n\n\n1\n2.145222\n2.851285\n4.769267\n2.340401\n2.256864\n1.774134\n-1.771262\n-2.030680\n-1.757687\n4.043226\n...\n-2.174389\n-0.712788\n-0.739482\n-0.167963\n-1.131420\n-0.945250\n-0.744876\n-0.688147\n-0.300631\n-0.403002\n\n\n2\n3.536759\n2.957132\n3.260761\n-0.378915\n1.368420\n1.880554\n-1.732157\n-1.996012\n-2.071872\n3.853093\n...\n-2.373496\n0.079292\n0.703586\n0.320717\n-1.207278\n-0.818632\n-0.791357\n-0.688147\n0.414701\n0.739740\n\n\n3\n2.036729\n2.653190\n2.286026\n-0.487309\n1.447428\n1.726819\n-1.690036\n-1.761195\n-1.791604\n2.306482\n...\n-2.373496\n1.135398\n0.703586\n0.320717\n-0.587106\n-0.594654\n-0.791357\n0.615787\n0.414701\n0.488683\n\n\n4\n-0.105357\n-0.032202\n0.705238\n0.920354\n0.915060\n0.718000\n-0.994383\n-0.931319\n-0.755058\n0.380178\n...\n-2.183213\n-1.504867\n-0.017948\n-0.167963\n-0.588328\n-0.697673\n-0.698258\n-0.114416\n-0.082057\n-0.233707\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4397\n0.472311\n1.209667\n1.622555\n-0.193087\n1.878239\n1.618188\n-1.383412\n-1.498203\n-1.689119\n1.745243\n...\n1.449723\n-1.504867\n-2.904084\n-4.566089\n-1.207278\n-1.355241\n-1.479710\n-0.688147\n-0.862679\n-0.974373\n\n\n4398\n0.667819\n1.012479\n1.252915\n0.929731\n0.227862\n1.147742\n-1.383412\n-1.524727\n-1.689026\n1.813702\n...\n1.449723\n-1.504867\n-2.904084\n-0.656644\n-1.207278\n-1.355241\n-1.196904\n-0.688147\n-0.862679\n1.692024\n\n\n4399\n-0.356317\n-0.347769\n-0.431380\n-1.038443\n-0.011123\n1.326029\n-0.883526\n0.225139\n1.108394\n-0.362665\n...\n1.283781\n0.079292\n-0.017948\n0.320717\n-0.835819\n-0.810453\n-0.986661\n0.541276\n0.341708\n0.358826\n\n\n4400\n0.781954\n1.209667\n1.242949\n-0.193087\n0.584331\n1.919509\n-1.453998\n-1.686205\n-1.689119\n1.745243\n...\n1.449723\n-1.504867\n-2.904084\n-4.566089\n-1.207278\n-1.355241\n-1.479710\n-0.688147\n-0.862679\n-0.974373\n\n\n4401\n0.946874\n1.253213\n1.338704\n0.934465\n1.850354\n1.752384\n-1.453835\n-1.633493\n-1.719419\n1.830399\n...\n1.449723\n-1.504867\n-2.904084\n-0.656644\n-1.207278\n-1.355241\n-1.196904\n-0.688147\n-0.862679\n1.692024\n\n\n\n\n4402 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.039 seconds.\nK=3 fitted in 0.048 seconds.\nK=4 fitted in 0.064 seconds.\nK=5 fitted in 0.069 seconds.\nK=6 fitted in 0.127 seconds.\nK=7 fitted in 0.077 seconds.\nK=8 fitted in 0.074 seconds.\nK=9 fitted in 0.089 seconds.\nK=10 fitted in 0.085 seconds.\nK=11 fitted in 0.101 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n0\n1\n3\n3\n3\n0\n5\n0\n5\n7\n\n\n1\n0\n0\n1\n3\n2\n4\n0\n5\n0\n5\n7\n\n\n2\n0\n0\n1\n3\n2\n4\n0\n5\n0\n5\n7\n\n\n3\n0\n0\n1\n3\n2\n4\n2\n2\n4\n2\n2\n\n\n4\n0\n0\n1\n0\n4\n1\n4\n6\n5\n1\n3\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/horgen.html#export",
    "href": "analysis/horgen.html#export",
    "title": "maxvogt-analysis: Horgen",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Horgen.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/horgen.html#utilities",
    "href": "analysis/horgen.html#utilities",
    "title": "maxvogt-analysis: Horgen",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/hinwil.html",
    "href": "analysis/hinwil.html",
    "title": "maxvogt-analysis: Hinwil",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - HI007 - HI098 (Former Station Fountain)\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Hinwil, Switzerland'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/hinwil.html#input-data",
    "href": "analysis/hinwil.html#input-data",
    "title": "maxvogt-analysis: Hinwil",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\namenity\ngeometry\npower\nopening_hours\noperator\nphone\naddr:city\naddr:housenumber\naddr:postcode\naddr:street\n...\nold_name\nshelter_type\ntower:type\nmanufacturer\nbuilding:levels:underground\narea\nconstruction\nopening_date\nways\ntype\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n37866122\nNaN\nPOLYGON ((8.83705 47.29927, 8.83706 47.29941, ...\nNaN\nNaN\nHiwi-Märt AG\nNaN\nHinwil\n14\n8340\nGossauerstrasse\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n41459178\nNaN\nPOLYGON ((8.81779 47.28818, 8.81808 47.28830, ...\nNaN\nNaN\nNaN\nNaN\nHinwil\n10\n8340\nAffeltrangerstrasse\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n44949587\nNaN\nPOLYGON ((8.86082 47.28769, 8.86088 47.28765, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n197215043\nNaN\nPOLYGON ((8.88630 47.29361, 8.88635 47.29363, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n197215048\nNaN\nPOLYGON ((8.88374 47.28935, 8.88392 47.28931, ...\nNaN\nNaN\nNaN\nNaN\nWernetshausen\n104\n8342\nBachtelstrasse\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1301798699\nNaN\nPOLYGON ((8.82942 47.30525, 8.82945 47.30522, ...\nNaN\nNaN\nNaN\nNaN\nHinwil\n76.1\n8340\nZürichstrasse\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1301823519\nNaN\nPOLYGON ((8.82266 47.30428, 8.82283 47.30431, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1301826157\nNaN\nPOLYGON ((8.82220 47.30355, 8.82217 47.30353, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1301826158\nNaN\nPOLYGON ((8.82190 47.30373, 8.82186 47.30370, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nrelation\n11087211\nNaN\nPOLYGON ((8.82445 47.30550, 8.82429 47.30518, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[447830449, 261666745]\nmultipolygon\n\n\n\n\n3371 rows × 110 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    3371\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2705760.176 1239652.098, 2705761.127...\n0\n\n\n1\nPOLYGON ((2704325.296 1238392.945, 2704347.170...\n1\n\n\n2\nPOLYGON ((2707580.982 1238396.987, 2707585.429...\n2\n\n\n3\nPOLYGON ((2709496.399 1239090.414, 2709499.873...\n3\n\n\n4\nPOLYGON ((2709311.336 1238612.786, 2709324.817...\n4\n\n\n...\n...\n...\n\n\n3366\nPOLYGON ((2705171.625 1240306.295, 2705174.125...\n3366\n\n\n3367\nPOLYGON ((2704662.331 1240188.971, 2704675.277...\n3367\n\n\n3368\nPOLYGON ((2704628.780 1240107.384, 2704627.008...\n3368\n\n\n3369\nPOLYGON ((2704605.774 1240127.383, 2704602.630...\n3369\n\n\n3370\nPOLYGON ((2704795.666 1240326.685, 2704783.932...\n3370\n\n\n\n\n3371 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nlanes\nref\nname\nhighway\nmaxspeed\noneway\nreversed\nlength\ngeometry\nbridge\njunction\ntunnel\naccess\nwidth\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n29751007\n3907585852\n0\n4986333\n2\n345\nWinterthurerstrasse\nsecondary\n60\nFalse\nFalse\n67.062\nLINESTRING (2705460.183 1240148.014, 2705457.1...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n9844192956\n0\n139671086\n1\nN15;340\nZürichstrasse\nsecondary\n60\nTrue\nFalse\n29.564\nLINESTRING (2705460.183 1240148.014, 2705456.4...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3907585820\n0\n387463650\n1\nN15;345\nWinterthurerstrasse\nsecondary\n60\nTrue\nFalse\n22.822\nLINESTRING (2705460.183 1240148.014, 2705460.4...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2362394420\n0\n387463655\n2\n790\nZürichstrasse\ntertiary\n60\nFalse\nTrue\n34.693\nLINESTRING (2705460.183 1240148.014, 2705468.6...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3907585852\n29751007\n0\n4986333\n2\n345\nWinterthurerstrasse\nsecondary\n60\nFalse\nTrue\n67.062\nLINESTRING (2705445.188 1240213.376, 2705456.3...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n10728620911\n11362401671\n0\n[890632326, 1253274189, 1253274192, 1253284122...\n2\nNaN\nDürntnerstrasse\ntertiary\n50\nFalse\nTrue\n184.224\nLINESTRING (2706251.435 1239986.540, 2706249.2...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10080270859\n11262755147\n0\n40611308\nNaN\nNaN\nOrnbergweg\nresidential\nNaN\nFalse\nTrue\n285.740\nLINESTRING (2708653.067 1238234.155, 2708658.5...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11362401671\n10728620911\n0\n[890632326, 1253274189, 1253274192, 1253284122...\n2\nNaN\nDürntnerstrasse\ntertiary\n50\nFalse\nFalse\n184.224\nLINESTRING (2706159.319 1239828.525, 2706179.1...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11330537467\n0\n1221685960\n1\nNaN\nSchätti Kreisel\ntertiary\n50\nTrue\nFalse\n31.894\nLINESTRING (2706159.319 1239828.525, 2706155.8...\nNaN\nroundabout\nNaN\nNaN\nNaN\n\n\n11503366595\n1599382478\n0\n[1253928000, 146668673, 146668674, 288229670, ...\n[2, 1]\nA52\nForchstrasse\n[motorway_link, trunk]\n[100, 60, 80]\nTrue\nFalse\n854.269\nLINESTRING (2703486.540 1238111.444, 2703506.8...\nyes\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n929 rows × 15 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2705460.183 1240148.014, 2705457.1...\n0\n\n\n1\nLINESTRING (2705460.183 1240148.014, 2705456.4...\n1\n\n\n2\nLINESTRING (2705460.183 1240148.014, 2705460.4...\n2\n\n\n3\nLINESTRING (2705460.183 1240148.014, 2705468.6...\n3\n\n\n4\nLINESTRING (2705445.188 1240213.376, 2705456.3...\n4\n\n\n...\n...\n...\n\n\n818\nLINESTRING (2710431.659 1240764.968, 2710409.5...\n818\n\n\n819\nLINESTRING (2710471.566 1240720.909, 2710451.4...\n819\n\n\n820\nLINESTRING (2710530.910 1241632.281, 2710552.2...\n820\n\n\n821\nLINESTRING (2711277.527 1241554.569, 2711156.5...\n821\n\n\n822\nLINESTRING (2711496.319 1241101.569, 2711492.4...\n822\n\n\n\n\n823 rows × 2 columns"
  },
  {
    "objectID": "analysis/hinwil.html#generated-data",
    "href": "analysis/hinwil.html#generated-data",
    "title": "maxvogt-analysis: Hinwil",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2705760.176 1239652.098, 2705761.127...\n0\n41\n41\n\n\n1\nPOLYGON ((2704325.296 1238392.945, 2704347.170...\n1\n244\n244\n\n\n1\nPOLYGON ((2704325.296 1238392.945, 2704347.170...\n1\n248\n248\n\n\n2\nPOLYGON ((2707580.982 1238396.987, 2707585.429...\n2\n550\n550\n\n\n3\nPOLYGON ((2709496.399 1239090.414, 2709499.873...\n3\n816\n816\n\n\n...\n...\n...\n...\n...\n\n\n3368\nPOLYGON ((2704628.780 1240107.384, 2704627.008...\n3368\n687\n687\n\n\n3369\nPOLYGON ((2704605.774 1240127.383, 2704602.630...\n3369\n685\n685\n\n\n3369\nPOLYGON ((2704605.774 1240127.383, 2704602.630...\n3369\n687\n687\n\n\n3370\nPOLYGON ((2704795.666 1240326.685, 2704783.932...\n3370\n685\n685\n\n\n3370\nPOLYGON ((2704795.666 1240326.685, 2704783.932...\n3370\n687\n687\n\n\n\n\n4983 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/hinwil.html#measure",
    "href": "analysis/hinwil.html#measure",
    "title": "maxvogt-analysis: Hinwil",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Hinwil/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Hinwil/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Hinwil/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Hinwil/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Hinwil/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Hinwil/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Hinwil/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n1752\nPOLYGON ((2704495.922 1237552.399, 2704496.605...\n331\n14197.776303\n0.993425\n0.004365\n74464.499145\n0.006100\n\n\n1\n1751\nPOLYGON ((2704556.814 1237710.500, 2704557.156...\n331\n30705.358000\n0.936414\n0.002924\n74464.499145\n0.033955\n\n\n2\n1741\nPOLYGON ((2703991.313 1238223.035, 2704028.248...\n718\n11854.038742\n0.989468\n0.007114\n47620.617115\n0.008663\n\n\n3\n1742\nPOLYGON ((2704037.482 1238121.010, 2704040.251...\n424\n17243.528492\n0.998736\n0.007986\n66441.457194\n0.004144\n\n\n4\n1743\nPOLYGON ((2704166.599 1238067.697, 2704166.264...\n722\n18820.840078\n0.990412\n0.005465\n63073.491846\n0.032214\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3366\n2467\nPOLYGON ((2704530.376 1241367.296, 2704529.732...\n725\n2891.204794\n0.913702\n0.021516\n39727.450163\n0.098264\n\n\n3367\n2458\nPOLYGON ((2704442.841 1241348.375, 2704426.680...\n565\n5417.540138\n0.925430\n0.013436\n46781.051256\n0.104294\n\n\n3368\n2459\nPOLYGON ((2704365.066 1241321.127, 2704363.107...\n565\n18753.887710\n0.957124\n0.011488\n58199.318663\n0.076637\n\n\n3369\n2464\nPOLYGON ((2704554.620 1241392.480, 2704553.849...\n725\n17266.101277\n0.980555\n0.007807\n36744.611219\n0.017004\n\n\n3370\n1711\nPOLYGON ((2706173.383 1242298.480, 2706169.817...\n406\n14286.300435\n0.999368\n0.002134\n27155.035095\n0.000276\n\n\n\n\n3371 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/hinwil.html#understanding-the-context",
    "href": "analysis/hinwil.html#understanding-the-context",
    "title": "maxvogt-analysis: Hinwil",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37169/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n21879.570573\n29561.364842\n30133.361421\n0.964919\n0.993425\n0.995696\n0.003036\n0.003149\n0.003757\n74464.499145\n...\n1.237561e+06\n4.0\n4.0\n4.0\n0.000000\n0.000000\n0.000000\n-0.000000\n0.000000\n-0.000000\n\n\n1\n21879.570573\n29561.364842\n30133.361421\n0.964919\n0.993425\n0.995696\n0.003036\n0.003149\n0.003757\n74464.499145\n...\n1.237561e+06\n4.0\n4.0\n4.0\n0.000000\n0.000000\n0.000000\n-0.000000\n0.000000\n-0.000000\n\n\n2\n667.535253\n3661.049283\n14548.783617\n0.889054\n0.940970\n0.989476\n0.011033\n0.019080\n0.037468\n19595.010068\n...\n1.238272e+06\n1.0\n1.0\n5.0\n0.000025\n0.000025\n0.000026\n1.000000\n1.000000\n1.000000\n\n\n3\n667.535253\n3661.049283\n14548.783617\n0.889054\n0.940970\n0.989476\n0.011033\n0.019080\n0.037468\n19595.010068\n...\n1.238272e+06\n1.0\n1.0\n5.0\n0.000025\n0.000025\n0.000026\n1.000000\n1.000000\n1.000000\n\n\n4\n674.586107\n2816.295040\n11854.038742\n0.892062\n0.953220\n0.989483\n0.011963\n0.017316\n0.029040\n20287.192988\n...\n1.238272e+06\n1.0\n1.0\n5.0\n0.000025\n0.000025\n0.000026\n1.000000\n1.000000\n1.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3366\n1885.186915\n5517.753323\n10732.565613\n0.934880\n0.976937\n0.981188\n0.013977\n0.017487\n0.022390\n34356.831535\n...\n1.241369e+06\n5.0\n6.0\n6.0\n0.000070\n0.000077\n0.000098\n0.636364\n0.748252\n0.769231\n\n\n3367\n1554.919709\n4731.174353\n9520.243873\n0.941363\n0.961254\n0.981081\n0.013751\n0.018438\n0.023635\n32540.021097\n...\n1.241375e+06\n5.0\n5.5\n6.0\n0.000070\n0.000079\n0.000094\n0.636364\n0.681818\n0.769231\n\n\n3368\n1554.919709\n5417.540138\n10009.597739\n0.943600\n0.969100\n0.981188\n0.011880\n0.018298\n0.023635\n26785.330101\n...\n1.241375e+06\n5.0\n5.0\n6.0\n0.000063\n0.000079\n0.000090\n0.636364\n0.636364\n0.769231\n\n\n3369\n1885.186915\n5517.753323\n10732.565613\n0.934880\n0.976937\n0.981188\n0.013977\n0.017487\n0.022390\n34356.831535\n...\n1.241369e+06\n5.0\n6.0\n6.0\n0.000070\n0.000077\n0.000098\n0.636364\n0.748252\n0.769231\n\n\n3370\n11248.175555\n11691.923328\n12868.734660\n0.994189\n0.996732\n0.998635\n0.003248\n0.006518\n0.016647\n38846.958423\n...\n1.242291e+06\n5.0\n5.0\n5.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n\n\n3371 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Hinwil/convexity.svg')"
  },
  {
    "objectID": "analysis/hinwil.html#clustering",
    "href": "analysis/hinwil.html#clustering",
    "title": "maxvogt-analysis: Hinwil",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n7.209870\n7.286181\n4.855817\n1.714160\n2.543734\n1.935284\n-1.804905\n-2.158158\n-2.485996\n4.427715\n...\n-2.295952\n0.063097\n-0.741173\n-1.531257\n-1.352337\n-1.483899\n-1.590259\n-1.163039\n-1.158138\n-1.189781\n\n\n1\n7.209870\n7.286181\n4.855817\n1.714160\n2.543734\n1.935284\n-1.804905\n-2.158158\n-2.485996\n4.427715\n...\n-2.295952\n0.063097\n-0.741173\n-1.531257\n-1.352337\n-1.483899\n-1.590259\n-1.163039\n-1.158138\n-1.189781\n\n\n2\n-0.321427\n0.244688\n1.844823\n-1.633708\n-1.183617\n1.288746\n-1.205174\n-1.118234\n-0.511858\n0.404860\n...\n-1.571104\n-1.481951\n-2.823828\n-0.626460\n-1.018708\n-1.195673\n-1.324438\n1.092020\n0.721440\n0.486317\n\n\n3\n-0.321427\n0.244688\n1.844823\n-1.633708\n-1.183617\n1.288746\n-1.205174\n-1.118234\n-0.511858\n0.404860\n...\n-1.571104\n-1.481951\n-2.823828\n-0.626460\n-1.018708\n-1.195673\n-1.324438\n1.092020\n0.721440\n0.486317\n\n\n4\n-0.318924\n0.015025\n1.324189\n-1.500958\n-0.313133\n1.289522\n-1.135378\n-1.233364\n-1.005410\n0.455609\n...\n-1.571104\n-1.481951\n-2.823828\n-0.626460\n-1.018708\n-1.195673\n-1.324438\n1.092020\n0.721440\n0.486317\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3366\n0.110898\n0.749468\n1.107517\n0.388551\n1.372116\n0.427345\n-0.984375\n-1.222186\n-1.394818\n1.487149\n...\n1.585610\n0.578114\n0.647265\n0.278337\n-0.436100\n-0.612016\n-0.575030\n0.271998\n0.248260\n0.099525\n\n\n3367\n-0.006363\n0.535622\n0.873292\n0.674652\n0.257728\n0.416249\n-1.001315\n-1.160145\n-1.321945\n1.353947\n...\n1.591718\n0.578114\n0.300155\n0.278337\n-0.436100\n-0.584039\n-0.613111\n0.271998\n0.123393\n0.099525\n\n\n3368\n-0.006363\n0.722223\n0.967837\n0.773347\n0.815248\n0.427345\n-1.141635\n-1.169246\n-1.321945\n0.932031\n...\n1.591718\n0.578114\n-0.046954\n0.278337\n-0.529162\n-0.584039\n-0.651192\n0.271998\n0.037957\n0.099525\n\n\n3369\n0.110898\n0.749468\n1.107517\n0.388551\n1.372116\n0.427345\n-0.984375\n-1.222186\n-1.394818\n1.487149\n...\n1.585610\n0.578114\n0.647265\n0.278337\n-0.436100\n-0.612016\n-0.575030\n0.271998\n0.248260\n0.099525\n\n\n3370\n3.435211\n2.428034\n1.520232\n3.005776\n2.778725\n2.240817\n-1.789050\n-1.938265\n-1.731122\n1.816351\n...\n2.526435\n0.578114\n-0.046954\n-0.626460\n-1.352337\n-1.483899\n-1.590259\n-1.163039\n-1.158138\n-1.189781\n\n\n\n\n3371 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.034 seconds.\nK=3 fitted in 0.041 seconds.\nK=4 fitted in 0.041 seconds.\nK=5 fitted in 0.055 seconds.\nK=6 fitted in 0.078 seconds.\nK=7 fitted in 0.074 seconds.\nK=8 fitted in 0.064 seconds.\nK=9 fitted in 0.073 seconds.\nK=10 fitted in 0.092 seconds.\nK=11 fitted in 0.090 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n0\n3\n4\n5\n4\n1\n8\n6\n2\n\n\n1\n0\n1\n0\n3\n4\n5\n4\n1\n8\n6\n2\n\n\n2\n0\n1\n2\n1\n3\n1\n0\n0\n3\n1\n4\n\n\n3\n0\n1\n2\n1\n3\n1\n0\n0\n3\n1\n4\n\n\n4\n0\n1\n2\n1\n3\n1\n0\n0\n3\n1\n4\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/hinwil.html#export",
    "href": "analysis/hinwil.html#export",
    "title": "maxvogt-analysis: Hinwil",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Hinwil.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/hinwil.html#utilities",
    "href": "analysis/hinwil.html#utilities",
    "title": "maxvogt-analysis: Hinwil",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/feldbach.html",
    "href": "analysis/feldbach.html",
    "title": "maxvogt-analysis: Feldbach",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - FB023\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Hombrechtikon'\npoint = 47.23927, 8.78385\naddress = 'Bahnhofstrasse 16, 8714 Feldbach'\ndist = 2000\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(address).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/feldbach.html#input-data",
    "href": "analysis/feldbach.html#input-data",
    "title": "maxvogt-analysis: Feldbach",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\n#buildings = osmnx.features.features_from_place(place, tags={'building':True})\n#buildings = osmnx.features.features_from_address(address, tags={'building':True}, dist=dist)\nbuildings = osmnx.features.features_from_point(point, tags={'building':True}, dist=dist)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\naddr:city\naddr:country\naddr:postcode\naddr:street\ngeometry\naddr:housenumber\nname\namenity\ncheck_date\nopening_hours\n...\nlanduse\nshelter_type\nfee\nroof:colour\nbuilding:material\nbuilding:levels:underground\nheight\nnote\nways\ntype\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n11788372868\nHombrechtikon\nCH\n8634\nRichttannstrasse\nPOINT (8.78107 47.25653)\n17a\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11788398769\nHombrechtikon\nCH\n8634\nRichttannstrasse\nPOINT (8.78104 47.25638)\n17c\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11788398770\nHombrechtikon\nCH\n8634\nRichttannstrasse\nPOINT (8.78102 47.25623)\n17e\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11788398771\nHombrechtikon\nCH\n8634\nRichttannstrasse\nPOINT (8.78123 47.25630)\n17d\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11788398772\nHombrechtikon\nCH\n8634\nRichttannstrasse\nPOINT (8.78127 47.25648)\n17b\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nway\n1279666737\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.78341 47.23920, 8.78341 47.23921, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1292789241\nWolfhausen\nNaN\n8633\nBachstrasse\nPOLYGON ((8.79487 47.25559, 8.79481 47.25546, ...\n1b\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1292789243\nWolfhausen\nNaN\n8633\nSunnenbergweg\nPOLYGON ((8.80202 47.25623, 8.80202 47.25622, ...\n6c\nLudothek\ntoy_library\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nDienstag und Donnerstag 15.00 – 17.00 Uhr Jede...\nNaN\nNaN\n\n\n1302337540\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.77538 47.24756, 8.77544 47.24759, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nrelation\n3988119\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((8.75695 47.24331, 8.75700 47.24332, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[92088056, 299895486]\nmultipolygon\n\n\n\n\n3273 rows × 90 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    3268\nPoint         5\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2700792.775 1234644.065, 2700787.029...\n0\n\n\n1\nPOLYGON ((2700878.775 1234643.302, 2700886.588...\n1\n\n\n2\nPOLYGON ((2700832.914 1234669.955, 2700834.003...\n2\n\n\n3\nPOLYGON ((2700832.622 1234699.183, 2700860.864...\n3\n\n\n4\nPOLYGON ((2700878.707 1234693.227, 2700874.023...\n4\n\n\n...\n...\n...\n\n\n3263\nPOLYGON ((2701818.736 1232903.118, 2701818.179...\n3263\n\n\n3264\nPOLYGON ((2702654.491 1234739.627, 2702650.608...\n3264\n\n\n3265\nPOLYGON ((2703194.703 1234820.278, 2703194.248...\n3265\n\n\n3266\nPOLYGON ((2701194.560 1233821.789, 2701199.075...\n3266\n\n\n3267\nPOLYGON ((2699807.659 1233326.448, 2699811.189...\n3267\n\n\n\n\n3268 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\n#osm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n#osm_graph = osmnx.graph_from_address(place, network_type='drive', truncate_by_edge=True, dist=dist)\nosm_graph = osmnx.graph_from_point(point, network_type='drive', truncate_by_edge=True, dist=dist)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/osmnx/graph.py:191: FutureWarning: The expected order of coordinates in `bbox` will change in the v2.0.0 release to `(left, bottom, right, top)`.\n  G = graph_from_bbox(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nname\nhighway\noneway\nreversed\nlength\ngeometry\nlanes\nref\nmaxspeed\njunction\nbridge\ntunnel\naccess\nwidth\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2114011\n371575044\n0\n32985228\nFuchsenbergstrasse\nresidential\nFalse\nFalse\n213.072\nLINESTRING (2703568.100 1232962.929, 2703562.5...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1032285810\n0\n[27454813, 27454812, 139668861, 1304695951]\n[Zürcherstrasse, Seestrasse]\nprimary\nFalse\nFalse\n1450.631\nLINESTRING (2703568.100 1232962.929, 2703477.2...\n2\n17\n[50, 80, 60]\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n371575052\n0\n139668861\nZürcherstrasse\nprimary\nFalse\nTrue\n145.840\nLINESTRING (2703568.100 1232962.929, 2703601.7...\n2\n17\n50\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n371575044\n2114011\n0\n32985228\nFuchsenbergstrasse\nresidential\nFalse\nTrue\n213.072\nLINESTRING (2703649.323 1232905.412, 2703603.6...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1032285810\n2114011\n0\n[139668861, 27454812, 27454813, 1304695951]\n[Zürcherstrasse, Seestrasse]\nprimary\nFalse\nTrue\n1450.631\nLINESTRING (2702160.366 1232963.258, 2702169.4...\n2\n17\n[50, 80, 60]\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n9524984347\n9572202192\n0\n1039508456\nSunnebach\nresidential\nFalse\nTrue\n114.458\nLINESTRING (2700885.988 1233723.948, 2700893.1...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10108135108\n10108135110\n0\n1104611411\nTal\nresidential\nFalse\nTrue\n38.889\nLINESTRING (2702741.637 1233330.774, 2702762.2...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10108155023\n10108155025\n0\n1104611427\nSandhof\nresidential\nFalse\nTrue\n14.134\nLINESTRING (2702158.830 1233432.972, 2702167.7...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10108155044\n10108155045\n0\n1104611431\nNeuhaus\nresidential\nFalse\nTrue\n34.149\nLINESTRING (2699928.511 1234508.624, 2699941.2...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10605539793\n10605539792\n0\n1137768728\nNaN\nresidential\nFalse\nTrue\n10.522\nLINESTRING (2703616.227 1233047.942, 2703615.7...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n773 rows × 15 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2703568.100 1232962.929, 2703477.2...\n0\n\n\n1\nLINESTRING (2703568.100 1232962.929, 2703601.7...\n1\n\n\n2\nLINESTRING (2702160.366 1232963.258, 2702169.4...\n2\n\n\n3\nLINESTRING (2702160.366 1232963.258, 2702150.8...\n3\n\n\n4\nLINESTRING (2703708.805 1232924.697, 2703709.4...\n4\n\n\n...\n...\n...\n\n\n664\nLINESTRING (2703615.779 1233058.453, 2703616.2...\n664\n\n\n665\nLINESTRING (2703587.436 1234852.469, 2703608.7...\n665\n\n\n666\nLINESTRING (2703651.551 1234564.435, 2703646.0...\n666\n\n\n667\nLINESTRING (2703708.805 1232924.697, 2703718.4...\n667\n\n\n668\nLINESTRING (2704053.903 1233322.850, 2704047.1...\n668\n\n\n\n\n669 rows × 2 columns"
  },
  {
    "objectID": "analysis/feldbach.html#generated-data",
    "href": "analysis/feldbach.html#generated-data",
    "title": "maxvogt-analysis: Feldbach",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2700792.775 1234644.065, 2700787.029...\n0\n300.0\n300.0\n\n\n0\nPOLYGON ((2700792.775 1234644.065, 2700787.029...\n0\n295.0\n295.0\n\n\n1\nPOLYGON ((2700878.775 1234643.302, 2700886.588...\n1\n300.0\n300.0\n\n\n2\nPOLYGON ((2700832.914 1234669.955, 2700834.003...\n2\n598.0\n598.0\n\n\n3\nPOLYGON ((2700832.622 1234699.183, 2700860.864...\n3\n598.0\n598.0\n\n\n...\n...\n...\n...\n...\n\n\n3264\nPOLYGON ((2702654.491 1234739.627, 2702650.608...\n3264\n651.0\n651.0\n\n\n3265\nPOLYGON ((2703194.703 1234820.278, 2703194.248...\n3265\n519.0\n519.0\n\n\n3265\nPOLYGON ((2703194.703 1234820.278, 2703194.248...\n3265\n516.0\n516.0\n\n\n3266\nPOLYGON ((2701194.560 1233821.789, 2701199.075...\n3266\n608.0\n608.0\n\n\n3267\nPOLYGON ((2699807.659 1233326.448, 2699811.189...\n3267\n574.0\n574.0\n\n\n\n\n4716 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/feldbach.html#measure",
    "href": "analysis/feldbach.html#measure",
    "title": "maxvogt-analysis: Feldbach",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Feldbach/eri_and_elongation.svg')  \n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Feldbach/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Feldbach/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Feldbach/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/measurement.py:74: RuntimeWarning: invalid value encountered in distance\n  return lib.distance(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Feldbach/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Feldbach/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Feldbach/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n3095\nPOLYGON ((2702638.914 1230938.900, 2702638.763...\nNaN\n19381.412152\n0.982674\n0.003562\n24515.266632\n0.002069\n\n\n1\n3247\nPOLYGON ((2703785.843 1232664.354, 2703787.366...\n667.0\n19618.167069\n0.995335\n0.003748\n38120.768675\n0.004076\n\n\n2\n1970\nPOLYGON ((2703613.627 1232709.840, 2703614.767...\n566.0\n17271.757718\n0.993893\n0.010118\n61832.322209\n0.004827\n\n\n3\n3244\nPOLYGON ((2703742.203 1232725.051, 2703741.876...\n667.0\n12161.574008\n0.962994\n0.010827\n66390.587268\n0.075841\n\n\n4\n3245\nPOLYGON ((2703837.021 1232797.495, 2703836.108...\n667.0\n6341.027598\n0.957784\n0.010032\n48632.064511\n0.047893\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3263\n526\nPOLYGON ((2701546.663 1234863.002, 2701545.636...\n356.0\n7784.031108\n0.981132\n0.016834\n25782.205839\n0.022981\n\n\n3264\n2915\nPOLYGON ((2701835.952 1234860.984, 2701835.743...\n637.0\n6076.846798\n0.996447\n0.012347\n24666.758966\n0.003700\n\n\n3265\n557\nPOLYGON ((2701742.261 1234855.356, 2701740.203...\n637.0\n7297.799962\n0.986392\n0.011521\n18443.854955\n0.013412\n\n\n3266\n527\nPOLYGON ((2701436.395 1234875.357, 2701435.262...\n620.0\n3114.904983\n0.864932\n0.009463\n17705.660169\n0.084793\n\n\n3267\n539\nPOLYGON ((2701464.031 1234906.182, 2701463.695...\n620.0\n9599.274165\n0.985126\n0.010226\n22982.036131\n0.021836\n\n\n\n\n3268 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/feldbach.html#understanding-the-context",
    "href": "analysis/feldbach.html#understanding-the-context",
    "title": "maxvogt-analysis: Feldbach",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42961/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n3670.950114\n8220.447746\n14800.676450\n0.952090\n0.983101\n0.986413\n0.004847\n0.006656\n0.007993\n34094.145938\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n2977.481088\n6586.976249\n10218.069701\n0.933160\n0.964596\n0.989908\n0.010075\n0.018642\n0.031125\n23475.253714\n...\n1.232925e+06\n1.0\n1.0\n5.0\n0.000021\n0.000028\n0.000078\n0.285714\n0.666667\n1.000000\n\n\n2\n321.585812\n909.570160\n3245.176074\n0.848060\n0.895136\n0.971374\n0.026477\n0.039647\n0.056468\n4054.885452\n...\n1.232963e+06\n1.0\n5.0\n5.0\n0.000028\n0.000058\n0.000058\n0.400000\n0.400000\n0.666667\n\n\n3\n830.254915\n1638.271008\n6341.027598\n0.870355\n0.949045\n0.976454\n0.015804\n0.033859\n0.046029\n9926.206956\n...\n1.232962e+06\n1.0\n5.0\n5.0\n0.000028\n0.000058\n0.000078\n0.285714\n0.400000\n0.666667\n\n\n4\n1551.470938\n3357.417909\n7621.744117\n0.918397\n0.962994\n0.987814\n0.011055\n0.027627\n0.038335\n13427.751908\n...\n1.232925e+06\n1.0\n5.0\n5.0\n0.000024\n0.000078\n0.000078\n0.285714\n0.285714\n0.833333\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3263\n548.066467\n794.022372\n1541.622059\n0.925427\n0.971227\n0.981734\n0.031745\n0.048711\n0.059822\n4184.385279\n...\n1.234851e+06\n1.0\n4.0\n5.0\n0.000126\n0.000149\n0.000208\n0.230769\n0.248718\n0.444444\n\n\n3264\n1538.037551\n2713.377427\n6889.995243\n0.951274\n0.968204\n0.985910\n0.015942\n0.023926\n0.030706\n24283.026546\n...\n1.234807e+06\n1.0\n1.0\n6.0\n0.000131\n0.000131\n0.000132\n0.600000\n0.705882\n0.705882\n\n\n3265\n1151.142767\n1557.877081\n4419.743170\n0.958271\n0.977700\n0.985561\n0.018971\n0.028673\n0.039781\n11719.967022\n...\n1.234807e+06\n1.0\n1.0\n6.0\n0.000131\n0.000131\n0.000167\n0.608696\n0.705882\n0.705882\n\n\n3266\n500.838199\n675.642486\n2493.713655\n0.872534\n0.948934\n0.979833\n0.025824\n0.040616\n0.057841\n4603.097193\n...\n1.234875e+06\n1.0\n4.0\n5.0\n0.000074\n0.000146\n0.000217\n0.230769\n0.266667\n0.444444\n\n\n3267\n515.827128\n629.359461\n1670.117087\n0.900025\n0.960425\n0.981132\n0.033070\n0.046856\n0.060536\n4506.143941\n...\n1.234851e+06\n1.0\n4.0\n5.0\n0.000135\n0.000146\n0.000217\n0.230769\n0.230769\n0.444444\n\n\n\n\n3268 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Feldbach/convexity.svg')"
  },
  {
    "objectID": "analysis/feldbach.html#clustering",
    "href": "analysis/feldbach.html#clustering",
    "title": "maxvogt-analysis: Feldbach",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n3.174493\n3.673355\n3.584328\n1.214517\n1.924370\n1.043355\n-2.202670\n-2.618353\n-3.099643\n2.810496\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n2.366900\n2.734161\n2.123325\n0.352326\n0.556726\n1.450286\n-1.711602\n-1.614691\n-1.341067\n1.538207\n...\n-1.407410\n-1.255869\n-2.629757\n-0.464333\n-1.193612\n-1.327198\n-0.941679\n-0.398931\n0.600925\n1.652103\n\n\n2\n-0.726076\n-0.530165\n-0.099736\n-3.523610\n-4.576743\n-0.707397\n-0.170891\n0.144342\n0.585553\n-0.788620\n...\n-1.355739\n-1.255869\n0.149867\n-0.464333\n-1.094147\n-0.959996\n-1.164175\n-0.038120\n-0.338398\n0.326464\n\n\n3\n-0.133695\n-0.111185\n0.887267\n-2.508152\n-0.592572\n-0.115995\n-1.173436\n-0.340392\n-0.208032\n-0.085155\n...\n-1.357602\n-1.255869\n0.149867\n-0.464333\n-1.094147\n-0.959996\n-0.941679\n-0.398931\n-0.338398\n0.326464\n\n\n4\n0.706211\n0.877269\n1.295578\n-0.320053\n0.438343\n1.206451\n-1.619554\n-0.862284\n-0.793005\n0.334378\n...\n-1.407410\n-1.255869\n0.149867\n-0.464333\n-1.143879\n-0.703973\n-0.941679\n-0.398931\n-0.740966\n0.989284\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3263\n-0.462323\n-0.596601\n-0.642855\n0.000136\n1.046859\n0.498644\n0.323911\n0.903330\n0.840521\n-0.773104\n...\n1.195539\n-1.255869\n-0.545039\n-0.464333\n0.327957\n0.157586\n0.439817\n-0.572398\n-0.871284\n-0.557294\n\n\n3264\n0.690567\n0.506966\n1.062286\n1.177363\n0.823378\n0.984859\n-1.160519\n-1.172155\n-1.372919\n1.634989\n...\n1.136214\n-1.255869\n-2.629757\n0.515075\n0.407510\n-0.054528\n-0.369850\n0.593298\n0.739061\n0.482422\n\n\n3265\n0.240001\n-0.157409\n0.274733\n1.496010\n1.525185\n0.944187\n-0.876000\n-0.774691\n-0.683047\n0.129762\n...\n1.136214\n-1.255869\n-2.629757\n0.515075\n0.407510\n-0.054528\n0.000865\n0.620751\n0.739061\n0.482422\n\n\n3266\n-0.517324\n-0.664666\n-0.339314\n-2.408895\n-0.600729\n0.277420\n-0.232250\n0.225442\n0.689980\n-0.722936\n...\n1.228345\n-1.255869\n-0.545039\n-0.464333\n-0.419721\n0.124969\n0.530619\n-0.572398\n-0.808060\n-0.557294\n\n\n3267\n-0.499868\n-0.691277\n-0.601888\n-1.156834\n0.248518\n0.428623\n0.448436\n0.747974\n0.894851\n-0.734553\n...\n1.195539\n-1.255869\n-0.545039\n-0.464333\n0.463529\n0.124969\n0.530619\n-0.572398\n-0.934508\n-0.557294\n\n\n\n\n3268 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.036 seconds.\nK=3 fitted in 0.046 seconds.\nK=4 fitted in 0.047 seconds.\nK=5 fitted in 0.064 seconds.\nK=6 fitted in 0.069 seconds.\nK=7 fitted in 0.082 seconds.\nK=8 fitted in 0.071 seconds.\nK=9 fitted in 0.101 seconds.\nK=10 fitted in 0.086 seconds.\nK=11 fitted in 0.110 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n2\n1\n3\n2\n3\n1\n1\n7\n5\n\n\n1\n0\n1\n2\n1\n3\n4\n2\n6\n4\n7\n8\n\n\n2\n0\n0\n1\n0\n2\n0\n0\n0\n8\n1\n6\n\n\n3\n0\n0\n1\n0\n2\n0\n0\n0\n8\n1\n1\n\n\n4\n0\n1\n2\n2\n0\n2\n3\n1\n1\n6\n1\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/feldbach.html#export",
    "href": "analysis/feldbach.html#export",
    "title": "maxvogt-analysis: Feldbach",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Feldbach.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/feldbach.html#utilities",
    "href": "analysis/feldbach.html#utilities",
    "title": "maxvogt-analysis: Feldbach",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "LICENSE-CCBY.html",
    "href": "LICENSE-CCBY.html",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More_considerations\n for the public:\nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org.\n\n\n\n Back to top",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "License (Data)"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html",
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n\n\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at moritz.twente@unibas.ch. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\n\n\n\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-pledge",
    "href": "CODE_OF_CONDUCT.html#our-pledge",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-standards",
    "href": "CODE_OF_CONDUCT.html#our-standards",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Examples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "href": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#scope",
    "href": "CODE_OF_CONDUCT.html#scope",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement",
    "href": "CODE_OF_CONDUCT.html#enforcement",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at moritz.twente@unibas.ch. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "href": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#attribution",
    "href": "CODE_OF_CONDUCT.html#attribution",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "This repository contains data for spatial analyses that are part of a research project on spatial/urban design features of railway-related built structures designed by the Swiss architect Max Vogt. The data in this repository is openly available to everyone and is intended to support reproducible research.\nResults of the analyses are accessible in an online collection of Vogt’s buildings and presented as a poster at the Spatial Humanities 2024 conference at the University of Bamberg.\n         \n\n\nThe structure of this repository is based on the Open Research Data Template by @maehr, follows the Advanced Structure for Data Analysis of The Turing Way and is organized as follows:\n\nanalysis/: notebooks used to retrieve and analyze the data\nassets/: images, logos, etc. used in the README and other documentation\ndata/: data files\ndocs/: documentation for the data and the repository\nresults/: geodata output of the analysis notebooks\n\nAdditionally, there is a Zotero group library with a collection of scientific articles and news reports that are of relevance for this project.\n\n\n\n\nTODO Describe the data in this repository, including what it represents, how it was collected or obtained, any preprocessing or cleaning that was done, and any limitations or potential biases.\nTODO Data models, including field names, descriptions, and controlled values, should be clearly documented in a static document that is maintained with the data and is part of the products.\nTODO All rights and intellectual property issues should be clearly documented. Where possible, data and products should be released under open licenses (Creative Commons, GNU, BSD, MPL).\n\n\n\n\nTo run the analysis locally, create a new conda environment based on the environment.yml file.\nconda env create -f environment.yml\nActivate the environment.\nconda activate maxvogt\nOpen the Jupyter Notebook platform.\njupyter notebook\nPick a notebook to start the spatial analysis for one of Max Vogt’s buildings.\n\n\n\nThese data are openly available to everyone and can be used for any research or educational purpose. If you use this data in your research, please cite as specified in CITATION.cff. The following citation formats are also available through Zenodo:\n\nBibTeX\nCSL\nDataCite\nDublin Core\nDCAT\nJSON\nJSON-LD\nGeoJSON\nMARCXML\n\nZenodo provides an API (REST & OAI-PMH) to access the data. For example, the following command will return the metadata for the most recent version of the data\ncurl -i https://zenodo.org/api/records/ZENODO_RECORD\n\n\n\nThis project is maintained by @mtwente. Please understand that we can’t provide individual support via email. We also believe that help is much more valuable when it’s shared publicly, so more people can benefit from it.\n\n\n\nType\nPlatforms\n\n\n\n\n🚨 Bug Reports\nGitHub Issue Tracker\n\n\n📊 Report bad data\nGitHub Issue Tracker\n\n\n📚 Docs Issue\nGitHub Issue Tracker\n\n\n🎁 Feature Requests\nGitHub Issue Tracker\n\n\n🛡 Report a security vulnerability\nSee SECURITY.md\n\n\n💬 General Questions\nGitHub Discussions\n\n\n\n\n\n\nNo changes are currently planned.\n\n\n\nAll contributions to this repository are welcome! If you find errors or problems with the data, or if you want to add new data or features, please open an issue or pull request. Please read CONTRIBUTING.md for details on our code of conduct and the process for submitting pull requests.\n\n\n\nWe use SemVer for versioning. The available versions are listed in the tags on this repository.\n\n\n\n\nMoritz Twente – Initial work – mtwente\nLuisa Omonsky – Research – omonsgit\n\nThe Jupyter Notebooks used for data retrieval and analysis are based on the 2021 workshop Capturing the Structure of Cities with Data Science workshop by Martin Fleischmann.\nGeodata used in this analysis is retrieved from OpenStreetMap, © OpenStreetMap contributors.\nSee also the list of contributors who contributed to this project.\n\n\n\nThe data in this repository, excluding OpenStreetMap geodata, is released under the Creative Commons Attribution 4.0 International (CC BY 4.0) License - see the LICENSE-CCBY file for details. By using this data, you agree to give appropriate credit to the original author(s) and to indicate if any modifications have been made.\nGeodata in this repository, retrieved from OpenStreetMap, is released under the Open Database License – see the LICENSE-ODbL file for details. By using this data, you agree to adhere to the attribution standards set out in the license and specified by the OpenStreetMap Foundation.\nThe code in this repository, excluding the Jupyter notebooks in /analysis/, is released under the GNU Affero General Public License v3.0 - see the LICENSE-AGPL file for details. By using this code, you agree to make any modifications available under the same license.\nThe Jupyter notebooks in /analysis are released under the Creative Commons Attribution 4.0 International (CC BY 4.0) License - see the LICENSE-CCBY file for details. By using this data, you agree to give appropriate credit to the original author(s) and to indicate if any modifications have been made.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#repository-structure",
    "href": "index.html#repository-structure",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "The structure of this repository is based on the Open Research Data Template by @maehr, follows the Advanced Structure for Data Analysis of The Turing Way and is organized as follows:\n\nanalysis/: notebooks used to retrieve and analyze the data\nassets/: images, logos, etc. used in the README and other documentation\ndata/: data files\ndocs/: documentation for the data and the repository\nresults/: geodata output of the analysis notebooks\n\nAdditionally, there is a Zotero group library with a collection of scientific articles and news reports that are of relevance for this project.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#data-description",
    "href": "index.html#data-description",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "TODO Describe the data in this repository, including what it represents, how it was collected or obtained, any preprocessing or cleaning that was done, and any limitations or potential biases.\nTODO Data models, including field names, descriptions, and controlled values, should be clearly documented in a static document that is maintained with the data and is part of the products.\nTODO All rights and intellectual property issues should be clearly documented. Where possible, data and products should be released under open licenses (Creative Commons, GNU, BSD, MPL).",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "To run the analysis locally, create a new conda environment based on the environment.yml file.\nconda env create -f environment.yml\nActivate the environment.\nconda activate maxvogt\nOpen the Jupyter Notebook platform.\njupyter notebook\nPick a notebook to start the spatial analysis for one of Max Vogt’s buildings.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#use",
    "href": "index.html#use",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "These data are openly available to everyone and can be used for any research or educational purpose. If you use this data in your research, please cite as specified in CITATION.cff. The following citation formats are also available through Zenodo:\n\nBibTeX\nCSL\nDataCite\nDublin Core\nDCAT\nJSON\nJSON-LD\nGeoJSON\nMARCXML\n\nZenodo provides an API (REST & OAI-PMH) to access the data. For example, the following command will return the metadata for the most recent version of the data\ncurl -i https://zenodo.org/api/records/ZENODO_RECORD",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#support",
    "href": "index.html#support",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "This project is maintained by @mtwente. Please understand that we can’t provide individual support via email. We also believe that help is much more valuable when it’s shared publicly, so more people can benefit from it.\n\n\n\nType\nPlatforms\n\n\n\n\n🚨 Bug Reports\nGitHub Issue Tracker\n\n\n📊 Report bad data\nGitHub Issue Tracker\n\n\n📚 Docs Issue\nGitHub Issue Tracker\n\n\n🎁 Feature Requests\nGitHub Issue Tracker\n\n\n🛡 Report a security vulnerability\nSee SECURITY.md\n\n\n💬 General Questions\nGitHub Discussions",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#roadmap",
    "href": "index.html#roadmap",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "No changes are currently planned.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "All contributions to this repository are welcome! If you find errors or problems with the data, or if you want to add new data or features, please open an issue or pull request. Please read CONTRIBUTING.md for details on our code of conduct and the process for submitting pull requests.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#versioning",
    "href": "index.html#versioning",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "We use SemVer for versioning. The available versions are listed in the tags on this repository.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#authors-and-acknowledgment",
    "href": "index.html#authors-and-acknowledgment",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "Moritz Twente – Initial work – mtwente\nLuisa Omonsky – Research – omonsgit\n\nThe Jupyter Notebooks used for data retrieval and analysis are based on the 2021 workshop Capturing the Structure of Cities with Data Science workshop by Martin Fleischmann.\nGeodata used in this analysis is retrieved from OpenStreetMap, © OpenStreetMap contributors.\nSee also the list of contributors who contributed to this project.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "maxvogt-analysis",
    "section": "",
    "text": "The data in this repository, excluding OpenStreetMap geodata, is released under the Creative Commons Attribution 4.0 International (CC BY 4.0) License - see the LICENSE-CCBY file for details. By using this data, you agree to give appropriate credit to the original author(s) and to indicate if any modifications have been made.\nGeodata in this repository, retrieved from OpenStreetMap, is released under the Open Database License – see the LICENSE-ODbL file for details. By using this data, you agree to adhere to the attribution standards set out in the license and specified by the OpenStreetMap Foundation.\nThe code in this repository, excluding the Jupyter notebooks in /analysis/, is released under the GNU Affero General Public License v3.0 - see the LICENSE-AGPL file for details. By using this code, you agree to make any modifications available under the same license.\nThe Jupyter notebooks in /analysis are released under the Creative Commons Attribution 4.0 International (CC BY 4.0) License - see the LICENSE-CCBY file for details. By using this data, you agree to give appropriate credit to the original author(s) and to indicate if any modifications have been made.",
    "crumbs": [
      "Data",
      "maxvogt-analysis"
    ]
  },
  {
    "objectID": "analysis/seen.html",
    "href": "analysis/seen.html",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - WSEE015\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Seen, Winterthur'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/seen.html#input-data",
    "href": "analysis/seen.html#input-data",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\ngeometry\naddr:housenumber\naddr:street\naccess\namenity\naddr:city\naddr:postcode\nwheelchair\nnodes\nbuilding\n...\ncontact:email\ncontact:phone\ncontact:website\nbuilding:flats\nfee\nlit\nsupervised\nsurface\narchitect\narchitect:wikidata\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n38674730\nPOLYGON ((8.76493 47.49146, 8.76487 47.49148, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[1529968276, 458165511, 458165518, 458165488, ...\ncarport\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n52810255\nPOLYGON ((8.76025 47.46530, 8.76035 47.46530, ...\n377\nTösstalstrasse\nNaN\nNaN\nNaN\nNaN\nNaN\n[669815152, 1352615824, 6058470767, 6058470766...\ntrain_station\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n54707169\nPOLYGON ((8.75901 47.46732, 8.75905 47.46722, ...\n3\nLinsentalstrasse\nNaN\nNaN\nNaN\nNaN\nNaN\n[734879895, 691126832, 688827419, 688827420, 6...\nyes\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n54707179\nPOLYGON ((8.75951 47.46727, 8.75968 47.46724, ...\n360\nTösstalstrasse\nNaN\nrestaurant\nNaN\nNaN\nno\n[688827421, 688827422, 688827423, 688827424, 1...\nyes\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n54707192\nPOLYGON ((8.75879 47.46671, 8.75882 47.46671, ...\n2\nHermann-Bühler-Strasse\nNaN\nNaN\nSennhof\n8405\nNaN\n[688827425, 715702757, 715702532, 715702119, 7...\nschool\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1291917556\nPOLYGON ((8.79690 47.47668, 8.79689 47.47667, ...\n5.1\nLehmgrubenweg\nNaN\nNaN\nWinterthur\n8405\nNaN\n[11976660316, 11976660315, 11976660314, 119766...\nyes\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1291917559\nPOLYGON ((8.79868 47.47664, 8.79870 47.47662, ...\n1\nChälenrainstrasse\nNaN\nNaN\nWinterthur\n8405\nNaN\n[11976660337, 11976660339, 11976660340, 119766...\nyes\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1304423835\nPOLYGON ((8.75987 47.46285, 8.75989 47.46285, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[12079867158, 12079867157, 12079867156, 120798...\nyes\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1304454222\nPOLYGON ((8.75618 47.46835, 8.75620 47.46836, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[12080174905, 12080174904, 12080174903, 120801...\nallotment_house\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1315560153\nPOLYGON ((8.77526 47.48468, 8.77527 47.48450, ...\n6\nIm Stuckli\nNaN\nNaN\nWinterthur\n8405\nNaN\n[12177117096, 12177117097, 12177117098, 121771...\nyes\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n4197 rows × 74 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    4197\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2699945.517 1260922.024, 2699940.626...\n0\n\n\n1\nPOLYGON ((2699641.457 1258008.113, 2699649.433...\n1\n\n\n2\nPOLYGON ((2699544.853 1258231.180, 2699547.567...\n2\n\n\n3\nPOLYGON ((2699582.050 1258225.401, 2699595.355...\n3\n\n\n4\nPOLYGON ((2699529.347 1258163.264, 2699531.564...\n4\n\n\n...\n...\n...\n\n\n4192\nPOLYGON ((2702382.817 1259320.289, 2702382.103...\n4192\n\n\n4193\nPOLYGON ((2702517.116 1259317.923, 2702518.289...\n4193\n\n\n4194\nPOLYGON ((2699617.986 1257734.786, 2699619.230...\n4194\n\n\n4195\nPOLYGON ((2699328.883 1258341.430, 2699331.099...\n4195\n\n\n4196\nPOLYGON ((2700736.378 1260181.718, 2700737.756...\n4196\n\n\n\n\n4197 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive_service', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nname\nhighway\nmaxspeed\noneway\nreversed\nlength\ngeometry\nservice\njunction\nlanes\nref\ntunnel\nwidth\nbridge\naccess\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25426789\n3433910722\n0\n4264252\nGrünmattstrasse\nresidential\n30\nFalse\nFalse\n11.438\nLINESTRING (2700098.410 1259801.192, 2700104.1...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n25430705\n0\n47657081\nOberseenerstrasse\nresidential\n30\nFalse\nFalse\n227.947\nLINESTRING (2700098.410 1259801.192, 2700191.5...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n6923946426\n0\n47657081\nOberseenerstrasse\nresidential\n30\nFalse\nTrue\n50.728\nLINESTRING (2700098.410 1259801.192, 2700080.2...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3433910722\n3433910726\n0\n4264252\nGrünmattstrasse\nresidential\n30\nFalse\nFalse\n36.065\nLINESTRING (2700106.498 1259809.246, 2700111.5...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n25426789\n0\n4264252\nGrünmattstrasse\nresidential\n30\nFalse\nTrue\n11.438\nLINESTRING (2700106.498 1259809.246, 2700104.1...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n10824661612\n10824661609\n0\n1163920264\nNaN\nservice\nNaN\nFalse\nTrue\n19.850\nLINESTRING (2700169.723 1259414.939, 2700172.5...\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11484293453\n11484293451\n0\n1236743403\nNaN\nservice\nNaN\nFalse\nTrue\n14.973\nLINESTRING (2699501.589 1258253.893, 2699501.0...\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11492760501\n11492760502\n0\n1237387486\nNaN\nservice\nNaN\nFalse\nTrue\n26.546\nLINESTRING (2700770.971 1257977.364, 2700745.2...\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11492760550\n11492777866\n0\n1237387487\nNaN\nservice\nNaN\nFalse\nTrue\n47.389\nLINESTRING (2700225.801 1257961.251, 2700251.5...\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11492777842\n11492777843\n0\n1237387494\nNaN\nservice\nNaN\nFalse\nTrue\n8.179\nLINESTRING (2700390.156 1257894.471, 2700391.3...\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n1246 rows × 16 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2700098.410 1259801.192, 2700104.1...\n0\n\n\n1\nLINESTRING (2700098.410 1259801.192, 2700191.5...\n1\n\n\n2\nLINESTRING (2700098.410 1259801.192, 2700080.2...\n2\n\n\n3\nLINESTRING (2700106.498 1259809.246, 2700111.5...\n3\n\n\n4\nLINESTRING (2700106.498 1259809.246, 2700104.1...\n4\n\n\n...\n...\n...\n\n\n1025\nLINESTRING (2702187.309 1259059.062, 2702179.5...\n1025\n\n\n1026\nLINESTRING (2702215.290 1259140.946, 2702223.9...\n1026\n\n\n1027\nLINESTRING (2702290.266 1259072.708, 2702285.9...\n1027\n\n\n1028\nLINESTRING (2702369.765 1260458.589, 2702358.8...\n1028\n\n\n1029\nLINESTRING (2702386.913 1260310.630, 2702379.6...\n1029\n\n\n\n\n1030 rows × 2 columns"
  },
  {
    "objectID": "analysis/seen.html#generated-data",
    "href": "analysis/seen.html#generated-data",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [811, 3351, 3949, 4074].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2699945.517 1260922.024, 2699940.626...\n0\n900\n900\n\n\n1\nPOLYGON ((2699641.457 1258008.113, 2699649.433...\n1\n866\n866\n\n\n2\nPOLYGON ((2699544.853 1258231.180, 2699547.567...\n2\n556\n556\n\n\n2\nPOLYGON ((2699544.853 1258231.180, 2699547.567...\n2\n551\n551\n\n\n3\nPOLYGON ((2699582.050 1258225.401, 2699595.355...\n3\n556\n556\n\n\n...\n...\n...\n...\n...\n\n\n4193\nPOLYGON ((2702517.116 1259317.923, 2702518.289...\n4193\n595\n595\n\n\n4193\nPOLYGON ((2702517.116 1259317.923, 2702518.289...\n4193\n568\n568\n\n\n4194\nPOLYGON ((2699617.986 1257734.786, 2699619.230...\n4194\n885\n885\n\n\n4195\nPOLYGON ((2699328.883 1258341.430, 2699331.099...\n4195\n827\n827\n\n\n4196\nPOLYGON ((2700736.378 1260181.718, 2700737.756...\n4196\n978\n978\n\n\n\n\n5719 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/seen.html#measure",
    "href": "analysis/seen.html#measure",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Seen/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Seen/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Seen/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Seen/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/measurement.py:74: RuntimeWarning: invalid value encountered in distance\n  return lib.distance(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Seen/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Seen/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Seen/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n856\nPOLYGON ((2700838.791 1257605.825, 2700838.970...\n1001\n5448.607441\n0.957026\n0.015275\n24254.443041\n0.029738\n\n\n1\n1024\nPOLYGON ((2700870.019 1257630.182, 2700870.041...\n1001\n4382.655553\n0.923931\n0.015191\n15588.846523\n0.036428\n\n\n2\n947\nPOLYGON ((2701078.385 1257619.806, 2701078.107...\n664\n13488.333593\n0.964343\n0.017872\n25344.249944\n0.043409\n\n\n3\n2116\nPOLYGON ((2701182.407 1257788.416, 2701181.608...\n661\n3944.961199\n0.985575\n0.013325\n11583.164402\n0.039000\n\n\n4\n1015\nPOLYGON ((2701195.315 1257812.690, 2701194.997...\n661\n4169.747062\n0.957039\n0.016099\n13134.719446\n0.042632\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4192\n3677\nPOLYGON ((2700411.233 1260725.611, 2700411.713...\n421\n2417.235404\n0.924046\n0.034999\n25180.847246\n0.146726\n\n\n4193\n3735\nPOLYGON ((2700368.108 1260752.778, 2700367.817...\n21\n1464.962630\n0.901722\n0.029142\n13593.971906\n0.133138\n\n\n4194\n3736\nPOLYGON ((2700361.637 1260791.005, 2700360.139...\n421\n6849.661507\n0.963999\n0.021092\n32118.843743\n0.053720\n\n\n4195\n3801\nPOLYGON ((2700354.056 1260905.007, 2700353.979...\n958\n5191.479919\n0.988363\n0.022668\n37453.584411\n0.031018\n\n\n4196\n2379\nPOLYGON ((2699776.516 1261314.535, 2699772.528...\n891\n14537.189238\n0.992985\n0.006508\n53539.911322\n0.002725\n\n\n\n\n4197 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/seen.html#understanding-the-context",
    "href": "analysis/seen.html#understanding-the-context",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42497/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n473.677373\n587.712265\n2201.125433\n0.930718\n0.956597\n0.983610\n0.022094\n0.055187\n0.061628\n6467.183713\n...\n1.257692e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000034\n-0.000000\n0.000000\n0.217391\n\n\n1\n492.682784\n587.712265\n1653.334444\n0.929710\n0.953847\n0.978524\n0.019450\n0.053977\n0.061066\n5299.588117\n...\n1.257692e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000068\n0.000000\n0.000000\n0.434783\n\n\n2\n349.587646\n531.390393\n1267.097654\n0.946970\n0.959353\n0.977001\n0.046087\n0.058317\n0.075544\n3187.312381\n...\n1.257801e+06\n5.0\n6.0\n6.0\n0.000146\n0.000225\n0.000225\n0.491803\n0.522388\n0.522388\n\n\n3\n565.307449\n670.212317\n3067.152372\n0.944292\n0.958990\n0.965923\n0.017722\n0.055657\n0.065771\n4903.351896\n...\n1.257896e+06\n6.0\n6.0\n6.0\n0.000157\n0.000217\n0.000217\n0.491803\n0.491803\n0.594527\n\n\n4\n611.673839\n697.041425\n3067.152372\n0.949803\n0.960189\n0.976542\n0.016835\n0.056183\n0.067984\n5077.248055\n...\n1.257896e+06\n6.0\n6.0\n6.0\n0.000190\n0.000217\n0.000217\n0.491803\n0.491803\n0.491803\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4192\n783.497637\n1090.548242\n1983.827213\n0.936850\n0.961643\n0.980523\n0.034142\n0.043600\n0.054249\n7122.226893\n...\n1.260791e+06\n2.5\n6.0\n6.0\n0.000125\n0.000157\n0.000171\n0.306020\n0.529412\n0.536585\n\n\n4193\n747.345521\n1090.548242\n1819.060988\n0.931006\n0.959645\n0.977730\n0.034810\n0.043748\n0.054612\n6933.031353\n...\n1.260824e+06\n4.0\n6.0\n6.0\n0.000125\n0.000157\n0.000171\n0.320513\n0.529412\n0.536585\n\n\n4194\n747.345521\n1090.548242\n2114.502924\n0.933676\n0.961643\n0.982022\n0.030805\n0.043748\n0.054612\n7204.651092\n...\n1.260860e+06\n1.0\n5.0\n6.0\n0.000125\n0.000157\n0.000171\n0.304348\n0.341463\n0.536585\n\n\n4195\n781.876344\n1156.991249\n2871.730062\n0.943768\n0.963999\n0.982456\n0.023707\n0.041747\n0.053956\n8004.008905\n...\n1.260915e+06\n1.0\n5.0\n6.0\n0.000085\n0.000157\n0.000175\n0.304348\n0.333333\n0.529412\n\n\n4196\n3143.020419\n4301.867096\n7635.290816\n0.927987\n0.962596\n0.984845\n0.011177\n0.020058\n0.026881\n31449.040870\n...\n1.261204e+06\n1.0\n5.0\n6.0\n0.000060\n0.000107\n0.000150\n0.478261\n0.621922\n0.783414\n\n\n\n\n4197 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Seen/convexity.svg')"
  },
  {
    "objectID": "analysis/seen.html#clustering",
    "href": "analysis/seen.html#clustering",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n-0.030710\n-0.268413\n0.296743\n0.212464\n0.100945\n1.025688\n-1.033640\n-0.065038\n-0.375738\n0.324204\n...\n-2.268437\n-1.021944\n-2.241900\n-3.415319\n-1.543313\n-1.790379\n-1.655337\n-2.884180\n-3.104486\n-1.725708\n\n\n1\n-0.004881\n-0.268413\n-0.006864\n0.160498\n-0.124724\n0.415639\n-1.168086\n-0.118559\n-0.396328\n0.046216\n...\n-2.268437\n-1.021944\n-2.241900\n-3.415319\n-1.543313\n-1.790379\n-1.323367\n-2.884180\n-3.104486\n-0.310484\n\n\n2\n-0.199350\n-0.325308\n-0.220932\n1.050429\n0.327201\n0.232930\n0.186091\n0.073329\n0.134124\n-0.456687\n...\n-2.144858\n0.999309\n0.841888\n0.349578\n0.168185\n0.581891\n0.217531\n0.572686\n0.528721\n0.259831\n\n\n3\n0.093818\n-0.185074\n0.776729\n0.912342\n0.297426\n-1.095753\n-1.255930\n-0.044271\n-0.223953\n-0.048122\n...\n-2.035750\n1.504622\n0.841888\n0.349578\n0.299038\n0.491634\n0.133644\n0.572686\n0.316004\n0.729460\n\n\n4\n0.156831\n-0.157972\n0.776729\n1.196539\n0.395800\n0.177891\n-1.301002\n-0.021016\n-0.142883\n-0.006720\n...\n-2.035750\n1.504622\n0.841888\n0.349578\n0.684578\n0.491634\n0.133644\n0.572686\n0.316004\n0.060723\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4192\n0.390343\n0.239537\n0.176308\n0.528655\n0.515178\n0.655345\n-0.421153\n-0.577275\n-0.646117\n0.480160\n...\n1.270097\n-0.263974\n0.841888\n0.349578\n-0.079411\n-0.136368\n-0.309431\n-0.733177\n0.577571\n0.352256\n\n\n4193\n0.341212\n0.239537\n0.084988\n0.227311\n0.351132\n0.320371\n-0.387185\n-0.570734\n-0.632787\n0.435115\n...\n1.308148\n0.493996\n0.841888\n0.349578\n-0.079411\n-0.136368\n-0.309431\n-0.631308\n0.577571\n0.352256\n\n\n4194\n0.341212\n0.239537\n0.248733\n0.364981\n0.515178\n0.835217\n-0.590788\n-0.570734\n-0.632787\n0.499784\n...\n1.348957\n-1.021944\n0.225130\n0.349578\n-0.079411\n-0.136368\n-0.309431\n-0.744931\n-0.729609\n0.352256\n\n\n4195\n0.388140\n0.306656\n0.668418\n0.885368\n0.708500\n0.887235\n-0.951649\n-0.659207\n-0.656854\n0.690100\n...\n1.411151\n-1.021944\n0.225130\n0.349578\n-0.542391\n-0.136368\n-0.269512\n-0.744931\n-0.786154\n0.305555\n\n\n4196\n3.596991\n3.483516\n3.308570\n0.071666\n0.593392\n1.173779\n-1.588661\n-1.617979\n-1.648828\n6.272028\n...\n1.741547\n-1.021944\n0.225130\n0.349578\n-0.836021\n-0.666500\n-0.518738\n0.477496\n1.220979\n1.959116\n\n\n\n\n4197 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.037 seconds.\nK=3 fitted in 0.068 seconds.\nK=4 fitted in 0.049 seconds.\nK=5 fitted in 0.125 seconds.\nK=6 fitted in 0.088 seconds.\nK=7 fitted in 0.091 seconds.\nK=8 fitted in 0.099 seconds.\nK=9 fitted in 0.112 seconds.\nK=10 fitted in 0.121 seconds.\nK=11 fitted in 0.135 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n0\n1\n0\n3\n1\n2\n4\n4\n8\n8\n\n\n1\n0\n0\n1\n2\n2\n1\n2\n4\n4\n8\n8\n\n\n2\n0\n0\n2\n2\n2\n4\n5\n5\n0\n4\n1\n\n\n3\n0\n0\n2\n2\n2\n4\n5\n5\n0\n4\n1\n\n\n4\n0\n0\n2\n2\n2\n4\n5\n5\n0\n4\n1\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/seen.html#export",
    "href": "analysis/seen.html#export",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Seen.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/seen.html#utilities",
    "href": "analysis/seen.html#utilities",
    "title": "maxvogt-analysis: Winterthur-Seen",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/ziegelbrücke.html",
    "href": "analysis/ziegelbrücke.html",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - ZB024 - ZB089\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Ziegelbrücke'\npoint = 47.13548, 9.06104\naddress = 'Ziegelbrückstrasse 123, 8866 Ziegelbrücke'\ndist = 2000\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(address).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/ziegelbrücke.html#input-data",
    "href": "analysis/ziegelbrücke.html#input-data",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\n#buildings = osmnx.features.features_from_place(place, tags={'building':True})\n#buildings = osmnx.features.features_from_address(address, tags={'building':True}, dist=dist)\nbuildings = osmnx.features.features_from_point(point, tags={'building':True}, dist=dist)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\nname\noperator\ngeometry\nman_made\namenity\naddr:city\naddr:country\naddr:housenumber\naddr:postcode\naddr:street\n...\nref:AGFA\npower\nsubstation\nlocation\nshelter_type\nbuilding:colour\nheight\nbuilding:flats\nways\ntype\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n10271955313\nNaN\nNaN\nPOINT (9.04547 47.12362)\nNaN\nNaN\nNiederurnen\nNaN\n1\n8867\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nway\n85384984\nNaN\nNaN\nPOLYGON ((9.04680 47.12498, 9.04680 47.12497, ...\nNaN\nNaN\nNiederurnen\nCH\n48\n8867\nHädilochstrasse\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n158058611\nNaN\nNaN\nPOLYGON ((9.05978 47.12932, 9.05979 47.12932, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n158194961\nNaN\nNaN\nPOLYGON ((9.06341 47.13232, 9.06342 47.13200, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n158194962\nNaN\nNaN\nPOLYGON ((9.06356 47.13177, 9.06354 47.13193, ...\nNaN\nNaN\nZiegelbrücke\nCH\n30\n8866\nKanalweg\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1302823766\nNaN\nNaN\nPOLYGON ((9.04915 47.12562, 9.04916 47.12560, ...\nNaN\nNaN\nNiederurnen\nNaN\n1c\n8867\nMühlehoschet\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4\nNaN\nNaN\n\n\n1302823768\nNaN\nNaN\nPOLYGON ((9.04927 47.12545, 9.04917 47.12544, ...\nNaN\nNaN\nNiederurnen\nNaN\n1b\n8867\nMühlehoschet\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1302823770\nNaN\nNaN\nPOLYGON ((9.04939 47.12529, 9.04932 47.12528, ...\nNaN\nNaN\nNiederurnen\nNaN\n1a\n8867\nMühlehoschet\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nrelation\n12741899\nNaN\nNaN\nPOLYGON ((9.06022 47.12182, 9.06045 47.12180, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[193870360, 945553338]\nmultipolygon\n\n\n12741900\nNaN\nNaN\nPOLYGON ((9.06025 47.12198, 9.06027 47.12210, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[945553339, 945553324]\nmultipolygon\n\n\n\n\n3601 rows × 77 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    3600\nPoint         1\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2722018.588 1220582.590, 2722018.581...\n0\n\n\n1\nPOLYGON ((2722993.164 1221085.307, 2722993.648...\n1\n\n\n2\nPOLYGON ((2723261.560 1221424.689, 2723262.918...\n2\n\n\n3\nPOLYGON ((2723274.023 1221363.766, 2723272.205...\n3\n\n\n4\nPOLYGON ((2723201.505 1221503.486, 2723201.005...\n4\n\n\n...\n...\n...\n\n\n3595\nPOLYGON ((2722195.444 1220657.029, 2722195.833...\n3595\n\n\n3596\nPOLYGON ((2722204.980 1220638.377, 2722197.528...\n3596\n\n\n3597\nPOLYGON ((2722214.650 1220620.606, 2722208.819...\n3597\n\n\n3598\nPOLYGON ((2723043.732 1220251.830, 2723061.657...\n3598\n\n\n3599\nPOLYGON ((2723045.554 1220270.193, 2723046.892...\n3599\n\n\n\n\n3600 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\n#osm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n#osm_graph = osmnx.graph_from_address(place, network_type='drive', truncate_by_edge=True, dist=dist)\nosm_graph = osmnx.graph_from_point(point, network_type='drive', truncate_by_edge=True, dist=dist)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/osmnx/graph.py:191: FutureWarning: The expected order of coordinates in `bbox` will change in the v2.0.0 release to `(left, bottom, right, top)`.\n  G = graph_from_bbox(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\noneway\nlanes\nref\nhighway\nmaxspeed\nreversed\nlength\ngeometry\nbridge\nname\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n27454236\n33126420\n0\n546521230\nTrue\n2\nA3\nmotorway\n120\nFalse\n567.027\nLINESTRING (2722457.838 1221727.113, 2722432.4...\nNaN\nNaN\nNaN\n\n\n2102018938\n0\n[546521248, 546521245]\nTrue\n1\nNaN\nmotorway_link\nNaN\nFalse\n156.323\nLINESTRING (2722457.838 1221727.113, 2722450.7...\nNaN\nNaN\nNaN\n\n\n33126420\n27454248\n0\n[546521225, 4709723, 546521286]\nTrue\n[3, 2]\nA3\nmotorway\n120\nFalse\n1643.242\nLINESTRING (2722154.755 1222205.709, 2722118.7...\nNaN\nNaN\nNaN\n\n\n27454248\n27454250\n0\n546521287\nTrue\n2\nA3\nmotorway\n120\nFalse\n586.268\nLINESTRING (2721127.314 1223477.251, 2720714.8...\nNaN\nNaN\nNaN\n\n\n2102019115\n0\n[546521288, 4990906, 489102218]\nTrue\n1\n43\nmotorway_link\n60\nFalse\n298.281\nLINESTRING (2721127.314 1223477.251, 2721118.7...\nyes\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n8786489539\n3020051645\n0\n949137940\nFalse\nNaN\nNaN\nresidential\n30\nFalse\n21.908\nLINESTRING (2722355.634 1220369.815, 2722366.6...\nNaN\nNaN\nNaN\n\n\n3020051656\n3020051655\n0\n298094425\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n19.351\nLINESTRING (2722182.470 1220614.674, 2722179.9...\nNaN\nMühlehoschet\nNaN\n\n\n3020051654\n3020051655\n0\n298094425\nFalse\nNaN\nNaN\nresidential\nNaN\nFalse\n28.559\nLINESTRING (2722134.674 1220609.746, 2722149.1...\nNaN\nMühlehoschet\nNaN\n\n\n3172249093\n32517953\n0\n[546555560, 546555561, 546555562, 4871400, 546...\nTrue\n[3, 2]\nA3\nmotorway\n120\nFalse\n1649.818\nLINESTRING (2725221.141 1221037.494, 2725216.8...\nyes\nNaN\nNaN\n\n\n5281526671\n27454839\n0\n[546521250, 546521270]\nTrue\n1\nNaN\nmotorway_link\nNaN\nFalse\n121.679\nLINESTRING (2722286.299 1221921.085, 2722295.2...\nNaN\nNaN\nNaN\n\n\n\n\n632 rows × 12 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2722457.838 1221727.113, 2722432.4...\n0\n\n\n1\nLINESTRING (2722457.838 1221727.113, 2722450.7...\n1\n\n\n2\nLINESTRING (2722154.755 1222205.709, 2722118.7...\n2\n\n\n3\nLINESTRING (2721127.314 1223477.251, 2720714.8...\n3\n\n\n4\nLINESTRING (2721127.314 1223477.251, 2721118.7...\n4\n\n\n...\n...\n...\n\n\n560\nLINESTRING (2724636.073 1220126.413, 2724644.5...\n560\n\n\n561\nLINESTRING (2724741.125 1221775.184, 2724789.6...\n561\n\n\n562\nLINESTRING (2725211.199 1221261.174, 2725165.9...\n562\n\n\n563\nLINESTRING (2725298.790 1220684.403, 2725262.0...\n563\n\n\n564\nLINESTRING (2725000.573 1221285.602, 2725007.5...\n564\n\n\n\n\n565 rows × 2 columns"
  },
  {
    "objectID": "analysis/ziegelbrücke.html#generated-data",
    "href": "analysis/ziegelbrücke.html#generated-data",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/1328706492.py:3: UserWarning: Tessellation does not fully match buildings. 16 element(s) collapsed during generation - unique_id: {2441, 1681, 2460, 3363, 2615, 2244, 1863, 2380, 2381, 2382, 1502, 2281, 3305, 2668, 3447, 2173}.\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [1761, 2147, 3142].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[30], line 1\n----&gt; 1 buildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/geodataframe.py:2321, in GeoDataFrame.sjoin_nearest(self, right, how, max_distance, lsuffix, rsuffix, distance_col, exclusive)\n   2197 def sjoin_nearest(\n   2198     self,\n   2199     right,\n   (...)\n   2205     exclusive=False,\n   2206 ):\n   2207     \"\"\"\n   2208     Spatial join of two GeoDataFrames based on the distance between their\n   2209     geometries.\n   (...)\n   2319     dimension is not taken into account.\n   2320     \"\"\"\n-&gt; 2321     return geopandas.sjoin_nearest(\n   2322         self,\n   2323         right,\n   2324         how=how,\n   2325         max_distance=max_distance,\n   2326         lsuffix=lsuffix,\n   2327         rsuffix=rsuffix,\n   2328         distance_col=distance_col,\n   2329         exclusive=exclusive,\n   2330     )\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/tools/sjoin.py:531, in sjoin_nearest(left_df, right_df, how, max_distance, lsuffix, rsuffix, distance_col, exclusive)\n    407 def sjoin_nearest(\n    408     left_df: GeoDataFrame,\n    409     right_df: GeoDataFrame,\n   (...)\n    415     exclusive: bool = False,\n    416 ) -&gt; GeoDataFrame:\n    417     \"\"\"Spatial join of two GeoDataFrames based on the distance between their geometries.\n    418 \n    419     Results will include multiple output records for a single input record\n   (...)\n    529     dimension is not taken into account.\n    530     \"\"\"\n--&gt; 531     _basic_checks(left_df, right_df, how, lsuffix, rsuffix)\n    533     left_df.geometry.values.check_geographic_crs(stacklevel=1)\n    534     right_df.geometry.values.check_geographic_crs(stacklevel=1)\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/tools/sjoin.py:172, in _basic_checks(left_df, right_df, how, lsuffix, rsuffix)\n    168 # due to GH 352\n    169 if any(left_df.columns.isin([index_left, index_right])) or any(\n    170     right_df.columns.isin([index_left, index_right])\n    171 ):\n--&gt; 172     raise ValueError(\n    173         \"'{0}' and '{1}' cannot be names in the frames being\"\n    174         \" joined\".format(index_left, index_right)\n    175     )\n\nValueError: 'index_left' and 'index_right' cannot be names in the frames being joined\n\n\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2722018.588 1220582.590, 2722018.581...\n0\n460.0\n460.0\n\n\n0\nPOLYGON ((2722018.588 1220582.590, 2722018.581...\n0\n297.0\n297.0\n\n\n1\nPOLYGON ((2722993.164 1221085.307, 2722993.648...\n1\n401.0\n401.0\n\n\n1\nPOLYGON ((2722993.164 1221085.307, 2722993.648...\n1\n397.0\n397.0\n\n\n2\nPOLYGON ((2723261.560 1221424.689, 2723262.918...\n2\n555.0\n555.0\n\n\n...\n...\n...\n...\n...\n\n\n3596\nPOLYGON ((2722204.980 1220638.377, 2722197.528...\n3596\n508.0\n508.0\n\n\n3597\nPOLYGON ((2722214.650 1220620.606, 2722208.819...\n3597\n260.0\n260.0\n\n\n3598\nPOLYGON ((2723043.732 1220251.830, 2723061.657...\n3598\n150.0\n150.0\n\n\n3598\nPOLYGON ((2723043.732 1220251.830, 2723061.657...\n3598\n158.0\n158.0\n\n\n3599\nPOLYGON ((2723045.554 1220270.193, 2723046.892...\n3599\n154.0\n154.0\n\n\n\n\n5184 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/ziegelbrücke.html#measure",
    "href": "analysis/ziegelbrücke.html#measure",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Ziegelbrücke/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Ziegelbrücke/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Ziegelbrücke/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Ziegelbrücke/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Ziegelbrücke/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Ziegelbrücke/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Ziegelbrücke/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n1176\nPOLYGON ((2722504.210 1219768.562, 2722506.288...\n522.0\n15520.655682\n0.843745\n0.003456\n46933.252981\n0.006204\n\n\n1\n1653\nPOLYGON ((2722577.211 1220039.023, 2722578.117...\n522.0\n5021.397576\n0.990785\n0.013465\n21608.812577\n0.005213\n\n\n2\n1654\nPOLYGON ((2722580.542 1220053.441, 2722580.622...\n522.0\n421.334069\n0.741252\n0.058619\n12649.668527\n0.407655\n\n\n3\n657\nPOLYGON ((2722597.108 1220072.238, 2722596.341...\n522.0\n274.383578\n0.970661\n0.072913\n5596.083622\n0.212161\n\n\n4\n569\nPOLYGON ((2722575.423 1220074.825, 2722574.617...\n522.0\n584.740847\n0.980155\n0.063071\n10343.506397\n0.076892\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3579\n976\nPOLYGON ((2721531.289 1223589.482, 2721537.672...\n2.0\n36753.834798\n1.000000\n0.000000\n36753.834798\n0.004574\n\n\n3580\n1349\nPOLYGON ((2721164.651 1223412.803, 2721163.623...\n4.0\n27703.953860\n0.999441\n0.001633\n119649.139713\n0.002589\n\n\n3581\n3466\nPOLYGON ((2721525.496 1223778.397, 2721526.204...\n2.0\n13327.554882\n0.986448\n0.002222\n55314.516815\n0.003541\n\n\n3582\n1018\nPOLYGON ((2720961.103 1223278.705, 2720959.531...\n478.0\n91945.185852\n0.914869\n0.004027\n155986.437539\n0.223126\n\n\n3583\n948\nPOLYGON ((2721489.872 1223698.601, 2721493.630...\n2.0\n41986.961932\n0.881388\n0.001202\n55314.516815\n0.052157\n\n\n\n\n3584 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/ziegelbrücke.html#understanding-the-context",
    "href": "analysis/ziegelbrücke.html#understanding-the-context",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_43186/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n3885.924914\n9184.178302\n16785.261565\n0.927366\n0.988300\n0.995133\n0.006354\n0.013693\n0.021079\n38756.183138\n...\n1.220077e+06\n1.0\n5.0\n5.0\n0.000143\n0.000202\n0.000225\n0.380952\n0.428571\n0.476190\n\n\n1\n541.306177\n854.734927\n3057.955148\n0.927832\n0.972631\n0.992277\n0.021577\n0.039030\n0.060278\n8675.065325\n...\n1.220167e+06\n1.0\n4.0\n5.0\n0.000143\n0.000209\n0.000277\n0.380952\n0.380952\n0.476190\n\n\n2\n573.941129\n801.153432\n2862.575320\n0.941382\n0.972222\n0.989357\n0.023618\n0.039030\n0.058095\n9699.582596\n...\n1.220201e+06\n1.0\n1.0\n5.0\n0.000143\n0.000143\n0.000323\n0.380952\n0.380952\n0.457607\n\n\n3\n573.941129\n803.496313\n1901.901624\n0.941382\n0.968840\n0.984079\n0.027181\n0.040906\n0.060278\n7983.777129\n...\n1.220587e+06\n1.0\n1.0\n5.0\n0.000143\n0.000143\n0.000386\n0.380952\n0.380952\n0.638095\n\n\n4\n511.821882\n812.086466\n3571.447070\n0.930495\n0.961026\n0.980230\n0.027227\n0.042476\n0.062133\n7936.426987\n...\n1.220305e+06\n1.0\n5.0\n5.0\n0.000143\n0.000323\n0.000345\n0.380952\n0.439024\n0.538462\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3579\n36753.834798\n36753.834798\n36753.834798\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n36753.834798\n...\n1.223477e+06\n3.0\n3.0\n3.0\n0.000012\n0.000012\n0.000012\n0.000000\n0.000000\n0.000000\n\n\n3580\n4426.109688\n10988.666222\n22084.779101\n0.889498\n0.948530\n0.995834\n0.006470\n0.016738\n0.020739\n67431.642312\n...\n1.223133e+06\n1.0\n3.0\n4.5\n0.000060\n0.000098\n0.000137\n0.166667\n0.333333\n0.333333\n\n\n3581\n27657.258407\n27657.258407\n27657.258407\n0.933918\n0.933918\n0.933918\n0.001712\n0.001712\n0.001712\n55314.516815\n...\n1.223477e+06\n3.0\n3.0\n3.0\n0.000012\n0.000012\n0.000012\n-0.000000\n-0.000000\n-0.000000\n\n\n3582\n633.713148\n6445.275838\n11344.486058\n0.929037\n0.973099\n0.995834\n0.008009\n0.017935\n0.021579\n34058.297348\n...\n1.223133e+06\n1.0\n1.0\n4.0\n0.000098\n0.000098\n0.000137\n0.333333\n0.333333\n0.333333\n\n\n3583\n27657.258407\n27657.258407\n27657.258407\n0.933918\n0.933918\n0.933918\n0.001712\n0.001712\n0.001712\n55314.516815\n...\n1.223477e+06\n3.0\n3.0\n3.0\n0.000012\n0.000012\n0.000012\n-0.000000\n-0.000000\n-0.000000\n\n\n\n\n3584 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Ziegelbrücke/convexity.svg')"
  },
  {
    "objectID": "analysis/ziegelbrücke.html#clustering",
    "href": "analysis/ziegelbrücke.html#clustering",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n0.942934\n1.947588\n2.585956\n0.980744\n1.971315\n1.517798\n-1.565338\n-1.564235\n-1.654135\n2.469057\n...\n-1.448867\n-1.402569\n0.041324\n-0.428957\n-0.607960\n-0.745610\n-1.049620\n-0.094490\n-0.465382\n-0.777461\n\n\n1\n-0.118047\n-0.242595\n-0.060888\n0.995937\n1.065924\n1.208796\n-0.962807\n-0.709618\n-0.510390\n-0.018226\n...\n-1.317601\n-1.402569\n-0.577158\n-0.428957\n-0.607960\n-0.723861\n-0.889552\n-0.094490\n-0.628120\n-0.777461\n\n\n2\n-0.107695\n-0.256684\n-0.098560\n1.437399\n1.042297\n0.892992\n-0.882039\n-0.709618\n-0.574075\n0.066487\n...\n-1.268059\n-1.402569\n-2.432604\n-0.428957\n-0.607960\n-0.948855\n-0.748558\n-0.094490\n-0.628120\n-0.853251\n\n\n3\n-0.107695\n-0.256068\n-0.283794\n1.437399\n0.846848\n0.322178\n-0.741011\n-0.646363\n-0.510390\n-0.075386\n...\n-0.705095\n-1.402569\n-2.432604\n-0.428957\n-0.607960\n-0.948855\n-0.550798\n-0.094490\n-0.628120\n-0.117144\n\n\n4\n-0.127400\n-0.253809\n0.038121\n1.082674\n0.395315\n-0.094134\n-0.739179\n-0.593406\n-0.456253\n-0.079301\n...\n-1.116492\n-1.402569\n0.041324\n-0.428957\n-0.607960\n-0.330628\n-0.677503\n-0.094490\n-0.429659\n-0.523493\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3579\n11.369308\n9.196882\n6.436216\n3.347266\n2.647365\n2.044164\n-1.816852\n-2.026103\n-2.269156\n2.303491\n...\n3.505249\n-0.407332\n-1.195640\n-1.863962\n-1.138544\n-1.401166\n-1.709124\n-0.858854\n-1.930021\n-2.719573\n\n\n3580\n1.114292\n2.422068\n3.607788\n-0.253043\n-0.326714\n1.593615\n-1.560762\n-1.461523\n-1.664028\n4.840113\n...\n3.003604\n-1.402569\n-1.195640\n-0.787708\n-0.944175\n-1.106447\n-1.324024\n-0.524445\n-0.790857\n-1.360095\n\n\n3581\n8.483687\n6.804985\n4.682251\n1.194206\n-1.171059\n-5.103327\n-1.749094\n-1.968362\n-2.219207\n3.838197\n...\n3.505249\n-0.407332\n-1.195640\n-1.863962\n-1.138544\n-1.401166\n-1.709124\n-0.858854\n-1.930021\n-2.719573\n\n\n3582\n-0.088734\n1.227408\n1.536887\n1.035191\n1.092928\n1.593615\n-1.499852\n-1.421169\n-1.639540\n2.080608\n...\n3.003604\n-1.402569\n-2.432604\n-1.146460\n-0.792823\n-1.106447\n-1.324024\n-0.190036\n-0.790857\n-1.360095\n\n\n3583\n8.483687\n6.804985\n4.682251\n1.194206\n-1.171059\n-5.103327\n-1.749094\n-1.968362\n-2.219207\n3.838197\n...\n3.505249\n-0.407332\n-1.195640\n-1.863962\n-1.138544\n-1.401166\n-1.709124\n-0.858854\n-1.930021\n-2.719573\n\n\n\n\n3584 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.031 seconds.\nK=3 fitted in 0.041 seconds.\nK=4 fitted in 0.053 seconds.\nK=5 fitted in 0.062 seconds.\nK=6 fitted in 0.115 seconds.\nK=7 fitted in 0.073 seconds.\nK=8 fitted in 0.066 seconds.\nK=9 fitted in 0.076 seconds.\nK=10 fitted in 0.081 seconds.\nK=11 fitted in 0.095 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n0\n2\n4\n2\n2\n5\n8\n9\n5\n\n\n1\n0\n1\n0\n0\n2\n0\n3\n7\n1\n4\n2\n\n\n2\n0\n1\n0\n0\n2\n0\n3\n7\n1\n4\n2\n\n\n3\n0\n1\n0\n0\n2\n0\n3\n7\n1\n4\n2\n\n\n4\n0\n1\n0\n0\n2\n0\n3\n7\n1\n4\n2\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/ziegelbrücke.html#export",
    "href": "analysis/ziegelbrücke.html#export",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Ziegelbrücke.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/ziegelbrücke.html#utilities",
    "href": "analysis/ziegelbrücke.html#utilities",
    "title": "maxvogt-analysis: Ziegelbrücke",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/wila.html",
    "href": "analysis/wila.html",
    "title": "maxvogt-analysis: Wila",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - WILA003\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Wila, Switzerland'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/wila.html#input-data",
    "href": "analysis/wila.html#input-data",
    "title": "maxvogt-analysis: Wila",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\ngeometry\nnodes\nbuilding\nnote\naddr:city\naddr:housenumber\naddr:postcode\naddr:street\namenity\nname\n...\nbuilding:roof\ncraft\nshooting\nroof:orientation\naddr:place\ntourism\nwikipedia\ncuisine\nman_made\nlayer\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n39881183\nPOLYGON ((8.88476 47.40885, 8.88469 47.40893, ...\n[478515633, 478515634, 2593022957, 2593022967,...\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n39881185\nPOLYGON ((8.88445 47.40895, 8.88443 47.40915, ...\n[478515653, 2593023076, 2593023075, 478515655,...\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n39881188\nPOLYGON ((8.88150 47.41004, 8.88152 47.41015, ...\n[478515714, 2593023266, 2593023268, 478515717,...\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n39884555\nPOLYGON ((8.87351 47.40876, 8.87352 47.40873, ...\n[2593022872, 2593022836, 2593022840, 259302286...\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n39884572\nPOLYGON ((8.87267 47.40832, 8.87260 47.40845, ...\n[478535165, 478535167, 2593022623, 2593022614,...\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1190771852\nPOLYGON ((8.84809 47.41599, 8.84825 47.41601, ...\n[11056305792, 11056305791, 11056305790, 110563...\nroof\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1190771853\nPOLYGON ((8.84701 47.41597, 8.84699 47.41603, ...\n[11056305818, 11056305817, 11056305816, 110563...\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1193763850\nPOLYGON ((8.84792 47.42660, 8.84787 47.42664, ...\n[11080990802, 11080990803, 11080990804, 259396...\nyes\nNaN\nWila\n12\n8492\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nWiesental\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1284914866\nPOLYGON ((8.84845 47.41781, 8.84837 47.41791, ...\n[2286049428, 11920160968, 11920166369, 2286049...\ncommercial\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nalong\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1284914870\nPOLYGON ((8.84872 47.41746, 8.84874 47.41745, ...\n[11920166382, 11920166383, 11920166384, 119201...\nroof\nNaN\nNaN\nNaN\nNaN\nNaN\nbicycle_parking\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n905 rows × 54 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    905\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2709143.880 1251898.665, 2709137.854...\n0\n\n\n1\nPOLYGON ((2709119.729 1251908.628, 2709118.393...\n1\n\n\n2\nPOLYGON ((2708895.036 1252025.924, 2708896.486...\n2\n\n\n3\nPOLYGON ((2708294.999 1251872.724, 2708295.516...\n3\n\n\n4\nPOLYGON ((2708232.696 1251822.445, 2708226.436...\n4\n\n\n...\n...\n...\n\n\n900\nPOLYGON ((2706362.435 1252641.733, 2706374.303...\n900\n\n\n901\nPOLYGON ((2706280.940 1252637.534, 2706279.136...\n901\n\n\n902\nPOLYGON ((2706327.871 1253820.851, 2706324.498...\n902\n\n\n903\nPOLYGON ((2706385.569 1252844.180, 2706379.572...\n903\n\n\n904\nPOLYGON ((2706407.006 1252806.301, 2706407.998...\n904\n\n\n\n\n905 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive_service', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nlanes\nref\nname\nhighway\nmaxspeed\noneway\nreversed\nlength\ngeometry\nservice\nbridge\nwidth\naccess\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n246627537\n271187419\n0\n24957346\n2\n818\nSchalchenstrasse\ntertiary\n50\nFalse\nFalse\n11.931\nLINESTRING (2706154.279 1253091.710, 2706150.1...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n416559052\n0\n221476973\n2\n15\nTösstalstrasse\nprimary\n50\nFalse\nTrue\n38.676\nLINESTRING (2706154.279 1253091.710, 2706156.0...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n599920243\n0\n221476974\n2\n15\nTösstalstrasse\nprimary\n50\nFalse\nFalse\n11.414\nLINESTRING (2706154.279 1253091.710, 2706153.0...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n271187419\n246627537\n0\n24957346\n2\n818\nSchalchenstrasse\ntertiary\n50\nFalse\nTrue\n11.931\nLINESTRING (2706143.878 1253085.830, 2706145.3...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n434018190\n0\n827694276\n2\n818\nSchalchenstrasse\ntertiary\n50\nFalse\nFalse\n94.734\nLINESTRING (2706143.878 1253085.830, 2706142.9...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n11053943036\n11053943035\n0\n1190494151\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nTrue\n29.643\nLINESTRING (2706499.689 1252900.031, 2706500.2...\ndriveway\nNaN\nNaN\nNaN\nNaN\n\n\n11055662984\n11055677045\n0\n1190698433\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nTrue\n35.771\nLINESTRING (2705959.975 1253604.727, 2705958.1...\ndriveway\nNaN\nNaN\nNaN\nNaN\n\n\n11055676916\n11055676910\n0\n1190698435\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nTrue\n16.861\nLINESTRING (2705915.525 1253617.342, 2705916.3...\ndriveway\nNaN\nNaN\nNaN\nNaN\n\n\n11056280671\n11056280670\n0\n1190771838\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nTrue\n23.833\nLINESTRING (2706116.752 1253658.422, 2706117.7...\ndriveway\nNaN\nNaN\nNaN\nNaN\n\n\n11056280689\n11056280690\n0\n1190771841\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nTrue\n32.655\nLINESTRING (2706117.901 1253674.300, 2706116.5...\ndriveway\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n679 rows × 15 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2706154.279 1253091.710, 2706150.1...\n0\n\n\n1\nLINESTRING (2706154.279 1253091.710, 2706156.0...\n1\n\n\n2\nLINESTRING (2706154.279 1253091.710, 2706153.0...\n2\n\n\n3\nLINESTRING (2706143.878 1253085.830, 2706145.3...\n3\n\n\n4\nLINESTRING (2706143.878 1253085.830, 2706142.9...\n4\n\n\n...\n...\n...\n\n\n536\nLINESTRING (2707128.041 1251679.422, 2707130.6...\n536\n\n\n537\nLINESTRING (2706942.937 1250532.682, 2706948.1...\n537\n\n\n538\nLINESTRING (2707432.337 1253095.963, 2707432.6...\n538\n\n\n539\nLINESTRING (2707474.590 1253124.909, 2707477.7...\n539\n\n\n540\nLINESTRING (2708371.450 1252662.312, 2708372.2...\n540\n\n\n\n\n541 rows × 2 columns"
  },
  {
    "objectID": "analysis/wila.html#generated-data",
    "href": "analysis/wila.html#generated-data",
    "title": "maxvogt-analysis: Wila",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2709143.880 1251898.665, 2709137.854...\n0\nNaN\nNaN\n\n\n1\nPOLYGON ((2709119.729 1251908.628, 2709118.393...\n1\nNaN\nNaN\n\n\n2\nPOLYGON ((2708895.036 1252025.924, 2708896.486...\n2\n540.0\n540.0\n\n\n3\nPOLYGON ((2708294.999 1251872.724, 2708295.516...\n3\n540.0\n540.0\n\n\n4\nPOLYGON ((2708232.696 1251822.445, 2708226.436...\n4\n540.0\n540.0\n\n\n...\n...\n...\n...\n...\n\n\n902\nPOLYGON ((2706327.871 1253820.851, 2706324.498...\n902\n488.0\n488.0\n\n\n903\nPOLYGON ((2706385.569 1252844.180, 2706379.572...\n903\n129.0\n129.0\n\n\n903\nPOLYGON ((2706385.569 1252844.180, 2706379.572...\n903\n135.0\n135.0\n\n\n904\nPOLYGON ((2706407.006 1252806.301, 2706407.998...\n904\n129.0\n129.0\n\n\n904\nPOLYGON ((2706407.006 1252806.301, 2706407.998...\n904\n135.0\n135.0\n\n\n\n\n1224 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/wila.html#measure",
    "href": "analysis/wila.html#measure",
    "title": "maxvogt-analysis: Wila",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wila/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wila/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Wila/sharedwalls.svg')  \n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/indexes/base.py:3805, in Index.get_loc(self, key)\n   3804 try:\n-&gt; 3805     return self._engine.get_loc(casted_key)\n   3806 except KeyError as err:\n\nFile index.pyx:167, in pandas._libs.index.IndexEngine.get_loc()\n\nFile index.pyx:196, in pandas._libs.index.IndexEngine.get_loc()\n\nFile pandas/_libs/hashtable_class_helper.pxi:7081, in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\nFile pandas/_libs/hashtable_class_helper.pxi:7089, in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\nKeyError: 'shared_walls'\n\nThe above exception was the direct cause of the following exception:\n\nKeyError                                  Traceback (most recent call last)\nCell In[39], line 1\n----&gt; 1 buildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n      3 plt.savefig('../results/Wila/sharedwalls.svg')  \n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/plotting.py:979, in GeoplotAccessor.__call__(self, *args, **kwargs)\n    977 kind = kwargs.pop(\"kind\", \"geo\")\n    978 if kind == \"geo\":\n--&gt; 979     return plot_dataframe(data, *args, **kwargs)\n    980 if kind in self._pandas_kinds:\n    981     # Access pandas plots\n    982     return PlotAccessor(data)(kind=kind, **kwargs)\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/plotting.py:740, in plot_dataframe(df, column, cmap, color, ax, cax, categorical, legend, scheme, k, vmin, vmax, markersize, figsize, legend_kwds, categories, classification_kwds, missing_kwds, aspect, **style_kwds)\n    738             values = values.reindex(df.index)\n    739 else:\n--&gt; 740     values = df[column]\n    742 if isinstance(values.dtype, CategoricalDtype):\n    743     if categories is not None:\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/geopandas/geodataframe.py:1459, in GeoDataFrame.__getitem__(self, key)\n   1453 def __getitem__(self, key):\n   1454     \"\"\"\n   1455     If the result is a column containing only 'geometry', return a\n   1456     GeoSeries. If it's a DataFrame with any columns of GeometryDtype,\n   1457     return a GeoDataFrame.\n   1458     \"\"\"\n-&gt; 1459     result = super().__getitem__(key)\n   1460     # Custom logic to avoid waiting for pandas GH51895\n   1461     # result is not geometry dtype for multi-indexes\n   1462     if (\n   1463         pd.api.types.is_scalar(key)\n   1464         and key == \"\"\n   (...)\n   1467         and not is_geometry_type(result)\n   1468     ):\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/frame.py:4102, in DataFrame.__getitem__(self, key)\n   4100 if self.columns.nlevels &gt; 1:\n   4101     return self._getitem_multilevel(key)\n-&gt; 4102 indexer = self.columns.get_loc(key)\n   4103 if is_integer(indexer):\n   4104     indexer = [indexer]\n\nFile ~/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/indexes/base.py:3812, in Index.get_loc(self, key)\n   3807     if isinstance(casted_key, slice) or (\n   3808         isinstance(casted_key, abc.Iterable)\n   3809         and any(isinstance(x, slice) for x in casted_key)\n   3810     ):\n   3811         raise InvalidIndexError(key)\n-&gt; 3812     raise KeyError(key) from err\n   3813 except TypeError:\n   3814     # If we have a listlike key, _check_indexing_error will raise\n   3815     #  InvalidIndexError. Otherwise we fall through and re-raise\n   3816     #  the TypeError.\n   3817     self._check_indexing_error(key)\n\nKeyError: 'shared_walls'\n\n\n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wila/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Wila/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Wila/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Wila/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n57\nPOLYGON ((2707936.249 1250284.318, 2707939.645...\n537.0\n17565.573347\n0.650343\n0.004265\n49474.164809\n0.039337\n\n\n1\n17\nPOLYGON ((2707097.339 1250254.869, 2707097.244...\n537.0\n10347.482866\n0.957562\n0.007274\n62343.008910\n0.024340\n\n\n2\n63\nPOLYGON ((2707873.102 1250275.905, 2707901.131...\n537.0\n6227.590762\n0.986254\n0.006120\n35427.666803\n0.010019\n\n\n3\n110\nPOLYGON ((2708424.165 1250259.649, 2708497.989...\nNaN\n7645.742058\n0.989915\n0.008385\n30424.217048\n0.008707\n\n\n4\n97\nPOLYGON ((2707964.556 1250300.034, 2707964.458...\n537.0\n14046.498007\n0.999547\n0.002162\n31612.071353\n0.004639\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n900\n870\nPOLYGON ((2705925.785 1253873.539, 2705925.021...\n96.0\n25352.422380\n0.989117\n0.004880\n67990.706570\n0.033992\n\n\n901\n681\nPOLYGON ((2705528.718 1254145.525, 2705529.899...\n401.0\n25447.495927\n0.995804\n0.003371\n71788.992699\n0.001824\n\n\n902\n760\nPOLYGON ((2705633.873 1254006.854, 2705633.656...\n401.0\n17690.166481\n0.996816\n0.005627\n95502.612805\n0.001758\n\n\n903\n869\nPOLYGON ((2705930.964 1253789.629, 2705930.682...\n98.0\n8164.206997\n0.990381\n0.011669\n65714.439569\n0.020996\n\n\n904\n761\nPOLYGON ((2705488.487 1254148.421, 2705487.821...\n401.0\n28651.330290\n0.998988\n0.004890\n95502.612805\n0.001347\n\n\n\n\n905 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/wila.html#understanding-the-context",
    "href": "analysis/wila.html#understanding-the-context",
    "title": "maxvogt-analysis: Wila",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_36512/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n9474.032293\n11877.221292\n14223.716178\n0.801792\n0.981870\n0.994118\n0.005193\n0.006812\n0.008502\n37223.106010\n...\n1.249774e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.000000\n-0.000000\n-0.000000\n\n\n1\n7935.566231\n15758.794212\n23235.938224\n0.963988\n0.971517\n0.985150\n0.004123\n0.005554\n0.006795\n48996.131332\n...\n1.250533e+06\n4.0\n4.0\n4.0\n0.000113\n0.000113\n0.000113\n0.333333\n0.333333\n0.333333\n\n\n2\n9474.032293\n11877.221292\n14223.716178\n0.801792\n0.981870\n0.994118\n0.005193\n0.006812\n0.008502\n37223.106010\n...\n1.249774e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.000000\n-0.000000\n-0.000000\n\n\n3\n1563.672106\n6539.998201\n10050.749601\n0.898238\n0.971289\n0.988915\n0.009908\n0.017193\n0.028834\n23471.934503\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n11877.221292\n13083.218948\n14223.716178\n0.878399\n0.987471\n0.994118\n0.005193\n0.006256\n0.006812\n41147.543235\n...\n1.249774e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.000000\n-0.000000\n-0.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n900\n2033.579811\n3409.899168\n8313.110072\n0.909624\n0.968076\n0.991674\n0.013963\n0.021918\n0.028984\n17195.101228\n...\n1.253722e+06\n5.0\n5.0\n5.5\n0.000210\n0.000210\n0.000285\n0.485098\n0.551724\n0.615385\n\n\n901\n20701.893294\n24580.558017\n27049.413109\n0.996310\n0.996912\n0.997998\n0.003401\n0.004161\n0.005259\n70922.054788\n...\n1.253779e+06\n5.0\n5.0\n5.0\n0.000128\n0.000128\n0.000128\n0.714286\n0.714286\n0.714286\n\n\n902\n20701.893294\n24580.558017\n27049.413109\n0.996310\n0.996912\n0.997998\n0.003401\n0.004161\n0.005259\n70922.054788\n...\n1.253779e+06\n5.0\n5.0\n5.0\n0.000128\n0.000128\n0.000128\n0.714286\n0.714286\n0.714286\n\n\n903\n2284.782899\n4664.821519\n7902.733516\n0.951223\n0.980826\n0.992921\n0.015116\n0.022083\n0.025175\n25935.918639\n...\n1.253722e+06\n2.5\n5.0\n6.0\n0.000173\n0.000232\n0.000319\n0.471698\n0.549020\n0.615385\n\n\n904\n20701.893294\n24580.558017\n27049.413109\n0.996310\n0.996912\n0.997998\n0.003401\n0.004161\n0.005259\n70922.054788\n...\n1.253779e+06\n5.0\n5.0\n5.0\n0.000128\n0.000128\n0.000128\n0.714286\n0.714286\n0.714286\n\n\n\n\n905 rows × 63 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wila/convexity.svg')"
  },
  {
    "objectID": "analysis/wila.html#clustering",
    "href": "analysis/wila.html#clustering",
    "title": "maxvogt-analysis: Wila",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n1.764163\n1.763538\n1.541061\n-5.058007\n1.217183\n1.232481\n-1.477031\n-1.687965\n-1.917123\n1.769739\n...\n-3.660969\n-0.776622\n-2.187125\n-3.733122\n-1.633369\n-1.744291\n-1.847440\n-3.328124\n-3.404912\n-3.469036\n\n\n1\n1.397094\n2.571655\n3.138312\n1.365372\n0.491424\n0.231487\n-1.557825\n-1.769323\n-2.013571\n2.710281\n...\n-2.727225\n0.877950\n-0.280541\n-1.208050\n-0.991910\n-1.256071\n-1.426142\n-0.351731\n-0.563486\n-0.767344\n\n\n2\n1.764163\n1.763538\n1.541061\n-5.058007\n1.217183\n1.232481\n-1.477031\n-1.687965\n-1.917123\n1.769739\n...\n-3.660969\n-0.776622\n-2.187125\n-3.733122\n-1.633369\n-1.744291\n-1.847440\n-3.328124\n-3.404912\n-3.469036\n\n\n3\n-0.123200\n0.652365\n0.801479\n-1.238490\n0.475385\n0.651753\n-1.120931\n-1.016399\n-0.768222\n0.671164\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n2.337549\n2.014618\n1.541061\n-2.024160\n1.609897\n1.232481\n-1.477031\n-1.723896\n-2.012627\n2.083261\n...\n-3.660969\n-0.776622\n-2.187125\n-3.733122\n-1.633369\n-1.744291\n-1.847440\n-3.328124\n-3.404912\n-3.469036\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n900\n-0.011083\n0.000700\n0.493515\n-0.787584\n0.250145\n0.959727\n-0.814711\n-0.710754\n-0.759762\n0.169711\n...\n1.198263\n1.429475\n0.354987\n0.054487\n-0.446760\n-0.841152\n-0.787917\n1.003403\n1.298138\n1.518703\n\n\n901\n4.443061\n4.408285\n3.814181\n2.645424\n2.271713\n1.665549\n-1.612350\n-1.859446\n-2.100379\n4.461933\n...\n1.267296\n1.429475\n0.354987\n-0.366359\n-0.906105\n-1.190764\n-1.369786\n3.049861\n2.683858\n2.320304\n\n\n902\n4.443061\n4.408285\n3.814181\n2.645424\n2.271713\n1.665549\n-1.612350\n-1.859446\n-2.100379\n4.461933\n...\n1.267296\n1.429475\n0.354987\n-0.366359\n-0.906105\n-1.190764\n-1.369786\n3.049861\n2.683858\n2.320304\n\n\n903\n0.048852\n0.261966\n0.420783\n0.859873\n1.144021\n1.098839\n-0.727683\n-0.700117\n-0.975009\n0.868011\n...\n1.198263\n0.050664\n0.354987\n0.475332\n-0.656068\n-0.742930\n-0.661439\n0.883753\n1.275084\n1.518703\n\n\n904\n4.443061\n4.408285\n3.814181\n2.645424\n2.271713\n1.665549\n-1.612350\n-1.859446\n-2.100379\n4.461933\n...\n1.267296\n1.429475\n0.354987\n-0.366359\n-0.906105\n-1.190764\n-1.369786\n3.049861\n2.683858\n2.320304\n\n\n\n\n905 rows × 63 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.062 seconds.\nK=3 fitted in 0.024 seconds.\nK=4 fitted in 0.016 seconds.\nK=5 fitted in 0.021 seconds.\nK=6 fitted in 0.022 seconds.\nK=7 fitted in 0.025 seconds.\nK=8 fitted in 0.021 seconds.\nK=9 fitted in 0.033 seconds.\nK=10 fitted in 0.029 seconds.\nK=11 fitted in 0.028 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n2\n3\n1\n1\n1\n2\n6\n2\n2\n\n\n1\n0\n1\n2\n3\n1\n1\n1\n2\n6\n9\n9\n\n\n2\n0\n1\n2\n3\n1\n1\n1\n2\n6\n2\n2\n\n\n3\n0\n1\n0\n0\n2\n0\n2\n0\n4\n9\n9\n\n\n4\n0\n1\n2\n3\n1\n1\n1\n2\n6\n2\n2\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/wila.html#export",
    "href": "analysis/wila.html#export",
    "title": "maxvogt-analysis: Wila",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Wila.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/wila.html#utilities",
    "href": "analysis/wila.html#utilities",
    "title": "maxvogt-analysis: Wila",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/buchs.html",
    "href": "analysis/buchs.html",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - BU001 - BU006 - BU084 - BU085\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Buchs SG'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/buchs.html#input-data",
    "href": "analysis/buchs.html#input-data",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\ngeometry\namenity\naccess\nfee\ncovered\noperator\naddr:housenumber\naddr:street\ntourism\nnodes\n...\nhistoric\nmilitary\nlockable\nbunker_type\nlocation\nbench\nbin\ntoilets:disposal\nways\ntype\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n37926842\nPOLYGON ((9.47302 47.17271, 9.47309 47.17252, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n4\nWerdenbergstrasse\nNaN\n[445234448, 445234442, 445234443, 445234446, 4...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n48759345\nPOLYGON ((9.47336 47.15920, 9.47365 47.15924, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n10a\nKreuzgasse\nNaN\n[618786765, 618786768, 618786770, 9582935250, ...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n48762152\nPOLYGON ((9.47303 47.16123, 9.47319 47.16126, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n16\nGrofstrasse\nNaN\n[618809054, 618809056, 618809057, 618809058, 6...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n48803583\nPOLYGON ((9.41841 47.14650, 9.41823 47.14641, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[619223869, 619223871, 619223873, 619223875, 6...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n48803589\nPOLYGON ((9.41788 47.14673, 9.41793 47.14664, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[619223942, 619223943, 619223944, 619223945, 6...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nrelation\n1639327\nPOLYGON ((9.47880 47.16951, 9.47881 47.16947, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[[[1339769217, 1339769503, 6046585689, 1260543...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[119175194, 119143119]\nmultipolygon\n\n\n1651087\nPOLYGON ((9.47279 47.16479, 9.47271 47.16476, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n31\nGrünaustrasse\nNaN\n[[[1349612717, 1349612720, 1349612714, 1349612...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[120351220]\nmultipolygon\n\n\n4581804\nPOLYGON ((9.46789 47.16584, 9.46799 47.16594, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[[[3344873788, 3344873789, 3344873790, 3344873...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[327682671, 327682672]\nmultipolygon\n\n\n7596015\nPOLYGON ((9.47049 47.17401, 9.47107 47.17410, ...\nNaN\nNaN\nNaN\nNaN\nNaN\n17\nHanflandstrasse\nNaN\n[[[445225513, 3934309799, 1337186910, 13371870...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[37926839, 526733242]\nmultipolygon\n\n\n17867718\nPOLYGON ((9.47884 47.16778, 9.47880 47.16787, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[[[1339490325, 12069878302, 12069878313, 12069...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[119143082, 1303279821, 1303279822]\nmultipolygon\n\n\n\n\n2928 rows × 106 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    2928\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2754213.206 1226638.204, 2754218.968...\n0\n\n\n1\nPOLYGON ((2754277.976 1225136.670, 2754299.900...\n1\n\n\n2\nPOLYGON ((2754247.161 1225362.223, 2754259.436...\n2\n\n\n3\nPOLYGON ((2750148.372 1223619.114, 2750135.007...\n3\n\n\n4\nPOLYGON ((2750107.106 1223643.985, 2750111.623...\n4\n\n\n...\n...\n...\n\n\n2923\nPOLYGON ((2754660.730 1226293.623, 2754662.003...\n2923\n\n\n2924\nPOLYGON ((2754219.049 1225757.057, 2754212.982...\n2924\n\n\n2925\nPOLYGON ((2753844.797 1225864.402, 2753852.069...\n2925\n\n\n2926\nPOLYGON ((2754017.966 1226777.720, 2754061.864...\n2926\n\n\n2927\nPOLYGON ((2754668.708 1226100.931, 2754665.849...\n2927\n\n\n\n\n2928 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\noneway\nlanes\nref\nhighway\nmaxspeed\nreversed\nlength\nbridge\ngeometry\nname\naccess\njunction\nwidth\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n30122810\n30122818\n0\n[1159084528, 1159084529, 366844282, 366844279]\nTrue\n[2, 3]\nA13\nmotorway\n120\nFalse\n3391.074\nyes\nLINESTRING (2755594.560 1230076.114, 2755520.9...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n30122818\n3190343831\n0\n366844303\nTrue\n2\nA13\nmotorway\n120\nFalse\n1079.750\nNaN\nLINESTRING (2755147.038 1226789.084, 2755159.9...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n241613336\n0\n[22516170, 552406626, 25762269]\nTrue\n[2, 1]\nA13\nmotorway_link\n60\nFalse\n324.967\nNaN\nLINESTRING (2755147.038 1226789.084, 2755143.8...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3190343831\n270124860\n0\n[366844304, 32057698, 366844286]\nTrue\n[3, 2]\nA13\nmotorway\n120\nFalse\n2001.988\nNaN\nLINESTRING (2755428.207 1225747.303, 2755465.1...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n241613336\n59433915\n0\n22516172\nTrue\n1\nA13\nmotorway_link\n60\nFalse\n221.358\nNaN\nLINESTRING (2755200.808 1226470.013, 2755204.9...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7820333247\n7820333246\n0\n837879582\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n9.053\nNaN\nLINESTRING (2754810.506 1223902.921, 2754819.5...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n7820333248\n7820333249\n0\n837879581\nFalse\nNaN\nNaN\nresidential\nNaN\nFalse\n7.979\nNaN\nLINESTRING (2754804.008 1223854.641, 2754812.0...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n8482145529\n8482145530\n0\n913099893\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n112.959\nNaN\nLINESTRING (2754478.667 1224886.202, 2754371.6...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n9957092649\n9957092648\n0\n1086705101\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n11.695\nNaN\nLINESTRING (2754067.660 1225371.327, 2754063.4...\nHobelweg\nNaN\nNaN\nNaN\nNaN\n\n\n11226897877\n11226897928\n0\n1211812402\nFalse\nNaN\nNaN\nunclassified\nNaN\nTrue\n65.755\nNaN\nLINESTRING (2755049.157 1225749.062, 2755045.1...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n1146 rows × 15 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2755594.560 1230076.114, 2755520.9...\n0\n\n\n1\nLINESTRING (2755147.038 1226789.084, 2755159.9...\n1\n\n\n2\nLINESTRING (2755147.038 1226789.084, 2755143.8...\n2\n\n\n3\nLINESTRING (2755428.207 1225747.303, 2755465.1...\n3\n\n\n4\nLINESTRING (2755200.808 1226470.013, 2755204.9...\n4\n\n\n...\n...\n...\n\n\n1044\nLINESTRING (2755458.377 1224327.238, 2755429.4...\n1044\n\n\n1045\nLINESTRING (2755451.988 1224168.792, 2755469.3...\n1045\n\n\n1046\nLINESTRING (2755510.771 1223941.908, 2755485.7...\n1046\n\n\n1047\nLINESTRING (2755415.250 1226254.866, 2755455.9...\n1047\n\n\n1048\nLINESTRING (2755997.642 1223804.352, 2755913.0...\n1048\n\n\n\n\n1049 rows × 2 columns"
  },
  {
    "objectID": "analysis/buchs.html#generated-data",
    "href": "analysis/buchs.html#generated-data",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [1606].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2754213.206 1226638.204, 2754218.968...\n0\n218\n218\n\n\n0\nPOLYGON ((2754213.206 1226638.204, 2754218.968...\n0\n334\n334\n\n\n1\nPOLYGON ((2754277.976 1225136.670, 2754299.900...\n1\n53\n53\n\n\n2\nPOLYGON ((2754247.161 1225362.223, 2754259.436...\n2\n73\n73\n\n\n3\nPOLYGON ((2750148.372 1223619.114, 2750135.007...\n3\n950\n950\n\n\n...\n...\n...\n...\n...\n\n\n2924\nPOLYGON ((2754219.049 1225757.057, 2754212.982...\n2924\n126\n126\n\n\n2925\nPOLYGON ((2753844.797 1225864.402, 2753852.069...\n2925\n385\n385\n\n\n2926\nPOLYGON ((2754017.966 1226777.720, 2754061.864...\n2926\n218\n218\n\n\n2926\nPOLYGON ((2754017.966 1226777.720, 2754061.864...\n2926\n334\n334\n\n\n2927\nPOLYGON ((2754668.708 1226100.931, 2754665.849...\n2927\n1004\n1004\n\n\n\n\n4324 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/buchs.html#measure",
    "href": "analysis/buchs.html#measure",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Buchs/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Buchs/convexity_and_linearity.pdf')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Buchs/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Buchs/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/measurement.py:74: RuntimeWarning: invalid value encountered in distance\n  return lib.distance(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Buchs/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Buchs/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Buchs/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n1165\nPOLYGON ((2751355.040 1223549.138, 2751392.276...\n953\n11353.859232\n0.994237\n0.004812\n42672.397474\n0.008076\n\n\n1\n1687\nPOLYGON ((2753889.557 1223776.323, 2753890.810...\n981\n26903.096396\n0.995248\n0.001614\n48522.671922\n0.003579\n\n\n2\n1163\nPOLYGON ((2750617.399 1223334.422, 2750612.381...\n950\n35912.204898\n1.000000\n0.000000\n35912.204898\n0.002423\n\n\n3\n3\nPOLYGON ((2750054.672 1223560.381, 2750060.346...\n950\n22213.962541\n0.994439\n0.001716\n30435.885794\n0.016889\n\n\n4\n4\nPOLYGON ((2750079.564 1223654.774, 2750080.072...\n950\n8221.923253\n0.686470\n0.003653\n48490.457975\n0.026644\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2923\n1679\nPOLYGON ((2754936.747 1227397.340, 2754920.854...\n951\n33625.438536\n0.961660\n0.005705\n96578.765916\n0.028308\n\n\n2924\n1680\nPOLYGON ((2754984.078 1227540.408, 2754983.066...\n951\n29292.717411\n0.999566\n0.003172\n72770.304830\n0.006952\n\n\n2925\n1646\nPOLYGON ((2755100.729 1228948.579, 2755100.604...\n951\n7831.925078\n0.980711\n0.005570\n35128.186137\n0.004871\n\n\n2926\n1645\nPOLYGON ((2755096.144 1228999.877, 2755095.441...\n951\n20239.107851\n0.977758\n0.007109\n51071.702994\n0.049105\n\n\n2927\n1639\nPOLYGON ((2754849.745 1229643.736, 2754853.141...\n951\n40144.662728\n0.842994\n0.001155\n52228.914300\n0.031263\n\n\n\n\n2928 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/buchs.html#understanding-the-context",
    "href": "analysis/buchs.html#understanding-the-context",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_20409/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n10137.731429\n11353.859232\n14380.513422\n0.981643\n0.991219\n0.994237\n0.006402\n0.007231\n0.008073\n46139.164796\n...\n1.223609e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.0\n\n\n1\n16803.403250\n21471.637384\n23139.017061\n0.989006\n0.993110\n0.996198\n0.005071\n0.007023\n0.007596\n63032.559648\n...\n1.223947e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.0\n-0.0\n-0.0\n\n\n2\n35912.204898\n35912.204898\n35912.204898\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n35912.204898\n...\n1.223568e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.0\n\n\n3\n13138.247717\n18054.572181\n20134.267361\n0.836536\n0.986602\n0.990521\n0.001799\n0.001883\n0.002768\n28356.190614\n...\n1.223568e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.0\n0.0\n-0.0\n\n\n4\n13138.247717\n18054.572181\n20134.267361\n0.836536\n0.986602\n0.990521\n0.001799\n0.001883\n0.002768\n28356.190614\n...\n1.223568e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n-0.0\n0.0\n-0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2923\n9852.148883\n15726.573464\n20677.614219\n0.909838\n0.961660\n0.989274\n0.004652\n0.007028\n0.008732\n54827.987137\n...\n1.226789e+06\n4.0\n4.0\n4.0\n0.000006\n0.000006\n0.000006\n0.0\n0.0\n0.0\n\n\n2924\n12789.361174\n19488.494754\n24985.165815\n0.932298\n0.961660\n0.993719\n0.004567\n0.007028\n0.008478\n66606.101588\n...\n1.226789e+06\n4.0\n4.0\n4.0\n0.000006\n0.000006\n0.000006\n-0.0\n0.0\n-0.0\n\n\n2925\n7444.539143\n11385.894872\n15141.712742\n0.978905\n0.980381\n0.984285\n0.006065\n0.006834\n0.010771\n40290.178304\n...\n1.230076e+06\n2.0\n2.0\n2.0\n0.000000\n0.000000\n0.000000\n-0.0\n-0.0\n-0.0\n\n\n2926\n7444.539143\n11385.894872\n15141.712742\n0.978905\n0.980381\n0.984285\n0.006065\n0.006834\n0.010771\n40290.178304\n...\n1.230076e+06\n2.0\n2.0\n2.0\n0.000000\n0.000000\n0.000000\n-0.0\n-0.0\n-0.0\n\n\n2927\n26114.457150\n26114.457150\n26114.457150\n0.918173\n0.918173\n0.918173\n0.001739\n0.001739\n0.001739\n52228.914300\n...\n1.230076e+06\n2.0\n2.0\n2.0\n0.000000\n0.000000\n0.000000\n-0.0\n-0.0\n-0.0\n\n\n\n\n2928 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Buchs/convexity.svg')"
  },
  {
    "objectID": "analysis/buchs.html#clustering",
    "href": "analysis/buchs.html#clustering",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n2.780054\n2.367565\n2.180879\n2.985980\n3.173174\n2.692397\n-2.137677\n-2.643707\n-3.006642\n2.809770\n...\n-1.858493\n-1.795915\n-4.107503\n-4.496675\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n1\n4.919012\n4.974411\n3.932004\n3.417198\n3.351997\n2.965845\n-2.244369\n-2.659716\n-3.041012\n4.156662\n...\n-1.512279\n-1.795915\n-4.107503\n-4.496675\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n2\n11.050867\n8.695023\n6.485803\n4.060970\n4.003610\n3.495914\n-2.650809\n-3.199386\n-3.589018\n1.994387\n...\n-1.900469\n-1.795915\n-4.107503\n-4.496675\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n3\n3.742895\n4.094004\n3.331252\n-5.511314\n2.736601\n2.174190\n-2.506586\n-3.054689\n-3.389326\n1.391954\n...\n-1.900469\n-1.795915\n-4.107503\n-4.496675\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n4\n3.742895\n4.094004\n3.331252\n-5.511314\n2.736601\n2.174190\n-2.506586\n-3.054689\n-3.389326\n1.391954\n...\n-1.900469\n-1.795915\n-4.107503\n-4.496675\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2923\n2.688413\n3.494195\n3.439886\n-1.218814\n0.377939\n2.000292\n-2.277932\n-2.659348\n-2.959086\n3.502520\n...\n1.398099\n-0.166233\n-1.396634\n-1.864212\n-1.465077\n-1.761618\n-1.940204\n-1.921832\n-2.420255\n-2.339315\n\n\n2924\n3.630940\n4.463454\n4.301113\n0.096439\n0.377939\n2.620080\n-2.284742\n-2.659348\n-2.977428\n4.441576\n...\n1.398099\n-0.166233\n-1.396634\n-1.864212\n-1.465077\n-1.761618\n-1.940204\n-1.921832\n-2.420255\n-2.339315\n\n\n2925\n1.915831\n2.375819\n2.333069\n2.825652\n2.148299\n1.304717\n-2.164721\n-2.674260\n-2.812019\n2.343437\n...\n4.764183\n-1.252688\n-3.203880\n-3.619187\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n2926\n1.915831\n2.375819\n2.333069\n2.825652\n2.148299\n1.304717\n-2.164721\n-2.674260\n-2.812019\n2.343437\n...\n4.764183\n-1.252688\n-3.203880\n-3.619187\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n2927\n7.906851\n6.170633\n4.526897\n-0.730747\n-3.734576\n-7.913502\n-2.511402\n-3.065736\n-3.463547\n3.295299\n...\n4.764183\n-1.252688\n-3.203880\n-3.619187\n-1.523795\n-1.818352\n-1.994563\n-1.921832\n-2.420255\n-2.339315\n\n\n\n\n2928 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.049 seconds.\nK=3 fitted in 0.054 seconds.\nK=4 fitted in 0.046 seconds.\nK=5 fitted in 0.072 seconds.\nK=6 fitted in 0.117 seconds.\nK=7 fitted in 0.071 seconds.\nK=8 fitted in 0.082 seconds.\nK=9 fitted in 0.096 seconds.\nK=10 fitted in 0.076 seconds.\nK=11 fitted in 0.085 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n1\n2\n3\n5\n5\n3\n8\n7\n9\n\n\n1\n0\n1\n1\n2\n4\n4\n3\n4\n6\n9\n2\n\n\n2\n0\n1\n1\n2\n4\n4\n6\n3\n6\n9\n2\n\n\n3\n0\n1\n1\n2\n4\n4\n6\n3\n6\n9\n2\n\n\n4\n0\n1\n1\n2\n4\n4\n6\n3\n6\n9\n2\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/buchs.html#export",
    "href": "analysis/buchs.html#export",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Buchs.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/buchs.html#utilities",
    "href": "analysis/buchs.html#utilities",
    "title": "maxvogt-analysis: Buchs SG",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/oberrieden.html",
    "href": "analysis/oberrieden.html",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - ORDD018 - ORDD118\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Oberrieden, Schweiz'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/oberrieden.html#input-data",
    "href": "analysis/oberrieden.html#input-data",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\namenity\noperator\ngeometry\nname\ntourism\naddr:housenumber\naddr:street\naddr:city\naddr:postcode\nnodes\n...\nfee\nreservation\nbicycle_parking\nbuilding:colour\nbuilding:material\nroof:colour\nroof:material\nbench\nlit\nshelter_type\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n31755377\nNaN\nNaN\nPOLYGON ((8.57482 47.27620, 8.57491 47.27608, ...\nSekundarschule Langweg\nNaN\n2\nLangweg\nOberrieden\n8942\n[355401234, 355401236, 355401237, 355401239, 3...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n44115919\nNaN\nNaN\nPOLYGON ((8.57961 47.27624, 8.57967 47.27616, ...\nNaN\nNaN\n42\nFachstrasse\nNaN\nNaN\n[560596572, 560596573, 560596574, 560596575, 5...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n44115920\nNaN\nNaN\nPOLYGON ((8.57739 47.27437, 8.57751 47.27431, ...\nNaN\nNaN\n3\nSchäppi-Naef-Strasse\nOberrieden\n8942\n[560596527, 560596528, 560596541, 560596544, 5...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n44115921\nNaN\nNaN\nPOLYGON ((8.57746 47.27477, 8.57759 47.27471, ...\nNaN\nNaN\n5\nSchäppi-Naef-Strasse\nOberrieden\n8942\n[560596531, 560596545, 560596532, 560596533, 5...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n44115922\nNaN\nNaN\nPOLYGON ((8.57764 47.27431, 8.57777 47.27424, ...\nNaN\nNaN\n1\nSchäppi-Naef-Strasse\nOberrieden\n8942\n[560596542, 560596543, 560596513, 560596512, 5...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1261816540\nNaN\nNaN\nPOLYGON ((8.57396 47.27933, 8.57397 47.27939, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[11724413987, 11724413982, 11724413991, 117242...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1261893913\nNaN\nNaN\nPOLYGON ((8.57831 47.27198, 8.57825 47.27191, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[1089206094, 1089206054, 11724923822, 10892063...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1261899058\nNaN\nNaN\nPOLYGON ((8.57988 47.27071, 8.57990 47.27074, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[11724982991, 11724982998, 11724983003, 117249...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1261899064\nNaN\nNaN\nPOLYGON ((8.57984 47.27064, 8.57989 47.27067, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[11724982985, 11724982995, 11724982990, 117249...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1292857527\nNaN\nNaN\nPOLYGON ((8.57773 47.27669, 8.57780 47.27660, ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[11985512539, 7853560217, 11985512540, 1198551...\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n844 rows × 53 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    844\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2685966.871 1236766.632, 2685974.033...\n0\n\n\n1\nPOLYGON ((2686329.483 1236775.808, 2686333.764...\n1\n\n\n2\nPOLYGON ((2686164.572 1236566.019, 2686173.696...\n2\n\n\n3\nPOLYGON ((2686169.357 1236610.209, 2686178.804...\n3\n\n\n4\nPOLYGON ((2686183.476 1236559.222, 2686193.194...\n4\n\n\n...\n...\n...\n\n\n839\nPOLYGON ((2685896.680 1237113.643, 2685897.900...\n839\n\n\n840\nPOLYGON ((2686237.897 1236301.161, 2686233.167...\n840\n\n\n841\nPOLYGON ((2686358.388 1236162.011, 2686360.499...\n841\n\n\n842\nPOLYGON ((2686355.623 1236153.910, 2686359.836...\n842\n\n\n843\nPOLYGON ((2686186.040 1236824.682, 2686192.010...\n843\n\n\n\n\n844 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nlanes\nname\nhighway\nmaxspeed\noneway\nreversed\nlength\ngeometry\nref\naccess\ntunnel\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n30123132\n177824338\n0\n119779828\n2\nTischenloostrasse\nsecondary\n50\nFalse\nTrue\n80.029\nLINESTRING (2686308.049 1237421.426, 2686304.6...\nNaN\nNaN\nNaN\n\n\n575011678\n0\n[1280229330, 1280229331, 119786325, 1026333820...\n[2, 3]\nSeestrasse\nprimary\n50\nFalse\nTrue\n511.984\nLINESTRING (2686308.049 1237421.426, 2686191.6...\n3\nNaN\nNaN\n\n\n529617290\n0\n[1280038074, 1280038075, 119786300]\n2\nSeestrasse\nprimary\n50\nFalse\nFalse\n428.218\nLINESTRING (2686308.049 1237421.426, 2686320.3...\n3\nNaN\nNaN\n\n\n177824338\n30123132\n0\n119779828\n2\nTischenloostrasse\nsecondary\n50\nFalse\nFalse\n80.029\nLINESTRING (2686233.164 1237396.398, 2686238.6...\nNaN\nNaN\nNaN\n\n\n60549499\n0\n119779828\n2\nTischenloostrasse\nsecondary\n50\nFalse\nTrue\n83.055\nLINESTRING (2686233.164 1237396.398, 2686226.4...\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n616798397\n3872963374\n0\n[817985605, 687730934]\nNaN\nHolzgasse\nresidential\nNaN\nFalse\nFalse\n36.510\nLINESTRING (2685776.391 1236906.201, 2685775.1...\nNaN\nNaN\nNaN\n\n\n3872963720\n0\n[93908765, 817985605]\nNaN\nHolzgasse\nresidential\nNaN\nFalse\nTrue\n148.561\nLINESTRING (2685776.391 1236906.201, 2685768.5...\nNaN\nNaN\nNaN\n\n\n748125951\n748125909\n0\n[1261899057, 60224250]\nNaN\nIm Bleier\nresidential\nNaN\nFalse\nTrue\n34.629\nLINESTRING (2686333.042 1236144.931, 2686347.1...\nNaN\nNaN\nNaN\n\n\n748125945\n748125948\n0\n[1261899059, 1261899060]\nNaN\nBleierweg\nresidential\nNaN\nFalse\nFalse\n48.925\nLINESTRING (2686422.403 1236140.972, 2686407.9...\nNaN\nNaN\nNaN\n\n\n3872963391\n3872963374\n0\n383997272\nNaN\nWiesengrundstrasse\nresidential\n30\nFalse\nTrue\n249.180\nLINESTRING (2685629.600 1237123.149, 2685639.2...\nNaN\nNaN\nNaN\n\n\n\n\n259 rows × 12 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2686308.049 1237421.426, 2686304.6...\n0\n\n\n1\nLINESTRING (2686308.049 1237421.426, 2686320.3...\n1\n\n\n2\nLINESTRING (2686233.164 1237396.398, 2686238.6...\n2\n\n\n3\nLINESTRING (2686233.164 1237396.398, 2686226.4...\n3\n\n\n4\nLINESTRING (2686467.693 1237034.470, 2686461.8...\n4\n\n\n...\n...\n...\n\n\n220\nLINESTRING (2686423.666 1235971.536, 2686407.2...\n220\n\n\n221\nLINESTRING (2686497.113 1235977.976, 2686494.4...\n221\n\n\n222\nLINESTRING (2686561.519 1236279.618, 2686568.4...\n222\n\n\n223\nLINESTRING (2686765.609 1235641.661, 2686764.1...\n223\n\n\n224\nLINESTRING (2686957.648 1235838.276, 2686958.9...\n224\n\n\n\n\n225 rows × 2 columns"
  },
  {
    "objectID": "analysis/oberrieden.html#generated-data",
    "href": "analysis/oberrieden.html#generated-data",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2685966.871 1236766.632, 2685974.033...\n0\n78\n78\n\n\n0\nPOLYGON ((2685966.871 1236766.632, 2685974.033...\n0\n164\n164\n\n\n1\nPOLYGON ((2686329.483 1236775.808, 2686333.764...\n1\n54\n54\n\n\n1\nPOLYGON ((2686329.483 1236775.808, 2686333.764...\n1\n51\n51\n\n\n2\nPOLYGON ((2686164.572 1236566.019, 2686173.696...\n2\n205\n205\n\n\n...\n...\n...\n...\n...\n\n\n841\nPOLYGON ((2686358.388 1236162.011, 2686360.499...\n841\n14\n14\n\n\n841\nPOLYGON ((2686358.388 1236162.011, 2686360.499...\n841\n108\n108\n\n\n842\nPOLYGON ((2686355.623 1236153.910, 2686359.836...\n842\n215\n215\n\n\n843\nPOLYGON ((2686186.040 1236824.682, 2686192.010...\n843\n22\n22\n\n\n843\nPOLYGON ((2686186.040 1236824.682, 2686192.010...\n843\n30\n30\n\n\n\n\n1233 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/oberrieden.html#measure",
    "href": "analysis/oberrieden.html#measure",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Oberrieden/eri_and_elongation.svg')  \n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/IPython/core/pylabtools.py:77: DeprecationWarning: backend2gui is deprecated since IPython 8.24, backends are managed in matplotlib and can be externally registered.\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Oberrieden/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Oberrieden/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Oberrieden/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Oberrieden/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Oberrieden/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Oberrieden/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n734\nPOLYGON ((2685973.188 1235677.899, 2686044.271...\n111\n17191.392015\n0.992737\n0.003778\n47865.385431\n0.001916\n\n\n1\n820\nPOLYGON ((2686135.257 1235674.822, 2686134.568...\n211\n7689.406967\n0.990258\n0.014539\n50541.503088\n0.003765\n\n\n2\n345\nPOLYGON ((2686197.645 1235748.423, 2686196.588...\n211\n744.761955\n0.978243\n0.057250\n27103.304045\n0.158088\n\n\n3\n817\nPOLYGON ((2686160.261 1235743.424, 2686162.388...\n211\n854.588998\n0.983251\n0.051459\n30969.604088\n0.026589\n\n\n4\n816\nPOLYGON ((2686190.041 1235771.496, 2686189.128...\n211\n374.901466\n0.954621\n0.048503\n10552.099159\n0.226083\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n839\n228\nPOLYGON ((2685568.599 1237092.793, 2685567.746...\n195\n12855.879494\n0.959069\n0.011158\n37327.141806\n0.064310\n\n\n840\n729\nPOLYGON ((2685323.954 1237030.597, 2685321.566...\n191\n11052.546482\n0.988287\n0.007244\n25466.419362\n0.007841\n\n\n841\n201\nPOLYGON ((2685353.831 1237103.830, 2685351.276...\n191\n8532.917192\n0.969222\n0.013680\n30106.366221\n0.021586\n\n\n842\n810\nPOLYGON ((2685932.903 1237344.416, 2685931.752...\n44\n5831.143978\n0.995861\n0.009219\n21733.754550\n0.002558\n\n\n843\n489\nPOLYGON ((2685926.007 1237428.513, 2685916.471...\n44\n9769.313163\n0.987086\n0.007648\n21291.218196\n0.015111\n\n\n\n\n844 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/oberrieden.html#understanding-the-context",
    "href": "analysis/oberrieden.html#understanding-the-context",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42725/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n2783.140452\n8592.511494\n15014.618568\n0.953947\n0.986487\n0.991728\n0.007761\n0.014539\n0.021216\n30861.324641\n...\n1.235853e+06\n1.0\n1.0\n5.0\n0.000000\n0.000000\n0.000000\n-0.000000\n0.000000\n-0.000000\n\n\n1\n2336.771671\n6421.961619\n9845.575523\n0.949163\n0.976945\n0.990978\n0.011660\n0.018537\n0.022778\n29968.414961\n...\n1.235853e+06\n1.0\n1.0\n5.0\n0.000000\n0.000000\n0.000000\n-0.000000\n0.000000\n-0.000000\n\n\n2\n2197.290275\n4719.804202\n9603.888527\n0.949163\n0.972796\n0.989277\n0.013200\n0.020060\n0.024048\n29023.975865\n...\n1.235853e+06\n1.0\n1.0\n5.0\n0.000000\n0.000000\n0.000000\n-0.000000\n-0.000000\n-0.000000\n\n\n3\n2149.453503\n6671.104667\n9845.575523\n0.949163\n0.980747\n0.991728\n0.011660\n0.019529\n0.024048\n29023.975865\n...\n1.235853e+06\n1.0\n1.0\n5.0\n0.000000\n0.000000\n0.000000\n-0.000000\n-0.000000\n-0.000000\n\n\n4\n2180.748736\n4505.122119\n9501.556146\n0.948700\n0.969022\n0.988662\n0.013374\n0.020522\n0.024306\n28455.122012\n...\n1.235853e+06\n1.0\n1.0\n5.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n839\n970.542134\n1590.402152\n3912.297658\n0.947513\n0.960842\n0.970868\n0.017609\n0.040458\n0.047214\n8191.659867\n...\n1.237075e+06\n1.0\n5.0\n5.0\n0.000347\n0.000347\n0.000429\n0.515152\n0.538462\n0.538462\n\n\n840\n1361.181786\n3799.191378\n5358.067786\n0.942626\n0.962813\n0.986652\n0.012115\n0.023996\n0.037779\n17676.614641\n...\n1.237036e+06\n1.0\n1.0\n5.0\n0.000187\n0.000187\n0.000347\n0.444444\n0.444444\n0.538462\n\n\n841\n1119.184247\n1982.440006\n5200.916854\n0.944657\n0.960715\n0.983153\n0.012166\n0.030527\n0.046044\n11875.778799\n...\n1.237036e+06\n1.0\n5.0\n5.0\n0.000187\n0.000347\n0.000347\n0.444444\n0.538462\n0.538462\n\n\n842\n1669.556261\n1907.809182\n5172.416413\n0.926031\n0.955802\n0.962791\n0.014784\n0.033330\n0.037547\n13921.705222\n...\n1.237383e+06\n4.0\n4.5\n6.0\n0.000426\n0.000444\n0.000463\n0.440000\n0.505714\n0.571429\n\n\n843\n1464.371351\n1813.220073\n4071.152494\n0.929834\n0.954015\n0.965235\n0.015469\n0.033900\n0.038035\n12307.416406\n...\n1.237403e+06\n4.0\n5.0\n6.0\n0.000426\n0.000463\n0.000463\n0.440000\n0.440000\n0.571429\n\n\n\n\n844 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Oberrieden/convexity.svg')"
  },
  {
    "objectID": "analysis/oberrieden.html#clustering",
    "href": "analysis/oberrieden.html#clustering",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n1.048666\n3.819267\n4.481297\n1.876113\n3.496876\n2.374010\n-2.766117\n-3.210298\n-3.050655\n3.798578\n...\n-2.325323\n-1.789767\n-3.676955\n-1.242475\n-2.005323\n-2.751987\n-3.784139\n-2.603699\n-3.347934\n-3.546388\n\n\n1\n0.754592\n2.608840\n2.565487\n1.503276\n2.420822\n2.274802\n-2.275522\n-2.648183\n-2.844407\n3.633534\n...\n-2.325323\n-1.789767\n-3.676955\n-1.242475\n-2.005323\n-2.751987\n-3.784139\n-2.603699\n-3.347934\n-3.546388\n\n\n2\n0.662699\n1.659617\n2.475910\n1.503276\n1.952932\n2.049580\n-2.081643\n-2.434079\n-2.676726\n3.458967\n...\n-2.325323\n-1.789767\n-3.676955\n-1.242475\n-2.005323\n-2.751987\n-3.784139\n-2.603699\n-3.347934\n-3.546388\n\n\n3\n0.631184\n2.747777\n2.565487\n1.503276\n2.849563\n2.374010\n-2.275522\n-2.508712\n-2.676726\n3.458967\n...\n-2.325323\n-1.789767\n-3.676955\n-1.242475\n-2.005323\n-2.751987\n-3.784139\n-2.603699\n-3.347934\n-3.546388\n\n\n4\n0.651801\n1.539897\n2.437982\n1.467244\n1.527361\n1.968180\n-2.059756\n-2.369242\n-2.642693\n3.353821\n...\n-2.325323\n-1.789767\n-3.676955\n-1.242475\n-2.005323\n-2.751987\n-3.784139\n-2.603699\n-3.347934\n-3.546388\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n839\n-0.145501\n-0.085523\n0.366427\n1.374686\n0.604859\n-0.387099\n-1.526856\n0.433273\n0.381910\n-0.391625\n...\n0.825006\n-1.789767\n-0.314257\n-1.242475\n-0.132099\n-0.854513\n-1.099920\n0.481516\n0.309082\n-0.173820\n\n\n840\n0.111859\n1.146229\n0.902275\n0.993897\n0.827043\n1.702163\n-2.218173\n-1.880867\n-0.863708\n1.361550\n...\n0.724890\n-1.789767\n-3.676955\n-1.242475\n-0.995106\n-1.728692\n-1.613474\n0.058056\n-0.329444\n-0.173820\n\n\n841\n-0.047573\n0.133101\n0.844030\n1.152130\n0.590456\n1.238994\n-2.211842\n-0.962712\n0.227434\n0.289338\n...\n0.724890\n-1.789767\n-0.314257\n-1.242475\n-0.995106\n-0.854513\n-1.613474\n0.058056\n0.309082\n-0.173820\n\n\n842\n0.315020\n0.091482\n0.833467\n-0.299353\n0.036398\n-1.456252\n-1.882373\n-0.568711\n-0.894394\n0.667502\n...\n1.620889\n-0.148742\n-0.734594\n0.048170\n0.293522\n-0.322304\n-0.889007\n0.031438\n0.086676\n0.032664\n\n\n843\n0.179841\n0.038734\n0.425303\n-0.002948\n-0.165090\n-1.132708\n-1.796218\n-0.488518\n-0.829970\n0.369121\n...\n1.672301\n-0.148742\n-0.314257\n0.048170\n0.293522\n-0.221225\n-0.889007\n0.031438\n-0.359629\n0.032664\n\n\n\n\n844 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.019 seconds.\nK=3 fitted in 0.022 seconds.\nK=4 fitted in 0.025 seconds.\nK=5 fitted in 0.024 seconds.\nK=6 fitted in 0.023 seconds.\nK=7 fitted in 0.033 seconds.\nK=8 fitted in 0.024 seconds.\nK=9 fitted in 0.027 seconds.\nK=10 fitted in 0.046 seconds.\nK=11 fitted in 0.058 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n1\n2\n2\n2\n2\n2\n1\n1\n2\n9\n\n\n1\n0\n1\n2\n2\n2\n2\n2\n1\n1\n2\n9\n\n\n2\n0\n1\n2\n2\n2\n2\n2\n1\n1\n2\n9\n\n\n3\n0\n1\n2\n2\n2\n2\n2\n1\n1\n2\n9\n\n\n4\n0\n1\n2\n2\n2\n2\n2\n1\n1\n2\n9\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/oberrieden.html#export",
    "href": "analysis/oberrieden.html#export",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Oberrieden.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/oberrieden.html#utilities",
    "href": "analysis/oberrieden.html#utilities",
    "title": "maxvogt-analysis: Oberrieden",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/sevelen.html",
    "href": "analysis/sevelen.html",
    "title": "maxvogt-analysis: Sevelen",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - SEV012 - SEV901\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Sevelen'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/sevelen.html#input-data",
    "href": "analysis/sevelen.html#input-data",
    "title": "maxvogt-analysis: Sevelen",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\naddr:city\naddr:country\naddr:housenumber\naddr:postcode\naddr:street\namenity\ncheck_date\nname\noperator\nphone\n...\nsubstation\nvoltage\nele\nfee\nbicycle_parking\ncapacity\ncovered\nsurface\nsocial_facility:for\nroof:colour\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nway\n26128065\nNaN\nNaN\nNaN\nNaN\nNaN\nplace_of_worship\nNaN\nEvangelisch-methodistische Kirche Sevelen\nNaN\n+41 81 740 11 46\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n106483619\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n106483620\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n106483621\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n106483625\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1285565374\nSevelen\nNaN\n12\n9475\nBaggastiel\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1285565375\nSevelen\nNaN\n39\n9475\nGärtli\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1313717770\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nZentrale Fösera\nNationalstrassen Gebiet VI\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1316498722\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1316498723\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n1937 rows × 71 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon    1937\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2755401.800 1221792.604, 2755402.122...\n0\n\n\n1\nPOLYGON ((2753839.064 1221553.336, 2753844.237...\n1\n\n\n2\nPOLYGON ((2753834.645 1221561.607, 2753836.564...\n2\n\n\n3\nPOLYGON ((2753855.376 1221702.437, 2753863.585...\n3\n\n\n4\nPOLYGON ((2753828.613 1221501.920, 2753818.674...\n4\n\n\n...\n...\n...\n\n\n1932\nPOLYGON ((2755431.275 1220666.679, 2755423.777...\n1932\n\n\n1933\nPOLYGON ((2755651.686 1220640.199, 2755658.394...\n1933\n\n\n1934\nPOLYGON ((2756429.209 1223784.491, 2756432.730...\n1934\n\n\n1935\nPOLYGON ((2756949.813 1221993.039, 2756950.584...\n1935\n\n\n1936\nPOLYGON ((2756897.582 1222000.447, 2756902.899...\n1936\n\n\n\n\n1937 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='drive_service', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\noneway\nlanes\nref\nhighway\nmaxspeed\nreversed\nlength\nbridge\ngeometry\nname\nservice\njunction\ntunnel\naccess\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n30123245\n269706540\n0\n[552405762, 366844262, 186388041, 186388045, 3...\nTrue\n[3, 2]\nA13\nmotorway\n120\nFalse\n1980.345\nyes\nLINESTRING (2757698.197 1219647.937, 2757644.5...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n269706540\n30123251\n0\n366844300\nTrue\n2\nA13\nmotorway\n120\nFalse\n889.795\nNaN\nLINESTRING (2757255.358 1221577.472, 2757215.5...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n269706605\n0\n[366844328, 24826059, 552405764]\nTrue\n[1, 2]\nA13\nmotorway_link\nNaN\nFalse\n385.951\nNaN\nLINESTRING (2757255.358 1221577.472, 2757256.1...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n30123251\n270125034\n0\n[366844258, 366844299, 366844263]\nTrue\n[3, 2]\nA13\nmotorway\n120\nFalse\n1222.318\nNaN\nLINESTRING (2756991.842 1222427.191, 2756940.5...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n270125034\n270125089\n0\n[366844336, 24859942]\nTrue\n1\nA13\n[service, motorway_link]\n40\nFalse\n173.484\nNaN\nLINESTRING (2756500.218 1223545.514, 2756498.4...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n11482725741\n11482725742\n0\n1236595362\nFalse\nNaN\nNaN\nservice\nNaN\nTrue\n62.162\nNaN\nLINESTRING (2755949.772 1220678.753, 2755934.7...\nNaN\ndriveway\nNaN\nNaN\nNaN\n\n\n11910829000\n11910828999\n0\n1283754986\nFalse\nNaN\nNaN\nservice\nNaN\nTrue\n62.619\nNaN\nLINESTRING (2755330.700 1221254.002, 2755276.7...\nFulfirstweg\nNaN\nNaN\nNaN\nNaN\n\n\n11910829032\n11910829033\n0\n1283754991\nFalse\nNaN\nNaN\nservice\nNaN\nFalse\n44.644\nNaN\nLINESTRING (2755195.252 1221232.462, 2755156.7...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11971550004\n11971550002\n0\n1291240196\nFalse\nNaN\nNaN\nunclassified\nNaN\nTrue\n45.545\nNaN\nLINESTRING (2755642.795 1219803.315, 2755653.2...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n12092464718\n12092464712\n0\n1305628943\nFalse\nNaN\nNaN\nresidential\nNaN\nTrue\n61.743\nNaN\nLINESTRING (2755221.637 1220560.783, 2755214.0...\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n926 rows × 15 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2757698.197 1219647.937, 2757644.5...\n0\n\n\n1\nLINESTRING (2757255.358 1221577.472, 2757215.5...\n1\n\n\n2\nLINESTRING (2757255.358 1221577.472, 2757256.1...\n2\n\n\n3\nLINESTRING (2756991.842 1222427.191, 2756940.5...\n3\n\n\n4\nLINESTRING (2756500.218 1223545.514, 2756498.4...\n4\n\n\n...\n...\n...\n\n\n790\nLINESTRING (2756526.883 1221203.427, 2756529.7...\n790\n\n\n791\nLINESTRING (2756984.484 1222066.965, 2756927.9...\n791\n\n\n792\nLINESTRING (2757159.928 1220360.000, 2757035.1...\n792\n\n\n793\nLINESTRING (2757178.228 1220787.876, 2757174.3...\n793\n\n\n794\nLINESTRING (2757405.383 1222039.061, 2757398.1...\n794\n\n\n\n\n795 rows × 2 columns"
  },
  {
    "objectID": "analysis/sevelen.html#generated-data",
    "href": "analysis/sevelen.html#generated-data",
    "title": "maxvogt-analysis: Sevelen",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [1903, 15].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2755401.800 1221792.604, 2755402.122...\n0\n30.0\n30.0\n\n\n1\nPOLYGON ((2753839.064 1221553.336, 2753844.237...\n1\n669.0\n669.0\n\n\n2\nPOLYGON ((2753834.645 1221561.607, 2753836.564...\n2\n669.0\n669.0\n\n\n3\nPOLYGON ((2753855.376 1221702.437, 2753863.585...\n3\n669.0\n669.0\n\n\n4\nPOLYGON ((2753828.613 1221501.920, 2753818.674...\n4\n669.0\n669.0\n\n\n...\n...\n...\n...\n...\n\n\n1933\nPOLYGON ((2755651.686 1220640.199, 2755658.394...\n1933\n225.0\n225.0\n\n\n1934\nPOLYGON ((2756429.209 1223784.491, 2756432.730...\n1934\n109.0\n109.0\n\n\n1935\nPOLYGON ((2756949.813 1221993.039, 2756950.584...\n1935\n66.0\n66.0\n\n\n1935\nPOLYGON ((2756949.813 1221993.039, 2756950.584...\n1935\n63.0\n63.0\n\n\n1936\nPOLYGON ((2756897.582 1222000.447, 2756902.899...\n1936\n791.0\n791.0\n\n\n\n\n2681 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/sevelen.html#measure",
    "href": "analysis/sevelen.html#measure",
    "title": "maxvogt-analysis: Sevelen",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Sevelen/eri_and_elongation.svg')  \n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Sevelen/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Sevelen/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Sevelen/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Sevelen/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Sevelen/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Sevelen/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n672\nPOLYGON ((2755740.743 1219624.304, 2755741.485...\n275.0\n14465.712500\n0.985519\n0.008163\n50470.394434\n0.016147\n\n\n1\n673\nPOLYGON ((2755830.442 1219677.926, 2755830.319...\n398.0\n25990.552916\n0.997616\n0.004943\n46627.197528\n0.016296\n\n\n2\n21\nPOLYGON ((2756975.672 1220182.410, 2756979.232...\n792.0\n39510.709889\n1.000000\n0.000000\n39510.709889\n0.009528\n\n\n3\n1789\nPOLYGON ((2757395.055 1220845.269, 2757401.525...\n793.0\n37268.343059\n1.000000\n0.000000\n37268.343059\n0.004444\n\n\n4\n674\nPOLYGON ((2756106.850 1219946.070, 2756109.410...\n788.0\n22245.445653\n0.925835\n0.003256\n47044.661604\n0.028868\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1932\n1754\nPOLYGON ((2755001.258 1223613.821, 2754999.045...\n691.0\n4345.532717\n0.930402\n0.015443\n21228.836082\n0.082194\n\n\n1933\n1753\nPOLYGON ((2754977.388 1223629.010, 2754977.036...\n688.0\n4868.445470\n0.969382\n0.015067\n14829.360390\n0.055381\n\n\n1934\n1752\nPOLYGON ((2754951.999 1223632.655, 2754951.229...\n688.0\n2912.553021\n0.859531\n0.016765\n13463.696281\n0.096083\n\n\n1935\n1763\nPOLYGON ((2755062.819 1223636.781, 2755062.063...\n691.0\n6887.039874\n0.991930\n0.008915\n21131.648023\n0.023056\n\n\n1936\n1677\nPOLYGON ((2754081.965 1224144.231, 2754078.815...\nNaN\n38900.234308\n0.999982\n0.000000\n38900.234308\n0.007473\n\n\n\n\n1937 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/sevelen.html#understanding-the-context",
    "href": "analysis/sevelen.html#understanding-the-context",
    "title": "maxvogt-analysis: Sevelen",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_42339/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n1343.647081\n2579.545947\n8192.844246\n0.957503\n0.974203\n0.986934\n0.013001\n0.019307\n0.032285\n21509.502114\n...\n1.219814e+06\n1.0\n4.0\n5.0\n0.000055\n0.000055\n0.000071\n0.285714\n0.363636\n0.400000\n\n\n1\n997.731229\n2147.135102\n5451.230101\n0.951050\n0.959980\n0.984212\n0.012369\n0.022858\n0.043805\n13524.020183\n...\n1.219873e+06\n1.0\n4.0\n5.5\n0.000055\n0.000063\n0.000075\n0.285714\n0.363636\n0.400000\n\n\n2\n39510.709889\n39510.709889\n39510.709889\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n39510.709889\n...\n1.220363e+06\n4.0\n4.0\n4.0\n0.000018\n0.000018\n0.000018\n0.000000\n0.000000\n0.000000\n\n\n3\n37268.343059\n37268.343059\n37268.343059\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n37268.343059\n...\n1.220788e+06\n1.0\n1.0\n1.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n4\n12399.607976\n12418.925644\n17332.185648\n0.959843\n0.993850\n0.993931\n0.003934\n0.004613\n0.004614\n47044.661604\n...\n1.220051e+06\n4.0\n4.0\n4.0\n0.000020\n0.000020\n0.000020\n1.000000\n1.000000\n1.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1932\n1050.382501\n1910.163538\n4366.343848\n0.932952\n0.963616\n0.976923\n0.018367\n0.032658\n0.044076\n10383.833851\n...\n1.223607e+06\n1.0\n5.0\n5.0\n0.000158\n0.000207\n0.000224\n0.258065\n0.265993\n0.282051\n\n\n1933\n639.399910\n1127.177947\n2549.672621\n0.929856\n0.961819\n0.974298\n0.020241\n0.040927\n0.058556\n6124.118692\n...\n1.223645e+06\n1.0\n5.0\n5.0\n0.000163\n0.000224\n0.000257\n0.258065\n0.282051\n0.282051\n\n\n1934\n549.041328\n938.668430\n1978.249065\n0.924653\n0.959295\n0.974853\n0.032658\n0.046320\n0.060026\n5105.280128\n...\n1.223652e+06\n1.0\n5.0\n5.0\n0.000179\n0.000224\n0.000261\n0.258065\n0.282051\n0.296296\n\n\n1935\n1186.613774\n1910.163538\n5064.063851\n0.926041\n0.951579\n0.976692\n0.016104\n0.029446\n0.039263\n13268.372598\n...\n1.223621e+06\n1.0\n5.0\n5.0\n0.000153\n0.000193\n0.000224\n0.256410\n0.259259\n0.307692\n\n\n1936\n38900.234308\n38900.234308\n38900.234308\n0.999982\n0.999982\n0.999982\n0.000000\n0.000000\n0.000000\n38900.234308\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n1937 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Sevelen/convexity.svg')"
  },
  {
    "objectID": "analysis/sevelen.html#clustering",
    "href": "analysis/sevelen.html#clustering",
    "title": "maxvogt-analysis: Sevelen",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n-0.313363\n-0.305170\n0.164976\n0.874130\n0.708452\n0.762254\n-0.848872\n-0.828894\n-0.473819\n0.142860\n...\n-1.853245\n-1.107793\n-0.491929\n-0.379262\n-0.899344\n-1.117493\n-1.166251\n-0.663670\n-0.511352\n-0.581046\n\n\n1\n-0.381275\n-0.373471\n-0.182550\n0.562358\n-0.259139\n0.491140\n-0.892815\n-0.611864\n0.151843\n-0.278620\n...\n-1.789930\n-1.107793\n-0.491929\n-0.039979\n-0.899344\n-1.065789\n-1.140509\n-0.663670\n-0.511352\n-0.581046\n\n\n2\n7.179786\n5.528219\n4.134818\n2.927261\n2.463334\n2.063840\n-1.753444\n-2.008619\n-2.227254\n1.092976\n...\n-1.261055\n0.398763\n-0.491929\n-1.057828\n-1.173863\n-1.356929\n-1.475119\n-1.933294\n-2.073528\n-2.116210\n\n\n3\n6.739553\n5.174030\n3.850577\n2.927261\n2.463334\n2.063840\n-1.753444\n-2.008619\n-2.227254\n0.974622\n...\n-0.803236\n-1.107793\n-2.393045\n-3.093527\n-1.305373\n-1.471632\n-1.578455\n-1.933294\n-2.073528\n-2.116210\n\n\n4\n1.857198\n1.248989\n1.323476\n0.987146\n2.044957\n1.459286\n-1.479712\n-1.726759\n-1.976652\n1.490623\n...\n-1.597624\n0.398763\n-0.491929\n-1.057828\n-1.155962\n-1.341316\n-1.461054\n2.510391\n2.222457\n1.721699\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1932\n-0.370938\n-0.410901\n-0.320070\n-0.311991\n-0.011753\n-0.234958\n-0.475481\n-0.013062\n0.166538\n-0.444361\n...\n2.236402\n-1.107793\n0.141776\n-0.379262\n-0.134317\n-0.136845\n-0.279404\n-0.786537\n-0.930825\n-1.033723\n\n\n1933\n-0.451625\n-0.534576\n-0.550351\n-0.461580\n-0.134052\n-0.496518\n-0.345065\n0.492242\n0.952951\n-0.669192\n...\n2.277762\n-1.107793\n0.141776\n-0.379262\n-0.097519\n-0.029685\n-0.084401\n-0.786537\n-0.861840\n-1.033723\n\n\n1934\n-0.469364\n-0.564352\n-0.622784\n-0.712945\n-0.305687\n-0.441170\n0.518863\n0.821771\n1.032816\n-0.722967\n...\n2.285157\n-1.107793\n0.141776\n-0.379262\n0.016971\n-0.029685\n-0.063387\n-0.786537\n-0.861840\n-0.979052\n\n\n1935\n-0.344193\n-0.410901\n-0.231627\n-0.645873\n-0.830616\n-0.258061\n-0.632928\n-0.209299\n-0.094832\n-0.292113\n...\n2.251361\n-1.107793\n0.141776\n-0.379262\n-0.171115\n-0.223912\n-0.279404\n-0.793888\n-0.959754\n-0.935315\n\n\n1936\n7.059934\n5.431792\n4.057435\n2.926392\n2.462110\n2.062048\n-1.753444\n-2.008619\n-2.227254\n1.060755\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n1937 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.028 seconds.\nK=3 fitted in 0.039 seconds.\nK=4 fitted in 0.034 seconds.\nK=5 fitted in 0.043 seconds.\nK=6 fitted in 0.040 seconds.\nK=7 fitted in 0.043 seconds.\nK=8 fitted in 0.092 seconds.\nK=9 fitted in 0.057 seconds.\nK=10 fitted in 0.049 seconds.\nK=11 fitted in 0.057 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n0\n2\n0\n3\n4\n3\n5\n1\n7\n2\n\n\n1\n0\n0\n2\n0\n3\n4\n3\n5\n1\n7\n2\n\n\n2\n0\n1\n0\n1\n2\n2\n6\n6\n5\n3\n7\n\n\n3\n0\n1\n0\n1\n2\n2\n6\n6\n5\n3\n7\n\n\n4\n0\n1\n0\n1\n2\n2\n6\n6\n5\n3\n7\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/sevelen.html#export",
    "href": "analysis/sevelen.html#export",
    "title": "maxvogt-analysis: Sevelen",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Sevelen.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/sevelen.html#utilities",
    "href": "analysis/sevelen.html#utilities",
    "title": "maxvogt-analysis: Sevelen",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "analysis/wil.html",
    "href": "analysis/wil.html",
    "title": "maxvogt-analysis: Wil SG",
    "section": "",
    "text": "The code in this notebook is based on Martin Fleischmann’s 2021 workshop Capturing the Structure of Cities with Data Science (SDSC), licensed under the CC BY-SA 4.0 license. © 2021 Martin Fleischmann.\nThe geodata in this notebook is retrieved from OpenStreetMap. © OpenStreetMap Contributors.\nThis notebook contains geodata and analyses for the following items of the Max Vogt collection by Moritz Twente and Luisa Omonsky: - WIL008\nOpen in an interactive in-browser environment:\nimport warnings\n\nimport geopandas\nimport libpysal\nimport momepy\nimport osmnx\nimport pandas\n\nfrom clustergram import Clustergram\n\nimport matplotlib.pyplot as plt\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import show\nPick a place, ideally a town with a good coverage in OpenStreetMap and its local CRS.\nplace = 'Wil SG, Switzerland'\nlocal_crs = 'EPSG:2056'\ngeopandas.tools.geocode(place).explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/wil.html#input-data",
    "href": "analysis/wil.html#input-data",
    "title": "maxvogt-analysis: Wil SG",
    "section": "Input data",
    "text": "Input data\nDownload data from OpenStreetMap.\n\nBuildings\n\nbuildings = osmnx.features.features_from_place(place, tags={'building':True})\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n\n\n\nbuildings\n\n\n\n\n\n\n\n\n\naccess\naddr:city\naddr:housenumber\naddr:postcode\naddr:street\namenity\ncapacity\nfee\nlayer\nmaxheight\n...\nbuilding:min_level\nbench\nbin\ninternet_access\nanimal\nmaterial\noperator:website\nways\ntype\ngrades\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n6411238896\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n7503923765\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n8250178261\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nway\n35536392\nNaN\nWil SG\n2\n9500\nPestalozzistrasse\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n38501949\nNaN\nWil SG\n2\n9500\nSilostrasse\ncommunity_centre\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nrelation\n7093154\nNaN\nNaN\n55\nNaN\nWilenstrasse\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[327682860, 327682924]\nmultipolygon\nNaN\n\n\n7093156\nNaN\nWil SG\n50\n9500\nWilenstrasse\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[327682788, 327682839]\nmultipolygon\nNaN\n\n\n7093157\nNaN\nWil SG\n54\n9500\nWilenstrasse\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[327682852, 327682735]\nmultipolygon\nNaN\n\n\n7738754\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[221260821, 221260827]\nmultipolygon\n9-12\n\n\n9217834\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n[398357405, 581466821]\nmultipolygon\nNaN\n\n\n\n\n4616 rows × 157 columns\n\n\n\n\nbuildings.geom_type.value_counts()\n\nPolygon         4610\nPoint              3\nMultiPolygon       3\nName: count, dtype: int64\n\n\n\nbuildings = buildings[buildings.geom_type == \"Polygon\"].reset_index(drop=True)\n\n\nbuildings = buildings[[\"geometry\"]].to_crs(local_crs)\n\n\nbuildings[\"uID\"] = range(len(buildings))\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\n\n\n\n\n0\nPOLYGON ((2720868.224 1258289.437, 2720866.731...\n0\n\n\n1\nPOLYGON ((2720427.631 1258028.395, 2720430.877...\n1\n\n\n2\nPOLYGON ((2719835.444 1257857.405, 2719930.703...\n2\n\n\n3\nPOLYGON ((2720063.781 1257950.769, 2720025.333...\n3\n\n\n4\nPOLYGON ((2719864.697 1257696.747, 2719841.658...\n4\n\n\n...\n...\n...\n\n\n4605\nPOLYGON ((2722197.128 1258406.804, 2722206.030...\n4605\n\n\n4606\nPOLYGON ((2721542.379 1258424.249, 2721543.256...\n4606\n\n\n4607\nPOLYGON ((2721818.424 1258768.894, 2721816.628...\n4607\n\n\n4608\nPOLYGON ((2720255.473 1257831.957, 2720286.893...\n4608\n\n\n4609\nPOLYGON ((2720589.845 1257677.780, 2720581.633...\n4609\n\n\n\n\n4610 rows × 2 columns\n\n\n\n\n\nStreets\nIn comparison to Martin Fleischmann’s workshop, I here set truncate_by_edge to be True. Depending on the OSM mapping quality of the place at hand, it might also be necessary to change the value of network_type. See geopandas documentation for options.\n\nosm_graph = osmnx.graph_from_place(place, network_type='bike', truncate_by_edge=True)\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/predicates.py:798: RuntimeWarning: invalid value encountered in intersects\n  return lib.intersects(a, b, **kwargs)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:340: RuntimeWarning: invalid value encountered in union\n  return lib.union(a, b, **kwargs)\n\n\n\nosm_graph = osmnx.projection.project_graph(osm_graph, to_crs=local_crs)\n\n\nstreets = osmnx.graph_to_gdfs(\n    osm_graph, \n    nodes=False, \n    edges=True,\n    node_geometry=False, \n    fill_edge_geometry=True\n)\n\n\nstreets.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nstreets\n\n\n\n\n\n\n\n\n\n\nosmid\nlanes\nref\nname\nhighway\nmaxspeed\noneway\nreversed\nlength\ngeometry\nbridge\nservice\njunction\naccess\nwidth\ntunnel\nest_width\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n27942248\n27942262\n0\n4484704\n2\n16\nHauptstrasse\nprimary\n80\nFalse\nFalse\n218.097\nLINESTRING (2719926.856 1261119.172, 2719937.1...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3441585825\n0\n337061286\nNaN\nNaN\nNaN\ntrack\nNaN\nFalse\nFalse\n225.467\nLINESTRING (2719926.856 1261119.172, 2719923.8...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n27942262\n9819957444\n0\n[4484704, 1069941129]\n2\n16\nHauptstrasse\nprimary\n[50, 80]\nFalse\nFalse\n361.056\nLINESTRING (2720016.357 1260928.853, 2720018.1...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n27942248\n0\n4484704\n2\n16\nHauptstrasse\nprimary\n80\nFalse\nTrue\n218.097\nLINESTRING (2720016.357 1260928.853, 2720012.5...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n529839769\n0\n[42439096, 54035694]\nNaN\nNaN\nDornäckerweg\n[residential, track]\nNaN\nFalse\n[False, True]\n493.298\nLINESTRING (2720016.357 1260928.853, 2720026.4...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12176789609\n12176789608\n0\n1315522692\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nTrue\n8.057\nLINESTRING (2720685.166 1257775.986, 2720684.5...\nNaN\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n12176789618\n12176789619\n0\n1315522696\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nFalse\n6.793\nLINESTRING (2720631.057 1257772.758, 2720631.4...\nNaN\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2303069066\n0\n35094575\nNaN\nNaN\nBergholzstrasse\nresidential\n30\nTrue\nFalse\n59.697\nLINESTRING (2720631.057 1257772.758, 2720621.5...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n12176789619\n12176789618\n0\n1315522696\nNaN\nNaN\nNaN\nservice\nNaN\nFalse\nTrue\n6.793\nLINESTRING (2720631.462 1257779.539, 2720631.0...\nNaN\ndriveway\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n12183026589\n12183026589\n0\n1316256617\nNaN\nNaN\nNaN\nservice\nNaN\nTrue\nFalse\n75.823\nLINESTRING (2722055.653 1257939.018, 2722041.7...\nNaN\nparking_aisle\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n6329 rows × 17 columns\n\n\n\n\nstreets = momepy.remove_false_nodes(streets)\nstreets = streets[[\"geometry\"]]\nstreets[\"nID\"] = range(len(streets))\n\n\nstreets\n\n\n\n\n\n\n\n\ngeometry\nnID\n\n\n\n\n0\nLINESTRING (2719926.856 1261119.172, 2719937.1...\n0\n\n\n1\nLINESTRING (2720016.357 1260928.853, 2720018.1...\n1\n\n\n2\nLINESTRING (2720016.357 1260928.853, 2720012.5...\n2\n\n\n3\nLINESTRING (2720016.357 1260928.853, 2720026.4...\n3\n\n\n4\nLINESTRING (2720038.238 1260571.059, 2720034.7...\n4\n\n\n...\n...\n...\n\n\n5543\nLINESTRING (2724660.089 1260558.197, 2724642.1...\n5543\n\n\n5544\nLINESTRING (2724407.577 1259715.351, 2724413.2...\n5544\n\n\n5545\nLINESTRING (2724875.507 1260185.316, 2724870.1...\n5545\n\n\n5546\nLINESTRING (2724826.100 1260317.881, 2724829.9...\n5546\n\n\n5547\nLINESTRING (2725157.112 1260176.736, 2725144.5...\n5547\n\n\n\n\n5548 rows × 2 columns"
  },
  {
    "objectID": "analysis/wil.html#generated-data",
    "href": "analysis/wil.html#generated-data",
    "title": "maxvogt-analysis: Wil SG",
    "section": "Generated data",
    "text": "Generated data\n\nTessellation\nWe can generate a spatail unit using Voronoi tessellation with given building footprints.\n\nlimit = momepy.buffered_limit(buildings, 100)\n\ntessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\ntessellation = tessellation.tessellation\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:426: RuntimeWarning: invalid value encountered in unary_union\n  return lib.unary_union(collections, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/1328706492.py:3: FutureWarning: Class based API like `momepy.Tessellation` is deprecated. Replace it with `momepy.morphological_tessellation` or `momepy.enclosed_tessellation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/constructive.py:181: RuntimeWarning: invalid value encountered in buffer\n  return lib.buffer(\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/1328706492.py:3: UserWarning: Tessellation contains MultiPolygon elements. Initial objects should  be edited. `unique_id` of affected elements: [3651, 4608, 4431, 930, 953, 950].\n  tessellation = momepy.Tessellation(buildings, \"uID\", limit, verbose=False, segment=1)\n\n\n\n\nLink streets\nLink unique IDs of streets to buildings and tessellation cells based on the nearest neighbor join.\n\nbuildings = buildings.sjoin_nearest(streets, max_distance=1000, how=\"left\")\n\n\nbuildings\n\n\n\n\n\n\n\n\ngeometry\nuID\nindex_right\nnID\n\n\n\n\n0\nPOLYGON ((2720868.224 1258289.437, 2720866.731...\n0\n1067\n1067\n\n\n0\nPOLYGON ((2720868.224 1258289.437, 2720866.731...\n0\n110\n110\n\n\n1\nPOLYGON ((2720427.631 1258028.395, 2720430.877...\n1\n1858\n1858\n\n\n1\nPOLYGON ((2720427.631 1258028.395, 2720430.877...\n1\n1853\n1853\n\n\n2\nPOLYGON ((2719835.444 1257857.405, 2719930.703...\n2\n4658\n4658\n\n\n...\n...\n...\n...\n...\n\n\n4606\nPOLYGON ((2721542.379 1258424.249, 2721543.256...\n4606\n5273\n5273\n\n\n4607\nPOLYGON ((2721818.424 1258768.894, 2721816.628...\n4607\n5346\n5346\n\n\n4608\nPOLYGON ((2720255.473 1257831.957, 2720286.893...\n4608\n4247\n4247\n\n\n4608\nPOLYGON ((2720255.473 1257831.957, 2720286.893...\n4608\n2176\n2176\n\n\n4609\nPOLYGON ((2720589.845 1257677.780, 2720581.633...\n4609\n2006\n2006\n\n\n\n\n6550 rows × 4 columns\n\n\n\n\nbuildings = buildings.drop_duplicates(\"uID\").drop(columns=\"index_right\")\n\n\ntessellation = tessellation.merge(buildings[['uID', 'nID']], on='uID', how='left')"
  },
  {
    "objectID": "analysis/wil.html#measure",
    "href": "analysis/wil.html#measure",
    "title": "maxvogt-analysis: Wil SG",
    "section": "Measure",
    "text": "Measure\nMeasure individual morphometric characters.\n\nDimensions\n\nbuildings[\"area\"] = buildings.area\ntessellation[\"area\"] = tessellation.area\nstreets[\"length\"] = streets.length\n\n\n\nShape\n\nbuildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/1902756608.py:1: FutureWarning: Class based API like `momepy.EquivalentRectangularIndex` is deprecated. Replace it with `momepy.equivalent_rectangular_index` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['eri'] = momepy.EquivalentRectangularIndex(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nbuildings['elongation'] = momepy.Elongation(buildings).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/3723954296.py:1: FutureWarning: Class based API like `momepy.Elongation` is deprecated. Replace it with `momepy.elongation` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['elongation'] = momepy.Elongation(buildings).series\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in oriented_envelope\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\ntessellation['convexity'] = momepy.Convexity(tessellation).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/2335586521.py:1: FutureWarning: Class based API like `momepy.Convexity` is deprecated. Replace it with `momepy.convexity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation['convexity'] = momepy.Convexity(tessellation).series\n\n\n\nstreets[\"linearity\"] = momepy.Linearity(streets).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/3802614628.py:1: FutureWarning: Class based API like `momepy.Linearity` is deprecated. Replace it with `momepy.linearity` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  streets[\"linearity\"] = momepy.Linearity(streets).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"eri\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nbuildings.plot(\"elongation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Building Equivalent\\nRectangular Index', fontsize=20)\nax[1].set_title('Building Elongation', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wil/eri_and_elongation.svg')  \n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"linearity\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Linearity', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wil/convexity_and_linearity.svg')  \n\n\n\n\n\n\n\n\n\n\nSpatial distribution\n\nbuildings[\"shared_walls\"] = momepy.SharedWallsRatio(buildings).series\n\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/momepy/distribution.py:214: FutureWarning: Class based API like `momepy.SharedWalls` or `momepy.SharedWallsRatio` is deprecated. Replace it with `momepy.shared_walls` or explicitly computing `momepy.shared_walls / gdf.length` respectively to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  super().__init__(gdf)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n  return lib.intersection(a, b, **kwargs)\n\n\n\nbuildings.plot(\"shared_walls\", figsize=(12, 12), scheme=\"natural_breaks\", legend=True).set_axis_off()\n\nplt.savefig('../results/Wil/sharedwalls.svg')  \n\n\n\n\n\n\n\n\nGenerate spatial weights matrix using libpysal.\n\nqueen_1 = libpysal.weights.contiguity.Queen.from_dataframe(tessellation, ids=\"uID\", silence_warnings=True)\n\n\ntessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\ntessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    buildings[\"neighbor_distance\"] = momepy.NeighborDistance(buildings, queen_1, \"uID\", verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/1669107924.py:1: FutureWarning: Class based API like `momepy.Neighbors` is deprecated. Replace it with `momepy.neighbors` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  tessellation[\"neighbors\"] = momepy.Neighbors(tessellation, queen_1, \"uID\", weighted=True, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/1669107924.py:2: FutureWarning: `momepy.CoveredArea` is deprecated. Replace it with `.describe()` method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation[\"covered_area\"] = momepy.CoveredArea(tessellation, queen_1, \"uID\", verbose=False).series\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\nbuildings.plot(\"neighbor_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\ntessellation.plot(\"covered_area\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Neighbour Distance', fontsize=20)\nax[1].set_title('Covered Area', fontsize=20)\n\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wil/neighbourdist_and_coveredarea.svg')  \n\n\n\n\n\n\n\n\n\nqueen_3 = momepy.sw_high(k=3, weights=queen_1)\nbuildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n\nbuildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\nbuildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/3221532125.py:1: FutureWarning: `momepy.sw_high` is deprecated. Replace it with .higher_order() method of libpysal.graph.Graph or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  queen_3 = momepy.sw_high(k=3, weights=queen_1)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/3221532125.py:2: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  buildings_q1 = libpysal.weights.contiguity.Queen.from_dataframe(buildings, silence_warnings=True)\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/3221532125.py:4: FutureWarning: Class based API like `momepy.MeanInterbuildingDistance` is deprecated. Replace it with `momepy.mean_interbuilding_distance` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['interbuilding_distance'] = momepy.MeanInterbuildingDistance(buildings, queen_1, 'uID', queen_3, verbose=False).series\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/3221532125.py:5: FutureWarning: Class based API like `momepy.BuildingAdjacency` is deprecated. Replace it with `momepy.building_adjacency` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings['adjacency'] = momepy.BuildingAdjacency(buildings, queen_3, 'uID', buildings_q1, verbose=False).series\n\n\n\n#fig, ax = plt.subplots(1, 2, figsize=(24, 12))\n#\n#buildings.plot(\"interbuilding_distance\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\n#buildings.plot(\"adjacency\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\n#\n#ax[0].set_axis_off()\n#ax[1].set_axis_off()\n\n\nprofile = momepy.StreetProfile(streets, buildings)\nstreets[\"width\"] = profile.w\nstreets[\"width_deviation\"] = profile.wd\nstreets[\"openness\"] = profile.o\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/2648127835.py:1: FutureWarning: Class based API like `momepy.StreetProfile` is deprecated. Replace it with `momepy.street_profile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  profile = momepy.StreetProfile(streets, buildings)\n/Users/mtwente/anaconda3/envs/maxvogt/lib/python3.11/site-packages/pandas/core/arraylike.py:492: RuntimeWarning: invalid value encountered in intersection\n  return getattr(ufunc, method)(*new_inputs, **kwargs)\n\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nstreets.plot(\"width\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"width_deviation\", ax=ax[1], scheme=\"natural_breaks\", legend=True)\nstreets.plot(\"openness\", ax=ax[2], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Width', fontsize=20)\nax[1].set_title('Width Deviation', fontsize=20)\nax[2].set_title('Openness', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Wil/road_network.svg')  \n\n\n\n\n\n\n\n\n\n\nIntensity\n\ntessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/1819725789.py:1: FutureWarning: `momepy.AreaRatio` is deprecated. Replace it with a direct division of areas or momepy.describe_agg() or pin momepy version &lt;1.0. This class will be removed in 1.0. \n  tessellation['car'] = momepy.AreaRatio(tessellation, buildings, 'area', 'area', 'uID').series\n\n\n\ntessellation.plot(\"car\", figsize=(12, 12), vmin=0, vmax=1, legend=True).set_axis_off()\nplt.title(\"Building/Tessellation Area Ratio\")\n\nplt.savefig('../results/Wil/tessellation_ratio.svg')  \n\n\n\n\n\n\n\n\n\n\nConnectivity\n\ngraph = momepy.gdf_to_nx(streets)\n\n\ngraph = momepy.node_degree(graph)\ngraph = momepy.closeness_centrality(graph, radius=400, distance=\"mm_len\")\ngraph = momepy.meshedness(graph, radius=400, distance=\"mm_len\")\n\n\n\n\n\n\n\n\nnodes, streets = momepy.nx_to_gdf(graph)\n\n\nfig, ax = plt.subplots(1, 3, figsize=(24, 12))\n\nnodes.plot(\"degree\", ax=ax[0], scheme=\"natural_breaks\", legend=True, markersize=1)\nnodes.plot(\"closeness\", ax=ax[1], scheme=\"natural_breaks\", legend=True, markersize=1, legend_kwds={\"fmt\": \"{:.6f}\"})\nnodes.plot(\"meshedness\", ax=ax[2], scheme=\"natural_breaks\", legend=True, markersize=1)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\nax[2].set_axis_off()\n\nplt.savefig('../results/Wil/connectivity.svg')  \n\n\n\n\n\n\n\n\n\nbuildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/403706460.py:1: FutureWarning: Class based API like `momepy.get_node_id` is deprecated. Replace it with `momepy.get_nearest_node` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  buildings[\"nodeID\"] = momepy.get_node_id(buildings, nodes, streets, \"nodeID\", \"nID\")\n\n\n\n\n\nLink all data together (to tessellation cells or buildings).\n\ntessellation\n\n\n\n\n\n\n\n\nuID\ngeometry\nnID\narea\nconvexity\nneighbors\ncovered_area\ncar\n\n\n\n\n0\n277\nPOLYGON ((2722437.699 1256336.134, 2722447.794...\n5460\n10906.277924\n0.993038\n0.007361\n28390.245097\n0.003546\n\n\n1\n287\nPOLYGON ((2722078.283 1256596.338, 2722078.979...\n2337\n16430.353520\n0.961048\n0.009949\n31284.675668\n0.014613\n\n\n2\n3989\nPOLYGON ((2721649.024 1256947.489, 2721649.956...\n2761\n5592.215702\n0.978679\n0.009218\n13382.341425\n0.006240\n\n\n3\n1579\nPOLYGON ((2721435.772 1257055.002, 2721435.401...\n3957\n9446.056928\n0.951339\n0.014343\n79598.639618\n0.050403\n\n\n4\n1658\nPOLYGON ((2721446.800 1257211.374, 2721446.220...\n5259\n5234.010551\n0.829462\n0.015694\n47121.278112\n0.241007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4605\n1072\nPOLYGON ((2719938.713 1261166.860, 2719942.129...\n2\n16373.405462\n0.986677\n0.004000\n48327.937442\n0.008280\n\n\n4606\n3536\nPOLYGON ((2718245.375 1260471.040, 2718240.994...\n4765\n18350.987872\n0.980604\n0.009456\n50119.719406\n0.024617\n\n\n4607\n1074\nPOLYGON ((2719991.328 1261068.761, 2719991.594...\n2\n15187.949214\n0.703458\n0.003243\n48327.937442\n0.034843\n\n\n4608\n3643\nPOLYGON ((2718493.976 1260790.816, 2718503.770...\n4775\n34489.304964\n1.000000\n0.000000\n34489.304964\n0.001702\n\n\n4609\n4447\nPOLYGON ((2720792.409 1261526.131, 2720729.391...\n2872\n18661.506905\n0.990791\n0.005707\n59120.443782\n0.012778\n\n\n\n\n4610 rows × 8 columns\n\n\n\n\nmerged = tessellation.merge(buildings.drop(columns=['nID', 'geometry']), on='uID')\nmerged = merged.merge(streets.drop(columns='geometry'), on='nID', how='left')\nmerged = merged.merge(nodes.drop(columns='geometry'), on='nodeID', how='left')\n\n\nmerged.columns\n\nIndex(['uID', 'geometry', 'nID', 'area_x', 'convexity', 'neighbors',\n       'covered_area', 'car', 'area_y', 'eri', 'elongation', 'shared_walls',\n       'neighbor_distance', 'interbuilding_distance', 'adjacency', 'nodeID',\n       'length', 'linearity', 'width', 'width_deviation', 'openness', 'mm_len',\n       'node_start', 'node_end', 'x', 'y', 'degree', 'closeness',\n       'meshedness'],\n      dtype='object')"
  },
  {
    "objectID": "analysis/wil.html#understanding-the-context",
    "href": "analysis/wil.html#understanding-the-context",
    "title": "maxvogt-analysis: Wil SG",
    "section": "Understanding the context",
    "text": "Understanding the context\nMeasure first, second and third quartile of distribution of values within an area around each building.\n\npercentiles = []\nfor column in merged.columns.drop([\"uID\", \"nodeID\", \"nID\", 'mm_len', 'node_start', 'node_end', \"geometry\"]):\n    perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n    perc.columns = [f\"{column}_\" + str(x) for x in perc.columns]\n    percentiles.append(perc)\n\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n/var/folders/vs/1r1r5k5x12v5dj0w9z79tj3c0000gn/T/ipykernel_37270/962013058.py:3: FutureWarning: Class based API like `momepy.Percentiles` is deprecated. Replace it with `momepy.percentile` to use functional API instead or pin momepy version &lt;1.0. Class-based API will be removed in 1.0. \n  perc = momepy.Percentiles(merged, column, queen_3, \"uID\", verbose=False).frame\n\n\n\npercentiles_joined = pandas.concat(percentiles, axis=1)\n\n\npercentiles_joined\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n5035.910966\n9289.799207\n10683.751534\n0.917265\n0.976080\n0.988445\n0.006297\n0.007464\n0.012149\n27209.862068\n...\n1.256396e+06\n6.0\n6.0\n6.0\n0.000033\n0.000036\n0.000037\n0.527864\n0.529412\n0.529412\n\n\n1\n1360.837004\n3351.597993\n7784.537383\n0.919934\n0.949568\n0.978745\n0.012087\n0.019701\n0.026994\n25158.490547\n...\n1.256692e+06\n5.0\n5.0\n6.0\n0.000036\n0.000037\n0.000047\n0.709677\n0.742857\n0.783784\n\n\n2\n229.492865\n545.393694\n4234.339792\n0.918743\n0.959249\n0.981915\n0.016595\n0.043908\n0.076710\n5664.153577\n...\n1.256989e+06\n1.0\n4.0\n4.0\n0.000098\n0.000117\n0.000117\n0.487179\n0.504132\n0.504132\n\n\n3\n2035.328173\n3365.440785\n8623.628349\n0.915562\n0.941315\n0.971990\n0.013346\n0.017678\n0.031967\n23159.794649\n...\n1.257344e+06\n2.0\n4.5\n6.0\n0.000076\n0.000101\n0.000117\n0.476821\n0.491817\n0.503817\n\n\n4\n2035.349260\n3129.482084\n8057.860879\n0.910954\n0.948853\n0.971990\n0.014206\n0.025488\n0.032549\n19756.923441\n...\n1.257386e+06\n1.0\n4.0\n6.0\n0.000064\n0.000085\n0.000108\n0.423032\n0.483660\n0.500107\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4605\n15780.677338\n16373.405462\n16569.994114\n0.845067\n0.986677\n0.993037\n0.003598\n0.003952\n0.003976\n48327.937442\n...\n1.261119e+06\n3.0\n3.0\n3.0\n0.000003\n0.000003\n0.000003\n1.000000\n1.000000\n1.000000\n\n\n4606\n4671.256479\n7395.393482\n15939.066661\n0.944006\n0.979563\n0.994957\n0.008497\n0.010854\n0.017931\n39422.035647\n...\n1.260368e+06\n1.0\n2.5\n4.5\n0.000047\n0.000049\n0.000053\n0.351351\n0.351351\n0.358974\n\n\n4607\n15780.677338\n16373.405462\n16569.994114\n0.845067\n0.986677\n0.993037\n0.003598\n0.003952\n0.003976\n48327.937442\n...\n1.261119e+06\n3.0\n3.0\n3.0\n0.000003\n0.000003\n0.000003\n1.000000\n1.000000\n1.000000\n\n\n4608\n34489.304964\n34489.304964\n34489.304964\n1.000000\n1.000000\n1.000000\n0.000000\n0.000000\n0.000000\n34489.304964\n...\n1.260697e+06\n1.0\n1.0\n1.0\n0.000002\n0.000002\n0.000002\n1.000000\n1.000000\n1.000000\n\n\n4609\n12034.682320\n12723.012686\n19607.034233\n0.982318\n0.990791\n0.991943\n0.006526\n0.009088\n0.010634\n59120.443782\n...\n1.261538e+06\n5.0\n6.0\n6.0\n0.000007\n0.000007\n0.000007\n0.777778\n0.857143\n0.857143\n\n\n\n\n4610 rows × 66 columns\n\n\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24, 12))\n\ntessellation.plot(\"convexity\", ax=ax[0], scheme=\"natural_breaks\", legend=True)\nmerged.plot(percentiles_joined['convexity_50'].values, ax=ax[1], scheme=\"natural_breaks\", legend=True)\n\nax[0].set_title('Convexity', fontsize=20)\nax[1].set_title('Convexity_50', fontsize=20)\n\nax[0].set_axis_off()\nax[1].set_axis_off()\n\nplt.savefig('../results/Wil/convexity.svg')"
  },
  {
    "objectID": "analysis/wil.html#clustering",
    "href": "analysis/wil.html#clustering",
    "title": "maxvogt-analysis: Wil SG",
    "section": "Clustering",
    "text": "Clustering\nStandardize values before clustering.\n\nstandardized = (percentiles_joined - percentiles_joined.mean()) / percentiles_joined.std()\n\n\nstandardized\n\n\n\n\n\n\n\n\narea_x_25\narea_x_50\narea_x_75\nconvexity_25\nconvexity_50\nconvexity_75\nneighbors_25\nneighbors_50\nneighbors_75\ncovered_area_25\n...\ny_75\ndegree_25\ndegree_50\ndegree_75\ncloseness_25\ncloseness_50\ncloseness_75\nmeshedness_25\nmeshedness_50\nmeshedness_75\n\n\n\n\n0\n1.854456\n2.711973\n1.875506\n-0.326341\n1.884497\n1.958257\n-2.164043\n-2.646616\n-2.684072\n1.930430\n...\n-2.749114\n1.460624\n0.792119\n0.169849\n-0.657605\n-0.805611\n-0.952475\n0.712218\n0.405159\n0.069775\n\n\n1\n0.123622\n0.563886\n1.149435\n-0.197116\n-0.524890\n0.602628\n-1.671195\n-1.676344\n-1.646200\n1.703899\n...\n-2.424764\n0.947030\n-0.049861\n0.169849\n-0.595577\n-0.787752\n-0.800668\n2.211033\n2.168881\n1.951438\n\n\n2\n-0.409202\n-0.451231\n0.260335\n-0.254789\n0.354868\n1.045638\n-1.287382\n0.242929\n1.829578\n-0.448848\n...\n-2.100580\n-1.107347\n-0.891842\n-2.076933\n0.486204\n0.461082\n0.182734\n0.376829\n0.196272\n-0.117225\n\n\n3\n0.441284\n0.568894\n1.359575\n-0.408800\n-1.274933\n-0.341387\n-1.564028\n-1.836759\n-1.298542\n1.483184\n...\n-1.713135\n-0.593753\n-0.470852\n0.169849\n0.111742\n0.210482\n0.176984\n0.291438\n0.094507\n-0.119558\n\n\n4\n0.441294\n0.483538\n1.217886\n-0.631908\n-0.589902\n-0.341387\n-1.490817\n-1.217524\n-1.257886\n1.107407\n...\n-1.667207\n-1.107347\n-0.891842\n0.169849\n-0.104701\n-0.037285\n0.048219\n-0.151980\n0.027109\n-0.147003\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4605\n6.914872\n5.274398\n3.349638\n-3.821713\n2.847532\n2.599964\n-2.393856\n-2.925045\n-3.255516\n4.262485\n...\n2.411234\n-0.080159\n-1.733823\n-3.200324\n-1.176190\n-1.315198\n-1.421373\n4.604363\n4.293680\n3.550852\n\n\n4606\n1.682716\n2.026690\n3.191631\n0.968266\n2.201069\n2.868268\n-1.976815\n-2.377809\n-2.279886\n3.279013\n...\n1.590826\n-1.107347\n-2.154813\n-1.515238\n-0.410931\n-0.596126\n-0.727815\n-0.742896\n-1.066173\n-1.191000\n\n\n4607\n6.914872\n5.274398\n3.349638\n-3.821713\n2.847532\n2.599964\n-2.393856\n-2.925045\n-3.255516\n4.262485\n...\n2.411234\n-0.080159\n-1.733823\n-3.200324\n-1.176190\n-1.315198\n-1.421373\n4.604363\n4.293680\n3.550852\n\n\n4608\n15.725993\n11.827648\n7.837296\n3.679164\n4.058346\n3.573083\n-2.700101\n-3.238394\n-3.533481\n2.734294\n...\n1.949508\n-1.107347\n-3.417784\n-5.447106\n-1.193437\n-1.330452\n-1.435148\n4.604363\n4.293680\n3.550852\n\n\n4609\n5.150637\n3.953904\n4.110225\n2.823132\n3.221464\n2.447024\n-2.144571\n-2.517805\n-2.790021\n5.454295\n...\n2.868610\n0.947030\n0.792119\n0.169849\n-1.114860\n-1.260953\n-1.369488\n2.772431\n3.113236\n2.494096\n\n\n\n\n4610 rows × 66 columns\n\n\n\n\nHow many clusters?\n\ncgram = Clustergram(range(1, 12), n_init=10, random_state=0)\ncgram.fit(standardized.fillna(0))\n\nK=1 skipped. Mean computed from data directly.\nK=2 fitted in 0.060 seconds.\nK=3 fitted in 0.065 seconds.\nK=4 fitted in 0.064 seconds.\nK=5 fitted in 0.063 seconds.\nK=6 fitted in 0.066 seconds.\nK=7 fitted in 0.097 seconds.\nK=8 fitted in 0.150 seconds.\nK=9 fitted in 0.095 seconds.\nK=10 fitted in 0.106 seconds.\nK=11 fitted in 0.182 seconds.\n\n\nClustergram(k_range=range(1, 12), backend='sklearn', method='kmeans', kwargs={'n_init': 10, 'random_state': 0})\n\n\n\nshow(cgram.bokeh())\n\n\ncgram.labels.head()\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n0\n0\n0\n0\n2\n4\n1\n2\n0\n1\n8\n1\n\n\n1\n0\n0\n0\n2\n4\n1\n2\n3\n0\n8\n1\n\n\n2\n0\n1\n1\n1\n3\n5\n0\n1\n8\n9\n10\n\n\n3\n0\n0\n2\n3\n0\n0\n6\n0\n1\n6\n5\n\n\n4\n0\n0\n2\n3\n0\n0\n6\n0\n1\n6\n5\n\n\n\n\n\n\n\n\nmerged[\"cluster\"] = cgram.labels[8].values\n\n\nurban_types = buildings[[\"geometry\", \"uID\"]].merge(merged[[\"uID\", \"cluster\"]], on=\"uID\")\n\n\nurban_types.explore(\"cluster\", categorical=True, prefer_canvas=True, tiles=\"CartoDB Positron\", tooltip=False)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/wil.html#export",
    "href": "analysis/wil.html#export",
    "title": "maxvogt-analysis: Wil SG",
    "section": "Export",
    "text": "Export\nSave cluster output geodata to geojson file:\n\nurban_types.to_file('../data/raw/Wil.geojson', driver='GeoJSON')"
  },
  {
    "objectID": "analysis/wil.html#utilities",
    "href": "analysis/wil.html#utilities",
    "title": "maxvogt-analysis: Wil SG",
    "section": "Utilities",
    "text": "Utilities\nOnce you run the cell below, it hides all cells below the currently active one (aka presentation mode).\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: none;\n}\n&lt;/style&gt;\n\nRun this cell to turn the presentation mode off.\n\n%%html\n&lt;style&gt;\n.jp-Cell.jp-mod-selected ~ .jp-Cell {\n    display: block;\n}\n&lt;/style&gt;"
  },
  {
    "objectID": "LICENSE-ODbL.html",
    "href": "LICENSE-ODbL.html",
    "title": "Open Data Commons Open Database License (ODbL) v1.0",
    "section": "",
    "text": "Open Data Commons is not a law firm and does not provide legal services of any kind.\nOpen Data Commons has no formal relationship with you. Your receipt of this document does not create any kind of agent-client relationship. Please seek the advice of a suitably qualified legal professional licensed to practice in your jurisdiction before using this document.\nNo warranties and disclaimer of any damages. This information is provided ’as is‘, and this site makes no warranties on the information provided. Any damages resulting from its use are disclaimed.\nA plain language summary of the Open Database License is available as well as a plain text version.\n\n\n\n\n\nThe Open Database License (ODbL) is a license agreement intended to allow users to freely share, modify, and use this Database while maintaining this same freedom for others. Many databases are covered by copyright, and therefore this document licenses these rights. Some jurisdictions, mainly in the European Union, have specific rights that cover databases, and so the ODbL addresses these rights, too. Finally, the ODbL is also an agreement in contract for users of this Database to act in certain ways in return for accessing this Database.\nDatabases can contain a wide variety of types of content (images, audiovisual material, and sounds all in the same database, for example), and so the ODbL only governs the rights over the Database, and not the contents of the Database individually. Licensors should use the ODbL together with another license for the contents, if the contents have a single set of rights that uniformly covers all of the contents. If the contents have multiple sets of different rights, Licensors should describe what rights govern what contents together in the individual record or in some other way that clarifies what rights apply.\nSometimes the contents of a database, or the database itself, can be covered by other rights not addressed here (such as private contracts, trade mark over the name, or privacy rights / data protection rights over information in the contents), and so you are advised that you may have to consult other documents or clear other rights before doing activities not covered by this License.\nThe Licensor (as defined below)\nand\nYou (as defined below)\nagree as follows:\n\n\n\n“Collective Database” – Means this Database in unmodified form as part of a collection of independent databases in themselves that together are assembled into a collective whole. A work that constitutes a Collective Database will not be considered a Derivative Database.\n“Convey” – As a verb, means Using the Database, a Derivative Database, or the Database as part of a Collective Database in any way that enables a Person to make or receive copies of the Database or a Derivative Database. Conveying does not include interaction with a user through a computer network, or creating and Using a Produced Work, where no transfer of a copy of the Database or a Derivative Database occurs. “Contents” – The contents of this Database, which includes the information, independent works, or other material collected into the Database. For example, the contents of the Database could be factual data or works such as images, audiovisual material, text, or sounds.\n“Database” – A collection of material (the Contents) arranged in a systematic or methodical way and individually accessible by electronic or other means offered under the terms of this License.\n“Database Directive” – Means Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended or succeeded.\n“Database Right” – Means rights resulting from the Chapter III (“sui generis”) rights in the Database Directive (as amended and as transposed by member states), which includes the Extraction and Re-utilisation of the whole or a Substantial part of the Contents, as well as any similar rights available in the relevant jurisdiction under Section 10.4.\n“Derivative Database” – Means a database based upon the Database, and includes any translation, adaptation, arrangement, modification, or any other alteration of the Database or of a Substantial part of the Contents. This includes, but is not limited to, Extracting or Re-utilising the whole or a Substantial part of the Contents in a new Database.\n“Extraction” – Means the permanent or temporary transfer of all or a Substantial part of the Contents to another medium by any means or in any form.\n“License” – Means this license agreement and is both a license of rights such as copyright and Database Rights and an agreement in contract.\n“Licensor” – Means the Person that offers the Database under the terms of this License.\n“Person” – Means a natural or legal person or a body of persons corporate or incorporate.\n“Produced Work” – a work (such as an image, audiovisual material, text, or sounds) resulting from using the whole or a Substantial part of the Contents (via a search or other query) from this Database, a Derivative Database, or this Database as part of a Collective Database.\n“Publicly” – means to Persons other than You or under Your control by either more than 50% ownership or by the power to direct their activities (such as contracting with an independent consultant).\n“Re-utilisation” – means any form of making available to the public all or a Substantial part of the Contents by the distribution of copies, by renting, by online or other forms of transmission.\n“Substantial” – Means substantial in terms of quantity or quality or a combination of both. The repeated and systematic Extraction or Re-utilisation of insubstantial parts of the Contents may amount to the Extraction or Re-utilisation of a Substantial part of the Contents.\n“Use” – As a verb, means doing any act that is restricted by copyright or Database Rights whether in the original medium or any other; and includes without limitation distributing, copying, publicly performing, publicly displaying, and preparing derivative works of the Database, as well as modifying the Database as may be technically necessary to use it in a different mode or format.\n“You” – Means a Person exercising rights under this License who has not previously violated the terms of this License with respect to the Database, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation.\nWords in the singular include the plural and vice versa.\n\n\n\n2.1. Legal effect of this document. This License is:\n\nA license of applicable copyright and neighbouring rights;\nA license of the Database Right; and\nAn agreement in contract between You and the Licensor.\n\n2.2 Legal rights covered. This License covers the legal rights in the Database, including:\n\nCopyright. Any copyright or neighbouring rights in the Database. The copyright licensed includes any individual elements of the Database, but does not cover the copyright over the Contents independent of this Database. See Section 2.4 for details. Copyright law varies between jurisdictions, but is likely to cover: the Database model or schema, which is the structure, arrangement, and organisation of the Database, and can also include the Database tables and table indexes; the data entry and output sheets; and the Field names of Contents stored in the Database;\nDatabase Rights. Database Rights only extend to the Extraction and Re-utilisation of the whole or a Substantial part of the Contents. Database Rights can apply even when there is no copyright over the Database. Database Rights can also apply when the Contents are removed from the Database and are selected and arranged in a way that would not infringe any applicable copyright; and\nContract. This is an agreement between You and the Licensor for access to the Database. In return you agree to certain conditions of use on this access as outlined in this License.\n\n2.3 Rights not covered.\n\nThis License does not apply to computer programs used in the making or operation of the Database;\nThis License does not cover any patents over the Contents or the Database; and\nThis License does not cover any trademarks associated with the Database.\n\n2.4 Relationship to Contents in the Database. The individual items of the Contents contained in this Database may be covered by other rights, including copyright, patent, data protection, privacy, or personality rights, and this License does not cover any rights (other than Database Rights or in contract) in individual Contents contained in the Database. For example, if used on a Database of images (the Contents), this License would not apply to copyright over individual images, which could have their own separate licenses, or one single license covering all of the rights over the images.\n\n\n\n3.1 Subject to the terms and conditions of this License, the Licensor grants to You a worldwide, royalty-free, non-exclusive, terminable (but only under Section 9) license to Use the Database for the duration of any applicable copyright and Database Rights. These rights explicitly include commercial use, and do not exclude any field of endeavour. To the extent possible in the relevant jurisdiction, these rights may be exercised in all media and formats whether now known or created in the future.\nThe rights granted cover, for example:\n\nExtraction and Re-utilisation of the whole or a Substantial part of the Contents;\nCreation of Derivative Databases;\nCreation of Collective Databases;\nCreation of temporary or permanent reproductions by any means and in any form, in whole or in part, including of any Derivative Databases or as a part of Collective Databases; and\nDistribution, communication, display, lending, making available, or performance to the public by any means and in any form, in whole or in part, including of any Derivative Database or as a part of Collective Databases.\n\n3.2 Compulsory license schemes. For the avoidance of doubt:\n\nNon-waivable compulsory license schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License;\nWaivable compulsory license schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and,\nVoluntary license schemes. The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License.\n\n3.3 The right to release the Database under different terms, or to stop distributing or making available the Database, is reserved. Note that this Database may be multiple-licensed, and so You may have the choice of using alternative licenses for this Database. Subject to Section 10.4, all other rights not expressly granted by Licensor are reserved.\n\n\n\n4.1 The rights granted in Section 3 above are expressly made subject to Your complying with the following conditions of use. These are important conditions of this License, and if You fail to follow them, You will be in material breach of its terms.\n4.2 Notices. If You Publicly Convey this Database, any Derivative Database, or the Database as part of a Collective Database, then You must:\n\nDo so only under the terms of this License or another license permitted under Section 4.4;\nInclude a copy of this License (or, as applicable, a license permitted under Section 4.4) or its Uniform Resource Identifier (URI) with the Database or Derivative Database, including both in the Database or Derivative Database and in any relevant documentation; and\nKeep intact any copyright or Database Right notices and notices that refer to this License.\nIf it is not possible to put the required notices in a particular file due to its structure, then You must include the notices in a location (such as a relevant directory) where users would be likely to look for it.\n\n4.3 Notice for using output (Contents). Creating and Using a Produced Work does not require the notice in Section 4.2. However, if you Publicly Use a Produced Work, You must include a notice associated with the Produced Work reasonably calculated to make any Person that uses, views, accesses, interacts with, or is otherwise exposed to the Produced Work aware that Content was obtained from the Database, Derivative Database, or the Database as part of a Collective Database, and that it is available under this License.\n\nExample notice. The following text will satisfy notice under Section 4.3:\n\nContains information from DATABASE NAME, which is made available here under the Open Database License (ODbL). DATABASE NAME should be replaced with the name of the Database and a hyperlink to the URI of the Database. “Open Database License” should contain a hyperlink to the URI of the text of this License. If hyperlinks are not possible, You should include the plain text of the required URI’s with the above notice.\n4.4 Share alike.\n\nAny Derivative Database that You Publicly Use must be only under the terms of:\nThis License;\n\n\nA later version of this License similar in spirit to this License; or\nA compatible license.\n\nIf You license the Derivative Database under one of the licenses mentioned in (iii), You must comply with the terms of that license.\n\nFor the avoidance of doubt, Extraction or Re-utilisation of the whole or a Substantial part of the Contents into a new database is a Derivative Database and must comply with Section 4.4.\nDerivative Databases and Produced Works. A Derivative Database is Publicly Used and so must comply with Section 4.4. if a Produced Work created from the Derivative Database is Publicly Used.\nShare Alike and additional Contents. For the avoidance of doubt, You must not add Contents to Derivative Databases under Section 4.4 a that are incompatible with the rights granted under this License.\nCompatible licenses. Licensors may authorise a proxy to determine compatible licenses under Section 4.4 a iii. If they do so, the authorised proxy’s public statement of acceptance of a compatible license grants You permission to use the compatible license.\n\n4.5 Limits of Share Alike. The requirements of Section 4.4 do not apply in the following:\n\nFor the avoidance of doubt, You are not required to license Collective Databases under this License if You incorporate this Database or a Derivative Database in the collection, but this License still applies to this Database or a Derivative Database as a part of the Collective Database;\nUsing this Database, a Derivative Database, or this Database as part of a Collective Database to create a Produced Work does not create a Derivative Database for purposes of Section 4.4; and\nUse of a Derivative Database internally within an organisation is not to the public and therefore does not fall under the requirements of Section 4.4.\n\n4.6 Access to Derivative Databases. If You Publicly Use a Derivative Database or a Produced Work from a Derivative Database, You must also offer to recipients of the Derivative Database or Produced Work a copy in a machine readable form of:\n\nThe entire Derivative Database; or\nA file containing all of the alterations made to the Database or the method of making the alterations to the Database (such as an algorithm), including any additional Contents, that make up all the differences between the Database and the Derivative Database.\n\nThe Derivative Database (under a.) or alteration file (under b.) must be available at no more than a reasonable production cost for physical distributions and free of charge if distributed over the internet.\n4.7 Technological measures and additional terms\n\nThis License does not allow You to impose (except subject to Section 4.7 b.) any terms or any technological measures on the Database, a Derivative Database, or the whole or a Substantial part of the Contents that alter or restrict the terms of this License, or any rights granted under it, or have the effect or intent of restricting the ability of any person to exercise those rights.\nParallel distribution. You may impose terms or technological measures on the Database, a Derivative Database, or the whole or a Substantial part of the Contents (a “Restricted Database”) in contravention of Section 4.74 a. only if You also make a copy of the Database or a Derivative Database available to the recipient of the Restricted Database:\nThat is available without additional fee;\n\n\nThat is available in a medium that does not alter or restrict the terms of this License, or any rights granted under it, or have the effect or intent of restricting the ability of any person to exercise those rights (an “Unrestricted Database”); and\nThe Unrestricted Database is at least as accessible to the recipient as a practical matter as the Restricted Database.\nFor the avoidance of doubt, You may place this Database or a Derivative Database in an authenticated environment, behind a password, or within a similar access control scheme provided that You do not alter or restrict the terms of this License or any rights granted under it or have the effect or intent of restricting the ability of any person to exercise those rights.\n\n4.8 Licensing of others. You may not sublicense the Database. Each time You communicate the Database, the whole or Substantial part of the Contents, or any Derivative Database to anyone else in any way, the Licensor offers to the recipient a license to the Database on the same terms and conditions as this License. You are not responsible for enforcing compliance by third parties with this License, but You may enforce any rights that You have over a Derivative Database. You are solely responsible for any modifications of a Derivative Database made by You or another Person at Your direction. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.\n\n\n\n5.1 Moral rights. This section covers moral rights, including any rights to be identified as the author of the Database or to object to treatment that would otherwise prejudice the author’s honour and reputation, or any other derogatory treatment:\n\nFor jurisdictions allowing waiver of moral rights, Licensor waives all moral rights that Licensor may have in the Database to the fullest extent possible by the law of the relevant jurisdiction under Section 10.4;\nIf waiver of moral rights under Section 5.1 a in the relevant jurisdiction is not possible, Licensor agrees not to assert any moral rights over the Database and waives all claims in moral rights to the fullest extent possible by the law of the relevant jurisdiction under Section 10.4; and\nFor jurisdictions not allowing waiver or an agreement not to assert moral rights under Section 5.1 a and b, the author may retain their moral rights over certain aspects of the Database.\n\nPlease note that some jurisdictions do not allow for the waiver of moral rights, and so moral rights may still subsist over the Database in some jurisdictions.\n\n\n\n6.1 This License does not affect any rights that You or anyone else may independently have under any applicable law to make any use of this Database, including without limitation:\n\nExceptions to the Database Right including: Extraction of Contents from non-electronic Databases for private purposes, Extraction for purposes of illustration for teaching or scientific research, and Extraction or Re-utilisation for public security or an administrative or judicial procedure.\nFair dealing, fair use, or any other legally recognised limitation or exception to infringement of copyright or other applicable laws.\n\n6.2 This License does not affect any rights of lawful users to Extract and Re-utilise insubstantial parts of the Contents, evaluated quantitatively or qualitatively, for any purposes whatsoever, including creating a Derivative Database (subject to other rights over the Contents, see Section 2.4). The repeated and systematic Extraction or Re-utilisation of insubstantial parts of the Contents may however amount to the Extraction or Re-utilisation of a Substantial part of the Contents.\n\n\n\n7.1 The Database is licensed by the Licensor “as is” and without any warranty of any kind, either express, implied, or arising by statute, custom, course of dealing, or trade usage. Licensor specifically disclaims any and all implied warranties or conditions of title, non-infringement, accuracy or completeness, the presence or absence of errors, fitness for a particular purpose, merchantability, or otherwise. Some jurisdictions do not allow the exclusion of implied warranties, so this exclusion may not apply to You.\n\n\n\n8.1 Subject to any liability that may not be excluded or limited by law, the Licensor is not liable for, and expressly excludes, all liability for loss or damage however and whenever caused to anyone by any use under this License, whether by You or by anyone else, and whether caused by any fault on the part of the Licensor or not. This exclusion of liability includes, but is not limited to, any special, incidental, consequential, punitive, or exemplary damages such as loss of revenue, data, anticipated profits, and lost business. This exclusion applies even if the Licensor has been advised of the possibility of such damages.\n8.2 If liability may not be excluded by law, it is limited to actual and direct financial loss to the extent it is caused by proved negligence on the part of the Licensor.\n\n\n\n9.1 Any breach by You of the terms and conditions of this License automatically terminates this License with immediate effect and without notice to You. For the avoidance of doubt, Persons who have received the Database, the whole or a Substantial part of the Contents, Derivative Databases, or the Database as part of a Collective Database from You under this License will not have their licenses terminated provided their use is in full compliance with this License or a license granted under Section 4.8 of this License. Sections 1, 2, 7, 8, 9 and 10 will survive any termination of this License.\n9.2 If You are not in breach of the terms of this License, the Licensor will not terminate Your rights under it.\n9.3 Unless terminated under Section 9.1, this License is granted to You for the duration of applicable rights in the Database.\n9.4 Reinstatement of rights. If you cease any breach of the terms and conditions of this License, then your full rights under this License will be reinstated:\n\nProvisionally and subject to permanent termination until the 60th day after cessation of breach;\nPermanently on the 60th day after cessation of breach unless otherwise reasonably notified by the Licensor; or\nPermanently if reasonably notified by the Licensor of the violation, this is the first time You have received notice of violation of this License from the Licensor, and You cure the violation prior to 30 days after your receipt of the notice.\n\nPersons subject to permanent termination of rights are not eligible to be a recipient and receive a license under Section 4.8.\n9.5 Notwithstanding the above, Licensor reserves the right to release the Database under different license terms or to stop distributing or making available the Database. Releasing the Database under different license terms or stopping the distribution of the Database will not withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above.\n\n\n\n10.1 If any provision of this License is held to be invalid or unenforceable, that must not affect the validity or enforceability of the remainder of the terms and conditions of this License and each remaining provision of this License shall be valid and enforced to the fullest extent permitted by law.\n10.2 This License is the entire agreement between the parties with respect to the rights granted here over the Database. It replaces any earlier understandings, agreements or representations with respect to the Database.\n10.3 If You are in breach of the terms of this License, You will not be entitled to rely on the terms of this License or to complain of any breach by the Licensor.\n10.4 Choice of law. This License takes effect in and will be governed by the laws of the relevant jurisdiction in which the License terms are sought to be enforced. If the standard suite of rights granted under applicable copyright law and Database Rights in the relevant jurisdiction includes additional rights not granted under this License, these additional rights are granted in this License in order to meet the terms of this License",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "License (Geodata)"
    ]
  },
  {
    "objectID": "LICENSE-ODbL.html#open-database-license-odbl",
    "href": "LICENSE-ODbL.html#open-database-license-odbl",
    "title": "Open Data Commons Open Database License (ODbL) v1.0",
    "section": "",
    "text": "The Open Database License (ODbL) is a license agreement intended to allow users to freely share, modify, and use this Database while maintaining this same freedom for others. Many databases are covered by copyright, and therefore this document licenses these rights. Some jurisdictions, mainly in the European Union, have specific rights that cover databases, and so the ODbL addresses these rights, too. Finally, the ODbL is also an agreement in contract for users of this Database to act in certain ways in return for accessing this Database.\nDatabases can contain a wide variety of types of content (images, audiovisual material, and sounds all in the same database, for example), and so the ODbL only governs the rights over the Database, and not the contents of the Database individually. Licensors should use the ODbL together with another license for the contents, if the contents have a single set of rights that uniformly covers all of the contents. If the contents have multiple sets of different rights, Licensors should describe what rights govern what contents together in the individual record or in some other way that clarifies what rights apply.\nSometimes the contents of a database, or the database itself, can be covered by other rights not addressed here (such as private contracts, trade mark over the name, or privacy rights / data protection rights over information in the contents), and so you are advised that you may have to consult other documents or clear other rights before doing activities not covered by this License.\nThe Licensor (as defined below)\nand\nYou (as defined below)\nagree as follows:\n\n\n\n“Collective Database” – Means this Database in unmodified form as part of a collection of independent databases in themselves that together are assembled into a collective whole. A work that constitutes a Collective Database will not be considered a Derivative Database.\n“Convey” – As a verb, means Using the Database, a Derivative Database, or the Database as part of a Collective Database in any way that enables a Person to make or receive copies of the Database or a Derivative Database. Conveying does not include interaction with a user through a computer network, or creating and Using a Produced Work, where no transfer of a copy of the Database or a Derivative Database occurs. “Contents” – The contents of this Database, which includes the information, independent works, or other material collected into the Database. For example, the contents of the Database could be factual data or works such as images, audiovisual material, text, or sounds.\n“Database” – A collection of material (the Contents) arranged in a systematic or methodical way and individually accessible by electronic or other means offered under the terms of this License.\n“Database Directive” – Means Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended or succeeded.\n“Database Right” – Means rights resulting from the Chapter III (“sui generis”) rights in the Database Directive (as amended and as transposed by member states), which includes the Extraction and Re-utilisation of the whole or a Substantial part of the Contents, as well as any similar rights available in the relevant jurisdiction under Section 10.4.\n“Derivative Database” – Means a database based upon the Database, and includes any translation, adaptation, arrangement, modification, or any other alteration of the Database or of a Substantial part of the Contents. This includes, but is not limited to, Extracting or Re-utilising the whole or a Substantial part of the Contents in a new Database.\n“Extraction” – Means the permanent or temporary transfer of all or a Substantial part of the Contents to another medium by any means or in any form.\n“License” – Means this license agreement and is both a license of rights such as copyright and Database Rights and an agreement in contract.\n“Licensor” – Means the Person that offers the Database under the terms of this License.\n“Person” – Means a natural or legal person or a body of persons corporate or incorporate.\n“Produced Work” – a work (such as an image, audiovisual material, text, or sounds) resulting from using the whole or a Substantial part of the Contents (via a search or other query) from this Database, a Derivative Database, or this Database as part of a Collective Database.\n“Publicly” – means to Persons other than You or under Your control by either more than 50% ownership or by the power to direct their activities (such as contracting with an independent consultant).\n“Re-utilisation” – means any form of making available to the public all or a Substantial part of the Contents by the distribution of copies, by renting, by online or other forms of transmission.\n“Substantial” – Means substantial in terms of quantity or quality or a combination of both. The repeated and systematic Extraction or Re-utilisation of insubstantial parts of the Contents may amount to the Extraction or Re-utilisation of a Substantial part of the Contents.\n“Use” – As a verb, means doing any act that is restricted by copyright or Database Rights whether in the original medium or any other; and includes without limitation distributing, copying, publicly performing, publicly displaying, and preparing derivative works of the Database, as well as modifying the Database as may be technically necessary to use it in a different mode or format.\n“You” – Means a Person exercising rights under this License who has not previously violated the terms of this License with respect to the Database, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation.\nWords in the singular include the plural and vice versa.\n\n\n\n2.1. Legal effect of this document. This License is:\n\nA license of applicable copyright and neighbouring rights;\nA license of the Database Right; and\nAn agreement in contract between You and the Licensor.\n\n2.2 Legal rights covered. This License covers the legal rights in the Database, including:\n\nCopyright. Any copyright or neighbouring rights in the Database. The copyright licensed includes any individual elements of the Database, but does not cover the copyright over the Contents independent of this Database. See Section 2.4 for details. Copyright law varies between jurisdictions, but is likely to cover: the Database model or schema, which is the structure, arrangement, and organisation of the Database, and can also include the Database tables and table indexes; the data entry and output sheets; and the Field names of Contents stored in the Database;\nDatabase Rights. Database Rights only extend to the Extraction and Re-utilisation of the whole or a Substantial part of the Contents. Database Rights can apply even when there is no copyright over the Database. Database Rights can also apply when the Contents are removed from the Database and are selected and arranged in a way that would not infringe any applicable copyright; and\nContract. This is an agreement between You and the Licensor for access to the Database. In return you agree to certain conditions of use on this access as outlined in this License.\n\n2.3 Rights not covered.\n\nThis License does not apply to computer programs used in the making or operation of the Database;\nThis License does not cover any patents over the Contents or the Database; and\nThis License does not cover any trademarks associated with the Database.\n\n2.4 Relationship to Contents in the Database. The individual items of the Contents contained in this Database may be covered by other rights, including copyright, patent, data protection, privacy, or personality rights, and this License does not cover any rights (other than Database Rights or in contract) in individual Contents contained in the Database. For example, if used on a Database of images (the Contents), this License would not apply to copyright over individual images, which could have their own separate licenses, or one single license covering all of the rights over the images.\n\n\n\n3.1 Subject to the terms and conditions of this License, the Licensor grants to You a worldwide, royalty-free, non-exclusive, terminable (but only under Section 9) license to Use the Database for the duration of any applicable copyright and Database Rights. These rights explicitly include commercial use, and do not exclude any field of endeavour. To the extent possible in the relevant jurisdiction, these rights may be exercised in all media and formats whether now known or created in the future.\nThe rights granted cover, for example:\n\nExtraction and Re-utilisation of the whole or a Substantial part of the Contents;\nCreation of Derivative Databases;\nCreation of Collective Databases;\nCreation of temporary or permanent reproductions by any means and in any form, in whole or in part, including of any Derivative Databases or as a part of Collective Databases; and\nDistribution, communication, display, lending, making available, or performance to the public by any means and in any form, in whole or in part, including of any Derivative Database or as a part of Collective Databases.\n\n3.2 Compulsory license schemes. For the avoidance of doubt:\n\nNon-waivable compulsory license schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License;\nWaivable compulsory license schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and,\nVoluntary license schemes. The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License.\n\n3.3 The right to release the Database under different terms, or to stop distributing or making available the Database, is reserved. Note that this Database may be multiple-licensed, and so You may have the choice of using alternative licenses for this Database. Subject to Section 10.4, all other rights not expressly granted by Licensor are reserved.\n\n\n\n4.1 The rights granted in Section 3 above are expressly made subject to Your complying with the following conditions of use. These are important conditions of this License, and if You fail to follow them, You will be in material breach of its terms.\n4.2 Notices. If You Publicly Convey this Database, any Derivative Database, or the Database as part of a Collective Database, then You must:\n\nDo so only under the terms of this License or another license permitted under Section 4.4;\nInclude a copy of this License (or, as applicable, a license permitted under Section 4.4) or its Uniform Resource Identifier (URI) with the Database or Derivative Database, including both in the Database or Derivative Database and in any relevant documentation; and\nKeep intact any copyright or Database Right notices and notices that refer to this License.\nIf it is not possible to put the required notices in a particular file due to its structure, then You must include the notices in a location (such as a relevant directory) where users would be likely to look for it.\n\n4.3 Notice for using output (Contents). Creating and Using a Produced Work does not require the notice in Section 4.2. However, if you Publicly Use a Produced Work, You must include a notice associated with the Produced Work reasonably calculated to make any Person that uses, views, accesses, interacts with, or is otherwise exposed to the Produced Work aware that Content was obtained from the Database, Derivative Database, or the Database as part of a Collective Database, and that it is available under this License.\n\nExample notice. The following text will satisfy notice under Section 4.3:\n\nContains information from DATABASE NAME, which is made available here under the Open Database License (ODbL). DATABASE NAME should be replaced with the name of the Database and a hyperlink to the URI of the Database. “Open Database License” should contain a hyperlink to the URI of the text of this License. If hyperlinks are not possible, You should include the plain text of the required URI’s with the above notice.\n4.4 Share alike.\n\nAny Derivative Database that You Publicly Use must be only under the terms of:\nThis License;\n\n\nA later version of this License similar in spirit to this License; or\nA compatible license.\n\nIf You license the Derivative Database under one of the licenses mentioned in (iii), You must comply with the terms of that license.\n\nFor the avoidance of doubt, Extraction or Re-utilisation of the whole or a Substantial part of the Contents into a new database is a Derivative Database and must comply with Section 4.4.\nDerivative Databases and Produced Works. A Derivative Database is Publicly Used and so must comply with Section 4.4. if a Produced Work created from the Derivative Database is Publicly Used.\nShare Alike and additional Contents. For the avoidance of doubt, You must not add Contents to Derivative Databases under Section 4.4 a that are incompatible with the rights granted under this License.\nCompatible licenses. Licensors may authorise a proxy to determine compatible licenses under Section 4.4 a iii. If they do so, the authorised proxy’s public statement of acceptance of a compatible license grants You permission to use the compatible license.\n\n4.5 Limits of Share Alike. The requirements of Section 4.4 do not apply in the following:\n\nFor the avoidance of doubt, You are not required to license Collective Databases under this License if You incorporate this Database or a Derivative Database in the collection, but this License still applies to this Database or a Derivative Database as a part of the Collective Database;\nUsing this Database, a Derivative Database, or this Database as part of a Collective Database to create a Produced Work does not create a Derivative Database for purposes of Section 4.4; and\nUse of a Derivative Database internally within an organisation is not to the public and therefore does not fall under the requirements of Section 4.4.\n\n4.6 Access to Derivative Databases. If You Publicly Use a Derivative Database or a Produced Work from a Derivative Database, You must also offer to recipients of the Derivative Database or Produced Work a copy in a machine readable form of:\n\nThe entire Derivative Database; or\nA file containing all of the alterations made to the Database or the method of making the alterations to the Database (such as an algorithm), including any additional Contents, that make up all the differences between the Database and the Derivative Database.\n\nThe Derivative Database (under a.) or alteration file (under b.) must be available at no more than a reasonable production cost for physical distributions and free of charge if distributed over the internet.\n4.7 Technological measures and additional terms\n\nThis License does not allow You to impose (except subject to Section 4.7 b.) any terms or any technological measures on the Database, a Derivative Database, or the whole or a Substantial part of the Contents that alter or restrict the terms of this License, or any rights granted under it, or have the effect or intent of restricting the ability of any person to exercise those rights.\nParallel distribution. You may impose terms or technological measures on the Database, a Derivative Database, or the whole or a Substantial part of the Contents (a “Restricted Database”) in contravention of Section 4.74 a. only if You also make a copy of the Database or a Derivative Database available to the recipient of the Restricted Database:\nThat is available without additional fee;\n\n\nThat is available in a medium that does not alter or restrict the terms of this License, or any rights granted under it, or have the effect or intent of restricting the ability of any person to exercise those rights (an “Unrestricted Database”); and\nThe Unrestricted Database is at least as accessible to the recipient as a practical matter as the Restricted Database.\nFor the avoidance of doubt, You may place this Database or a Derivative Database in an authenticated environment, behind a password, or within a similar access control scheme provided that You do not alter or restrict the terms of this License or any rights granted under it or have the effect or intent of restricting the ability of any person to exercise those rights.\n\n4.8 Licensing of others. You may not sublicense the Database. Each time You communicate the Database, the whole or Substantial part of the Contents, or any Derivative Database to anyone else in any way, the Licensor offers to the recipient a license to the Database on the same terms and conditions as this License. You are not responsible for enforcing compliance by third parties with this License, but You may enforce any rights that You have over a Derivative Database. You are solely responsible for any modifications of a Derivative Database made by You or another Person at Your direction. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.\n\n\n\n5.1 Moral rights. This section covers moral rights, including any rights to be identified as the author of the Database or to object to treatment that would otherwise prejudice the author’s honour and reputation, or any other derogatory treatment:\n\nFor jurisdictions allowing waiver of moral rights, Licensor waives all moral rights that Licensor may have in the Database to the fullest extent possible by the law of the relevant jurisdiction under Section 10.4;\nIf waiver of moral rights under Section 5.1 a in the relevant jurisdiction is not possible, Licensor agrees not to assert any moral rights over the Database and waives all claims in moral rights to the fullest extent possible by the law of the relevant jurisdiction under Section 10.4; and\nFor jurisdictions not allowing waiver or an agreement not to assert moral rights under Section 5.1 a and b, the author may retain their moral rights over certain aspects of the Database.\n\nPlease note that some jurisdictions do not allow for the waiver of moral rights, and so moral rights may still subsist over the Database in some jurisdictions.\n\n\n\n6.1 This License does not affect any rights that You or anyone else may independently have under any applicable law to make any use of this Database, including without limitation:\n\nExceptions to the Database Right including: Extraction of Contents from non-electronic Databases for private purposes, Extraction for purposes of illustration for teaching or scientific research, and Extraction or Re-utilisation for public security or an administrative or judicial procedure.\nFair dealing, fair use, or any other legally recognised limitation or exception to infringement of copyright or other applicable laws.\n\n6.2 This License does not affect any rights of lawful users to Extract and Re-utilise insubstantial parts of the Contents, evaluated quantitatively or qualitatively, for any purposes whatsoever, including creating a Derivative Database (subject to other rights over the Contents, see Section 2.4). The repeated and systematic Extraction or Re-utilisation of insubstantial parts of the Contents may however amount to the Extraction or Re-utilisation of a Substantial part of the Contents.\n\n\n\n7.1 The Database is licensed by the Licensor “as is” and without any warranty of any kind, either express, implied, or arising by statute, custom, course of dealing, or trade usage. Licensor specifically disclaims any and all implied warranties or conditions of title, non-infringement, accuracy or completeness, the presence or absence of errors, fitness for a particular purpose, merchantability, or otherwise. Some jurisdictions do not allow the exclusion of implied warranties, so this exclusion may not apply to You.\n\n\n\n8.1 Subject to any liability that may not be excluded or limited by law, the Licensor is not liable for, and expressly excludes, all liability for loss or damage however and whenever caused to anyone by any use under this License, whether by You or by anyone else, and whether caused by any fault on the part of the Licensor or not. This exclusion of liability includes, but is not limited to, any special, incidental, consequential, punitive, or exemplary damages such as loss of revenue, data, anticipated profits, and lost business. This exclusion applies even if the Licensor has been advised of the possibility of such damages.\n8.2 If liability may not be excluded by law, it is limited to actual and direct financial loss to the extent it is caused by proved negligence on the part of the Licensor.\n\n\n\n9.1 Any breach by You of the terms and conditions of this License automatically terminates this License with immediate effect and without notice to You. For the avoidance of doubt, Persons who have received the Database, the whole or a Substantial part of the Contents, Derivative Databases, or the Database as part of a Collective Database from You under this License will not have their licenses terminated provided their use is in full compliance with this License or a license granted under Section 4.8 of this License. Sections 1, 2, 7, 8, 9 and 10 will survive any termination of this License.\n9.2 If You are not in breach of the terms of this License, the Licensor will not terminate Your rights under it.\n9.3 Unless terminated under Section 9.1, this License is granted to You for the duration of applicable rights in the Database.\n9.4 Reinstatement of rights. If you cease any breach of the terms and conditions of this License, then your full rights under this License will be reinstated:\n\nProvisionally and subject to permanent termination until the 60th day after cessation of breach;\nPermanently on the 60th day after cessation of breach unless otherwise reasonably notified by the Licensor; or\nPermanently if reasonably notified by the Licensor of the violation, this is the first time You have received notice of violation of this License from the Licensor, and You cure the violation prior to 30 days after your receipt of the notice.\n\nPersons subject to permanent termination of rights are not eligible to be a recipient and receive a license under Section 4.8.\n9.5 Notwithstanding the above, Licensor reserves the right to release the Database under different license terms or to stop distributing or making available the Database. Releasing the Database under different license terms or stopping the distribution of the Database will not withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above.\n\n\n\n10.1 If any provision of this License is held to be invalid or unenforceable, that must not affect the validity or enforceability of the remainder of the terms and conditions of this License and each remaining provision of this License shall be valid and enforced to the fullest extent permitted by law.\n10.2 This License is the entire agreement between the parties with respect to the rights granted here over the Database. It replaces any earlier understandings, agreements or representations with respect to the Database.\n10.3 If You are in breach of the terms of this License, You will not be entitled to rely on the terms of this License or to complain of any breach by the Licensor.\n10.4 Choice of law. This License takes effect in and will be governed by the laws of the relevant jurisdiction in which the License terms are sought to be enforced. If the standard suite of rights granted under applicable copyright law and Database Rights in the relevant jurisdiction includes additional rights not granted under this License, these additional rights are granted in this License in order to meet the terms of this License",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "License (Geodata)"
    ]
  },
  {
    "objectID": "SECURITY.html",
    "href": "SECURITY.html",
    "title": "Security Policy",
    "section": "",
    "text": "To report a security issue, please email moritz.twente@unibas.ch with a description of the issue, the steps you took to create the issue, affected versions, and, if known, mitigations for the issue. This project follows a 90 day disclosure timeline.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Security"
    ]
  },
  {
    "objectID": "SECURITY.html#reporting-a-vulnerability",
    "href": "SECURITY.html#reporting-a-vulnerability",
    "title": "Security Policy",
    "section": "",
    "text": "To report a security issue, please email moritz.twente@unibas.ch with a description of the issue, the steps you took to create the issue, affected versions, and, if known, mitigations for the issue. This project follows a 90 day disclosure timeline.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Security"
    ]
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contributing",
    "section": "",
    "text": "When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Contributing"
    ]
  },
  {
    "objectID": "CONTRIBUTING.html#pull-request-process",
    "href": "CONTRIBUTING.html#pull-request-process",
    "title": "Contributing",
    "section": "",
    "text": "Ensure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.",
    "crumbs": [
      "Data",
      "maxvogt-analysis",
      "Contributing"
    ]
  }
]